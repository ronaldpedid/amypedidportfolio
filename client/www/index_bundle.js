!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/public/",n(n.s="./src/index.js")}({"./index.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./index.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./node_modules/babel-runtime/core-js/object/create.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/create.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/define-property.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/define-property.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/get-prototype-of.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/get-prototype-of.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/set-prototype-of.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/set-prototype-of.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/promise.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/promise.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/symbol.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/symbol/index.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/symbol/iterator.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/symbol/iterator.js"),__esModule:!0}},"./node_modules/babel-runtime/helpers/asyncToGenerator.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/core-js/promise.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){return function(){var t=e.apply(this,arguments);return new i.default(function(e,n){return function r(o,a){try{var l=t[o](a),s=l.value}catch(e){return void n(e)}if(!l.done)return i.default.resolve(s).then(function(e){r("next",e)},function(e){r("throw",e)});e(s)}("next")})}}},"./node_modules/babel-runtime/helpers/classCallCheck.js":function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},"./node_modules/babel-runtime/helpers/createClass.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/core-js/object/define-property.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},"./node_modules/babel-runtime/helpers/inherits.js":function(e,t,n){"use strict";t.__esModule=!0;var r=a(n("./node_modules/babel-runtime/core-js/object/set-prototype-of.js")),o=a(n("./node_modules/babel-runtime/core-js/object/create.js")),i=a(n("./node_modules/babel-runtime/helpers/typeof.js"));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(r.default?(0,r.default)(e,t):e.__proto__=t)}},"./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/helpers/typeof.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,i.default)(t))&&"function"!=typeof t?e:t}},"./node_modules/babel-runtime/helpers/typeof.js":function(e,t,n){"use strict";t.__esModule=!0;var r=a(n("./node_modules/babel-runtime/core-js/symbol/iterator.js")),o=a(n("./node_modules/babel-runtime/core-js/symbol.js")),i="function"==typeof o.default&&"symbol"==typeof r.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function a(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(r.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},"./node_modules/babel-runtime/regenerator/index.js":function(e,t,n){e.exports=n("./node_modules/regenerator-runtime/runtime-module.js")},"./node_modules/core-js/library/fn/object/create.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.create.js");var r=n("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,t){return r.create(e,t)}},"./node_modules/core-js/library/fn/object/define-property.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.define-property.js");var r=n("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},"./node_modules/core-js/library/fn/object/get-prototype-of.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.get-prototype-of.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Object.getPrototypeOf},"./node_modules/core-js/library/fn/object/set-prototype-of.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.set-prototype-of.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf},"./node_modules/core-js/library/fn/promise.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.to-string.js"),n("./node_modules/core-js/library/modules/es6.string.iterator.js"),n("./node_modules/core-js/library/modules/web.dom.iterable.js"),n("./node_modules/core-js/library/modules/es6.promise.js"),n("./node_modules/core-js/library/modules/es7.promise.finally.js"),n("./node_modules/core-js/library/modules/es7.promise.try.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Promise},"./node_modules/core-js/library/fn/symbol/index.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.symbol.js"),n("./node_modules/core-js/library/modules/es6.object.to-string.js"),n("./node_modules/core-js/library/modules/es7.symbol.async-iterator.js"),n("./node_modules/core-js/library/modules/es7.symbol.observable.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Symbol},"./node_modules/core-js/library/fn/symbol/iterator.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.string.iterator.js"),n("./node_modules/core-js/library/modules/web.dom.iterable.js"),e.exports=n("./node_modules/core-js/library/modules/_wks-ext.js").f("iterator")},"./node_modules/core-js/library/modules/_a-function.js":function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},"./node_modules/core-js/library/modules/_add-to-unscopables.js":function(e,t){e.exports=function(){}},"./node_modules/core-js/library/modules/_an-instance.js":function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},"./node_modules/core-js/library/modules/_an-object.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},"./node_modules/core-js/library/modules/_array-includes.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-iobject.js"),o=n("./node_modules/core-js/library/modules/_to-length.js"),i=n("./node_modules/core-js/library/modules/_to-absolute-index.js");e.exports=function(e){return function(t,n,a){var l,s=r(t),u=o(s.length),c=i(a,u);if(e&&n!=n){for(;u>c;)if((l=s[c++])!=l)return!0}else for(;u>c;c++)if((e||c in s)&&s[c]===n)return e||c||0;return!e&&-1}}},"./node_modules/core-js/library/modules/_classof.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},"./node_modules/core-js/library/modules/_cof.js":function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},"./node_modules/core-js/library/modules/_core.js":function(e,t){var n=e.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},"./node_modules/core-js/library/modules/_ctx.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_a-function.js");e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},"./node_modules/core-js/library/modules/_defined.js":function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},"./node_modules/core-js/library/modules/_descriptors.js":function(e,t,n){e.exports=!n("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_dom-create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js"),o=n("./node_modules/core-js/library/modules/_global.js").document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},"./node_modules/core-js/library/modules/_enum-bug-keys.js":function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},"./node_modules/core-js/library/modules/_enum-keys.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys.js"),o=n("./node_modules/core-js/library/modules/_object-gops.js"),i=n("./node_modules/core-js/library/modules/_object-pie.js");e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,l=n(e),s=i.f,u=0;l.length>u;)s.call(e,a=l[u++])&&t.push(a);return t}},"./node_modules/core-js/library/modules/_export.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_ctx.js"),a=n("./node_modules/core-js/library/modules/_hide.js"),l=n("./node_modules/core-js/library/modules/_has.js"),s=function(e,t,n){var u,c,d,f=e&s.F,p=e&s.G,m=e&s.S,h=e&s.P,b=e&s.B,y=e&s.W,g=p?o:o[t]||(o[t]={}),v=g.prototype,A=p?r:m?r[t]:(r[t]||{}).prototype;for(u in p&&(n=t),n)(c=!f&&A&&void 0!==A[u])&&l(g,u)||(d=c?A[u]:n[u],g[u]=p&&"function"!=typeof A[u]?n[u]:b&&c?i(d,r):y&&A[u]==d?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):h&&"function"==typeof d?i(Function.call,d):d,h&&((g.virtual||(g.virtual={}))[u]=d,e&s.R&&v&&!v[u]&&a(v,u,d)))};s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},"./node_modules/core-js/library/modules/_fails.js":function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},"./node_modules/core-js/library/modules/_for-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_ctx.js"),o=n("./node_modules/core-js/library/modules/_iter-call.js"),i=n("./node_modules/core-js/library/modules/_is-array-iter.js"),a=n("./node_modules/core-js/library/modules/_an-object.js"),l=n("./node_modules/core-js/library/modules/_to-length.js"),s=n("./node_modules/core-js/library/modules/core.get-iterator-method.js"),u={},c={};(t=e.exports=function(e,t,n,d,f){var p,m,h,b,y=f?function(){return e}:s(e),g=r(n,d,t?2:1),v=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(i(y)){for(p=l(e.length);p>v;v++)if((b=t?g(a(m=e[v])[0],m[1]):g(e[v]))===u||b===c)return b}else for(h=y.call(e);!(m=h.next()).done;)if((b=o(h,g,m.value,t))===u||b===c)return b}).BREAK=u,t.RETURN=c},"./node_modules/core-js/library/modules/_global.js":function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},"./node_modules/core-js/library/modules/_has.js":function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},"./node_modules/core-js/library/modules/_hide.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js");e.exports=n("./node_modules/core-js/library/modules/_descriptors.js")?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},"./node_modules/core-js/library/modules/_html.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js").document;e.exports=r&&r.documentElement},"./node_modules/core-js/library/modules/_ie8-dom-define.js":function(e,t,n){e.exports=!n("./node_modules/core-js/library/modules/_descriptors.js")&&!n("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty(n("./node_modules/core-js/library/modules/_dom-create.js")("div"),"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_invoke.js":function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},"./node_modules/core-js/library/modules/_iobject.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},"./node_modules/core-js/library/modules/_is-array-iter.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_iterators.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},"./node_modules/core-js/library/modules/_is-array.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js");e.exports=Array.isArray||function(e){return"Array"==r(e)}},"./node_modules/core-js/library/modules/_is-object.js":function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"./node_modules/core-js/library/modules/_iter-call.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js");e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},"./node_modules/core-js/library/modules/_iter-create.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_object-create.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js"),i=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),a={};n("./node_modules/core-js/library/modules/_hide.js")(a,n("./node_modules/core-js/library/modules/_wks.js")("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},"./node_modules/core-js/library/modules/_iter-define.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_library.js"),o=n("./node_modules/core-js/library/modules/_export.js"),i=n("./node_modules/core-js/library/modules/_redefine.js"),a=n("./node_modules/core-js/library/modules/_hide.js"),l=n("./node_modules/core-js/library/modules/_iterators.js"),s=n("./node_modules/core-js/library/modules/_iter-create.js"),u=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),c=n("./node_modules/core-js/library/modules/_object-gpo.js"),d=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,b,y){s(n,t,m);var g,v,A,_=function(e){if(!f&&e in w)return w[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},E=t+" Iterator",x="values"==h,j=!1,w=e.prototype,C=w[d]||w["@@iterator"]||h&&w[h],k=C||_(h),B=h?x?_("entries"):k:void 0,T="Array"==t&&w.entries||C;if(T&&(A=c(T.call(new e)))!==Object.prototype&&A.next&&(u(A,E,!0),r||"function"==typeof A[d]||a(A,d,p)),x&&C&&"values"!==C.name&&(j=!0,k=function(){return C.call(this)}),r&&!y||!f&&!j&&w[d]||a(w,d,k),l[t]=k,l[E]=p,h)if(g={values:x?k:_("values"),keys:b?k:_("keys"),entries:B},y)for(v in g)v in w||i(w,v,g[v]);else o(o.P+o.F*(f||j),t,g);return g}},"./node_modules/core-js/library/modules/_iter-detect.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},"./node_modules/core-js/library/modules/_iter-step.js":function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},"./node_modules/core-js/library/modules/_iterators.js":function(e,t){e.exports={}},"./node_modules/core-js/library/modules/_library.js":function(e,t){e.exports=!0},"./node_modules/core-js/library/modules/_meta.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_uid.js")("meta"),o=n("./node_modules/core-js/library/modules/_is-object.js"),i=n("./node_modules/core-js/library/modules/_has.js"),a=n("./node_modules/core-js/library/modules/_object-dp.js").f,l=0,s=Object.isExtensible||function(){return!0},u=!n("./node_modules/core-js/library/modules/_fails.js")(function(){return s(Object.preventExtensions({}))}),c=function(e){a(e,r,{value:{i:"O"+ ++l,w:{}}})},d=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!s(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!s(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return u&&d.NEED&&s(e)&&!i(e,r)&&c(e),e}}},"./node_modules/core-js/library/modules/_microtask.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_task.js").set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,l=r.Promise,s="process"==n("./node_modules/core-js/library/modules/_cof.js")(a);e.exports=function(){var e,t,n,u=function(){var r,o;for(s&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){a.nextTick(u)};else if(!i||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var c=l.resolve(void 0);n=function(){c.then(u)}}else n=function(){o.call(r,u)};else{var d=!0,f=document.createTextNode("");new i(u).observe(f,{characterData:!0}),n=function(){f.data=d=!d}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},"./node_modules/core-js/library/modules/_new-promise-capability.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_a-function.js");function o(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},"./node_modules/core-js/library/modules/_object-create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_object-dps.js"),i=n("./node_modules/core-js/library/modules/_enum-bug-keys.js"),a=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO"),l=function(){},s=function(){var e,t=n("./node_modules/core-js/library/modules/_dom-create.js")("iframe"),r=i.length;for(t.style.display="none",n("./node_modules/core-js/library/modules/_html.js").appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[i[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[a]=e):n=s(),void 0===t?n:o(n,t)}},"./node_modules/core-js/library/modules/_object-dp.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_ie8-dom-define.js"),i=n("./node_modules/core-js/library/modules/_to-primitive.js"),a=Object.defineProperty;t.f=n("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},"./node_modules/core-js/library/modules/_object-dps.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js"),o=n("./node_modules/core-js/library/modules/_an-object.js"),i=n("./node_modules/core-js/library/modules/_object-keys.js");e.exports=n("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),l=a.length,s=0;l>s;)r.f(e,n=a[s++],t[n]);return e}},"./node_modules/core-js/library/modules/_object-gopd.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-pie.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js"),i=n("./node_modules/core-js/library/modules/_to-iobject.js"),a=n("./node_modules/core-js/library/modules/_to-primitive.js"),l=n("./node_modules/core-js/library/modules/_has.js"),s=n("./node_modules/core-js/library/modules/_ie8-dom-define.js"),u=Object.getOwnPropertyDescriptor;t.f=n("./node_modules/core-js/library/modules/_descriptors.js")?u:function(e,t){if(e=i(e),t=a(t,!0),s)try{return u(e,t)}catch(e){}if(l(e,t))return o(!r.f.call(e,t),e[t])}},"./node_modules/core-js/library/modules/_object-gopn-ext.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-iobject.js"),o=n("./node_modules/core-js/library/modules/_object-gopn.js").f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},"./node_modules/core-js/library/modules/_object-gopn.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys-internal.js"),o=n("./node_modules/core-js/library/modules/_enum-bug-keys.js").concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},"./node_modules/core-js/library/modules/_object-gops.js":function(e,t){t.f=Object.getOwnPropertySymbols},"./node_modules/core-js/library/modules/_object-gpo.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_has.js"),o=n("./node_modules/core-js/library/modules/_to-object.js"),i=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},"./node_modules/core-js/library/modules/_object-keys-internal.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_has.js"),o=n("./node_modules/core-js/library/modules/_to-iobject.js"),i=n("./node_modules/core-js/library/modules/_array-includes.js")(!1),a=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO");e.exports=function(e,t){var n,l=o(e),s=0,u=[];for(n in l)n!=a&&r(l,n)&&u.push(n);for(;t.length>s;)r(l,n=t[s++])&&(~i(u,n)||u.push(n));return u}},"./node_modules/core-js/library/modules/_object-keys.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys-internal.js"),o=n("./node_modules/core-js/library/modules/_enum-bug-keys.js");e.exports=Object.keys||function(e){return r(e,o)}},"./node_modules/core-js/library/modules/_object-pie.js":function(e,t){t.f={}.propertyIsEnumerable},"./node_modules/core-js/library/modules/_object-sap.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_fails.js");e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",a)}},"./node_modules/core-js/library/modules/_perform.js":function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},"./node_modules/core-js/library/modules/_promise-resolve.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_is-object.js"),i=n("./node_modules/core-js/library/modules/_new-promise-capability.js");e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},"./node_modules/core-js/library/modules/_property-desc.js":function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},"./node_modules/core-js/library/modules/_redefine-all.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_hide.js");e.exports=function(e,t,n){for(var o in t)n&&e[o]?e[o]=t[o]:r(e,o,t[o]);return e}},"./node_modules/core-js/library/modules/_redefine.js":function(e,t,n){e.exports=n("./node_modules/core-js/library/modules/_hide.js")},"./node_modules/core-js/library/modules/_set-proto.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js"),o=n("./node_modules/core-js/library/modules/_an-object.js"),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n("./node_modules/core-js/library/modules/_ctx.js")(Function.call,n("./node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},"./node_modules/core-js/library/modules/_set-species.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_object-dp.js"),a=n("./node_modules/core-js/library/modules/_descriptors.js"),l=n("./node_modules/core-js/library/modules/_wks.js")("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:r[e];a&&t&&!t[l]&&i.f(t,l,{configurable:!0,get:function(){return this}})}},"./node_modules/core-js/library/modules/_set-to-string-tag.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js").f,o=n("./node_modules/core-js/library/modules/_has.js"),i=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},"./node_modules/core-js/library/modules/_shared-key.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_shared.js")("keys"),o=n("./node_modules/core-js/library/modules/_uid.js");e.exports=function(e){return r[e]||(r[e]=o(e))}},"./node_modules/core-js/library/modules/_shared.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_core.js"),o=n("./node_modules/core-js/library/modules/_global.js"),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n("./node_modules/core-js/library/modules/_library.js")?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},"./node_modules/core-js/library/modules/_species-constructor.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_a-function.js"),i=n("./node_modules/core-js/library/modules/_wks.js")("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[i])?t:o(n)}},"./node_modules/core-js/library/modules/_string-at.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return function(t,n){var i,a,l=String(o(t)),s=r(n),u=l.length;return s<0||s>=u?e?"":void 0:(i=l.charCodeAt(s))<55296||i>56319||s+1===u||(a=l.charCodeAt(s+1))<56320||a>57343?e?l.charAt(s):i:e?l.slice(s,s+2):a-56320+(i-55296<<10)+65536}}},"./node_modules/core-js/library/modules/_task.js":function(e,t,n){var r,o,i,a=n("./node_modules/core-js/library/modules/_ctx.js"),l=n("./node_modules/core-js/library/modules/_invoke.js"),s=n("./node_modules/core-js/library/modules/_html.js"),u=n("./node_modules/core-js/library/modules/_dom-create.js"),c=n("./node_modules/core-js/library/modules/_global.js"),d=c.process,f=c.setImmediate,p=c.clearImmediate,m=c.MessageChannel,h=c.Dispatch,b=0,y={},g=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},v=function(e){g.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++b]=function(){l("function"==typeof e?e:Function(e),t)},r(b),b},p=function(e){delete y[e]},"process"==n("./node_modules/core-js/library/modules/_cof.js")(d)?r=function(e){d.nextTick(a(g,e,1))}:h&&h.now?r=function(e){h.now(a(g,e,1))}:m?(i=(o=new m).port2,o.port1.onmessage=v,r=a(i.postMessage,i,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(e){c.postMessage(e+"","*")},c.addEventListener("message",v,!1)):r="onreadystatechange"in u("script")?function(e){s.appendChild(u("script")).onreadystatechange=function(){s.removeChild(this),g.call(e)}}:function(e){setTimeout(a(g,e,1),0)}),e.exports={set:f,clear:p}},"./node_modules/core-js/library/modules/_to-absolute-index.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},"./node_modules/core-js/library/modules/_to-integer.js":function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},"./node_modules/core-js/library/modules/_to-iobject.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_iobject.js"),o=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return r(o(e))}},"./node_modules/core-js/library/modules/_to-length.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},"./node_modules/core-js/library/modules/_to-object.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return Object(r(e))}},"./node_modules/core-js/library/modules/_to-primitive.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},"./node_modules/core-js/library/modules/_uid.js":function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},"./node_modules/core-js/library/modules/_user-agent.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js").navigator;e.exports=r&&r.userAgent||""},"./node_modules/core-js/library/modules/_wks-define.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_library.js"),a=n("./node_modules/core-js/library/modules/_wks-ext.js"),l=n("./node_modules/core-js/library/modules/_object-dp.js").f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:a.f(e)})}},"./node_modules/core-js/library/modules/_wks-ext.js":function(e,t,n){t.f=n("./node_modules/core-js/library/modules/_wks.js")},"./node_modules/core-js/library/modules/_wks.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_shared.js")("wks"),o=n("./node_modules/core-js/library/modules/_uid.js"),i=n("./node_modules/core-js/library/modules/_global.js").Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},"./node_modules/core-js/library/modules/core.get-iterator-method.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_classof.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),i=n("./node_modules/core-js/library/modules/_iterators.js");e.exports=n("./node_modules/core-js/library/modules/_core.js").getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},"./node_modules/core-js/library/modules/es6.array.iterator.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_add-to-unscopables.js"),o=n("./node_modules/core-js/library/modules/_iter-step.js"),i=n("./node_modules/core-js/library/modules/_iterators.js"),a=n("./node_modules/core-js/library/modules/_to-iobject.js");e.exports=n("./node_modules/core-js/library/modules/_iter-define.js")(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},"./node_modules/core-js/library/modules/es6.object.create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S,"Object",{create:n("./node_modules/core-js/library/modules/_object-create.js")})},"./node_modules/core-js/library/modules/es6.object.define-property.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S+r.F*!n("./node_modules/core-js/library/modules/_descriptors.js"),"Object",{defineProperty:n("./node_modules/core-js/library/modules/_object-dp.js").f})},"./node_modules/core-js/library/modules/es6.object.get-prototype-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-object.js"),o=n("./node_modules/core-js/library/modules/_object-gpo.js");n("./node_modules/core-js/library/modules/_object-sap.js")("getPrototypeOf",function(){return function(e){return o(r(e))}})},"./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S,"Object",{setPrototypeOf:n("./node_modules/core-js/library/modules/_set-proto.js").set})},"./node_modules/core-js/library/modules/es6.object.to-string.js":function(e,t){},"./node_modules/core-js/library/modules/es6.promise.js":function(e,t,n){"use strict";var r,o,i,a,l=n("./node_modules/core-js/library/modules/_library.js"),s=n("./node_modules/core-js/library/modules/_global.js"),u=n("./node_modules/core-js/library/modules/_ctx.js"),c=n("./node_modules/core-js/library/modules/_classof.js"),d=n("./node_modules/core-js/library/modules/_export.js"),f=n("./node_modules/core-js/library/modules/_is-object.js"),p=n("./node_modules/core-js/library/modules/_a-function.js"),m=n("./node_modules/core-js/library/modules/_an-instance.js"),h=n("./node_modules/core-js/library/modules/_for-of.js"),b=n("./node_modules/core-js/library/modules/_species-constructor.js"),y=n("./node_modules/core-js/library/modules/_task.js").set,g=n("./node_modules/core-js/library/modules/_microtask.js")(),v=n("./node_modules/core-js/library/modules/_new-promise-capability.js"),A=n("./node_modules/core-js/library/modules/_perform.js"),_=n("./node_modules/core-js/library/modules/_user-agent.js"),E=n("./node_modules/core-js/library/modules/_promise-resolve.js"),x=s.TypeError,j=s.process,w=j&&j.versions,C=w&&w.v8||"",k=s.Promise,B="process"==c(j),T=function(){},S=o=v.f,O=!!function(){try{var e=k.resolve(1),t=(e.constructor={})[n("./node_modules/core-js/library/modules/_wks.js")("species")]=function(e){e(T,T)};return(B||"function"==typeof PromiseRejectionEvent)&&e.then(T)instanceof t&&0!==C.indexOf("6.6")&&-1===_.indexOf("Chrome/66")}catch(e){}}(),P=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;g(function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,l=o?t.ok:t.fail,s=t.resolve,u=t.reject,c=t.domain;try{l?(o||(2==e._h&&N(e),e._h=1),!0===l?n=r:(c&&c.enter(),n=l(r),c&&(c.exit(),a=!0)),n===t.promise?u(x("Promise-chain cycle")):(i=P(n))?i.call(n,s,u):s(n)):u(r)}catch(e){c&&!a&&c.exit(),u(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&I(e)})}},I=function(e){y.call(s,function(){var t,n,r,o=e._v,i=R(e);if(i&&(t=A(function(){B?j.emit("unhandledRejection",o,e):(n=s.onunhandledrejection)?n({promise:e,reason:o}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=B||R(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},R=function(e){return 1!==e._h&&0===(e._a||e._c).length},N=function(e){y.call(s,function(){var t;B?j.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})})},L=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},F=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw x("Promise can't be resolved itself");(t=P(e))?g(function(){var r={_w:n,_d:!1};try{t.call(e,u(F,r,1),u(L,r,1))}catch(e){L.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){L.call({_w:n,_d:!1},e)}}};O||(k=function(e){m(this,k,"Promise","_h"),p(e),r.call(this);try{e(u(F,this,1),u(L,this,1))}catch(e){L.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n("./node_modules/core-js/library/modules/_redefine-all.js")(k.prototype,{then:function(e,t){var n=S(b(this,k));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=B?j.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=u(F,e,1),this.reject=u(L,e,1)},v.f=S=function(e){return e===k||e===a?new i(e):o(e)}),d(d.G+d.W+d.F*!O,{Promise:k}),n("./node_modules/core-js/library/modules/_set-to-string-tag.js")(k,"Promise"),n("./node_modules/core-js/library/modules/_set-species.js")("Promise"),a=n("./node_modules/core-js/library/modules/_core.js").Promise,d(d.S+d.F*!O,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(l||!O),"Promise",{resolve:function(e){return E(l&&this===a?k:this,e)}}),d(d.S+d.F*!(O&&n("./node_modules/core-js/library/modules/_iter-detect.js")(function(e){k.all(e).catch(T)})),"Promise",{all:function(e){var t=this,n=S(t),r=n.resolve,o=n.reject,i=A(function(){var n=[],i=0,a=1;h(e,!1,function(e){var l=i++,s=!1;n.push(void 0),a++,t.resolve(e).then(function(e){s||(s=!0,n[l]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=S(t),r=n.reject,o=A(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},"./node_modules/core-js/library/modules/es6.string.iterator.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_string-at.js")(!0);n("./node_modules/core-js/library/modules/_iter-define.js")(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},"./node_modules/core-js/library/modules/es6.symbol.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_has.js"),i=n("./node_modules/core-js/library/modules/_descriptors.js"),a=n("./node_modules/core-js/library/modules/_export.js"),l=n("./node_modules/core-js/library/modules/_redefine.js"),s=n("./node_modules/core-js/library/modules/_meta.js").KEY,u=n("./node_modules/core-js/library/modules/_fails.js"),c=n("./node_modules/core-js/library/modules/_shared.js"),d=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),f=n("./node_modules/core-js/library/modules/_uid.js"),p=n("./node_modules/core-js/library/modules/_wks.js"),m=n("./node_modules/core-js/library/modules/_wks-ext.js"),h=n("./node_modules/core-js/library/modules/_wks-define.js"),b=n("./node_modules/core-js/library/modules/_enum-keys.js"),y=n("./node_modules/core-js/library/modules/_is-array.js"),g=n("./node_modules/core-js/library/modules/_an-object.js"),v=n("./node_modules/core-js/library/modules/_is-object.js"),A=n("./node_modules/core-js/library/modules/_to-iobject.js"),_=n("./node_modules/core-js/library/modules/_to-primitive.js"),E=n("./node_modules/core-js/library/modules/_property-desc.js"),x=n("./node_modules/core-js/library/modules/_object-create.js"),j=n("./node_modules/core-js/library/modules/_object-gopn-ext.js"),w=n("./node_modules/core-js/library/modules/_object-gopd.js"),C=n("./node_modules/core-js/library/modules/_object-dp.js"),k=n("./node_modules/core-js/library/modules/_object-keys.js"),B=w.f,T=C.f,S=j.f,O=r.Symbol,P=r.JSON,M=P&&P.stringify,I=p("_hidden"),R=p("toPrimitive"),N={}.propertyIsEnumerable,L=c("symbol-registry"),F=c("symbols"),U=c("op-symbols"),z=Object.prototype,D="function"==typeof O,H=r.QObject,W=!H||!H.prototype||!H.prototype.findChild,Y=i&&u(function(){return 7!=x(T({},"a",{get:function(){return T(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=B(z,t);r&&delete z[t],T(e,t,n),r&&e!==z&&T(z,t,r)}:T,q=function(e){var t=F[e]=x(O.prototype);return t._k=e,t},V=D&&"symbol"==typeof O.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof O},Q=function(e,t,n){return e===z&&Q(U,t,n),g(e),t=_(t,!0),g(n),o(F,t)?(n.enumerable?(o(e,I)&&e[I][t]&&(e[I][t]=!1),n=x(n,{enumerable:E(0,!1)})):(o(e,I)||T(e,I,E(1,{})),e[I][t]=!0),Y(e,t,n)):T(e,t,n)},G=function(e,t){g(e);for(var n,r=b(t=A(t)),o=0,i=r.length;i>o;)Q(e,n=r[o++],t[n]);return e},J=function(e){var t=N.call(this,e=_(e,!0));return!(this===z&&o(F,e)&&!o(U,e))&&(!(t||!o(this,e)||!o(F,e)||o(this,I)&&this[I][e])||t)},K=function(e,t){if(e=A(e),t=_(t,!0),e!==z||!o(F,t)||o(U,t)){var n=B(e,t);return!n||!o(F,t)||o(e,I)&&e[I][t]||(n.enumerable=!0),n}},X=function(e){for(var t,n=S(A(e)),r=[],i=0;n.length>i;)o(F,t=n[i++])||t==I||t==s||r.push(t);return r},Z=function(e){for(var t,n=e===z,r=S(n?U:A(e)),i=[],a=0;r.length>a;)!o(F,t=r[a++])||n&&!o(z,t)||i.push(F[t]);return i};D||(l((O=function(){if(this instanceof O)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===z&&t.call(U,n),o(this,I)&&o(this[I],e)&&(this[I][e]=!1),Y(this,e,E(1,n))};return i&&W&&Y(z,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),w.f=K,C.f=Q,n("./node_modules/core-js/library/modules/_object-gopn.js").f=j.f=X,n("./node_modules/core-js/library/modules/_object-pie.js").f=J,n("./node_modules/core-js/library/modules/_object-gops.js").f=Z,i&&!n("./node_modules/core-js/library/modules/_library.js")&&l(z,"propertyIsEnumerable",J,!0),m.f=function(e){return q(p(e))}),a(a.G+a.W+a.F*!D,{Symbol:O});for(var $="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;$.length>ee;)p($[ee++]);for(var te=k(p.store),ne=0;te.length>ne;)h(te[ne++]);a(a.S+a.F*!D,"Symbol",{for:function(e){return o(L,e+="")?L[e]:L[e]=O(e)},keyFor:function(e){if(!V(e))throw TypeError(e+" is not a symbol!");for(var t in L)if(L[t]===e)return t},useSetter:function(){W=!0},useSimple:function(){W=!1}}),a(a.S+a.F*!D,"Object",{create:function(e,t){return void 0===t?x(e):G(x(e),t)},defineProperty:Q,defineProperties:G,getOwnPropertyDescriptor:K,getOwnPropertyNames:X,getOwnPropertySymbols:Z}),P&&a(a.S+a.F*(!D||u(function(){var e=O();return"[null]"!=M([e])||"{}"!=M({a:e})||"{}"!=M(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(v(t)||void 0!==e)&&!V(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!V(t))return t}),r[1]=t,M.apply(P,r)}}),O.prototype[R]||n("./node_modules/core-js/library/modules/_hide.js")(O.prototype,R,O.prototype.valueOf),d(O,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},"./node_modules/core-js/library/modules/es7.promise.finally.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_global.js"),a=n("./node_modules/core-js/library/modules/_species-constructor.js"),l=n("./node_modules/core-js/library/modules/_promise-resolve.js");r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then(function(){return n})}:e,n?function(n){return l(t,e()).then(function(){throw n})}:e)}})},"./node_modules/core-js/library/modules/es7.promise.try.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_new-promise-capability.js"),i=n("./node_modules/core-js/library/modules/_perform.js");r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},"./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":function(e,t,n){n("./node_modules/core-js/library/modules/_wks-define.js")("asyncIterator")},"./node_modules/core-js/library/modules/es7.symbol.observable.js":function(e,t,n){n("./node_modules/core-js/library/modules/_wks-define.js")("observable")},"./node_modules/core-js/library/modules/web.dom.iterable.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.array.iterator.js");for(var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_hide.js"),i=n("./node_modules/core-js/library/modules/_iterators.js"),a=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag"),l="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),s=0;s<l.length;s++){var u=l[s],c=r[u],d=c&&c.prototype;d&&!d[a]&&o(d,a,u),i[u]=i.Array}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./index.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,"* {\n  margin: 0;\n  padding: 0; }\n\nhtml {\n  box-sizing: border-box; }\n\nbody {\n  font-size: 10px;\n  background-color: white;\n  font-family: 'Barlow Condensed', sans-serif;\n  overflow-x: hidden; }\n\n.siteWrapper_2dPQL7tvJo3TZkVxw2UXi {\n  margin: 2rem; }\n\na:link, a:active, a:visited {\n  color: #000; }\n\na:hover {\n  color: #0095e7; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/index.scss"],names:[],mappings:"AAAA;EACE,UAAU;EACV,WAAW,EAAE;;AAEf;EACE,uBAAuB,EAAE;;AAE3B;EACE,gBAAgB;EAChB,wBAAwB;EACxB,4CAA4C;EAC5C,mBAAmB,EAAE;;AAEvB;EACE,aAAa,EAAE;;AAEjB;EACE,YAAY,EAAE;;AAEhB;EACE,eAAe,EAAE",file:"index.scss",sourcesContent:["* {\n  margin: 0;\n  padding: 0; }\n\nhtml {\n  box-sizing: border-box; }\n\nbody {\n  font-size: 10px;\n  background-color: white;\n  font-family: 'Barlow Condensed', sans-serif;\n  overflow-x: hidden; }\n\n.siteWrapper {\n  margin: 2rem; }\n\na:link, a:active, a:visited {\n  color: #000; }\n\na:hover {\n  color: #0095e7; }\n"],sourceRoot:""}]),t.locals={siteWrapper:"siteWrapper_2dPQL7tvJo3TZkVxw2UXi"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/block/block.scss":function(e,t,n){var r=n("./node_modules/css-loader/lib/url/escape.js");(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_3TwiOQZPpGY2LTFoHUxEp2, .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO, .block_IjYsoX2pMMTBeH1L55Pxi h1, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y h1, .wmblock_W0qK_qpH0nci9x2u-Se-a h1, .cariblock_2OT8qawHQU5ILYsQY4E2t5 h1, .tribeblock_13aFs-4UOFd71wXxF_am9e h1, .shpblock_cR48u2aO8OTIu5Jd7OopO h1, .block_IjYsoX2pMMTBeH1L55Pxi h2, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y h2, .wmblock_W0qK_qpH0nci9x2u-Se-a h2, .cariblock_2OT8qawHQU5ILYsQY4E2t5 h2, .tribeblock_13aFs-4UOFd71wXxF_am9e h2, .shpblock_cR48u2aO8OTIu5Jd7OopO h2 {\n  display: flex; }\n\n.col_qe1MOu9jeXuAWdv7n-ACx {\n  flex-direction: column; }\n\n.row_1kgeUsJXJX7CjTjXSu6ssX {\n  flex-direction: row; }\n\na {\n  text-decoration: none; }\n\n.block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n  width: 500px;\n  height: 500px;\n  max-width: 500px;\n  margin-left: 2rem;\n  align-self: center;\n  cursor: pointer;\n  background-color: #888888;\n  background-image: url("+r(n("./src/assets/astronomy.jpg"))+");\n  background-size: cover; }\n  .block_IjYsoX2pMMTBeH1L55Pxi h1, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y h1, .wmblock_W0qK_qpH0nci9x2u-Se-a h1, .cariblock_2OT8qawHQU5ILYsQY4E2t5 h1, .tribeblock_13aFs-4UOFd71wXxF_am9e h1, .shpblock_cR48u2aO8OTIu5Jd7OopO h1, .block_IjYsoX2pMMTBeH1L55Pxi h2, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y h2, .wmblock_W0qK_qpH0nci9x2u-Se-a h2, .cariblock_2OT8qawHQU5ILYsQY4E2t5 h2, .tribeblock_13aFs-4UOFd71wXxF_am9e h2, .shpblock_cR48u2aO8OTIu5Jd7OopO h2 {\n    justify-content: center;\n    width: 100%;\n    color: black;\n    background-color: #fff;\n    align-items: center;\n    margin: 0 auto; }\n  @media (max-width: 1150px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 425px;\n      height: 425px; } }\n  @media (max-width: 945px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 370px;\n      height: 370px; } }\n  @media (max-width: 768px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 320px;\n      height: 320px; } }\n  @media (max-width: 650px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 310px;\n      height: 310px; } }\n  @media (max-width: 600px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 300px;\n      height: 300px;\n      margin: 2rem auto; } }\n  @media (max-width: 425px) {\n    .block_IjYsoX2pMMTBeH1L55Pxi, .hoverBlock_2rJfBAVGkBe1trQDyFl68Y, .wmblock_W0qK_qpH0nci9x2u-Se-a, .cariblock_2OT8qawHQU5ILYsQY4E2t5, .tribeblock_13aFs-4UOFd71wXxF_am9e, .shpblock_cR48u2aO8OTIu5Jd7OopO {\n      width: 220px;\n      height: 220px; } }\n\n.hoverBlock_2rJfBAVGkBe1trQDyFl68Y {\n  background-image: none;\n  background-color: #fff;\n  margin-left: 0;\n  flex-direction: column;\n  justify-content: center;\n  text-decoration: none;\n  font-size: 1.6rem;\n  text-align: center; }\n  .hoverBlock_2rJfBAVGkBe1trQDyFl68Y h2 {\n    margin-top: 1rem;\n    color: #0095e7; }\n  @media (max-width: 600px) {\n    .hoverBlock_2rJfBAVGkBe1trQDyFl68Y {\n      font-size: 1.4rem;\n      text-align: center; } }\n  @media (max-width: 425px) {\n    .hoverBlock_2rJfBAVGkBe1trQDyFl68Y {\n      font-size: 1.2rem;\n      text-align: center; } }\n\n.wmblock_W0qK_qpH0nci9x2u-Se-a {\n  background-image: url("+r(n("./src/assets/tb-wm.png"))+"); }\n\n.cariblock_2OT8qawHQU5ILYsQY4E2t5 {\n  background-image: url("+r(n("./src/assets/tb-caribou.png"))+"); }\n\n.tribeblock_13aFs-4UOFd71wXxF_am9e {\n  background-image: url("+r(n("./src/assets/tb-hummus.png"))+"); }\n\n.shpblock_cR48u2aO8OTIu5Jd7OopO {\n  background-image: url("+r(n("./src/assets/tb-shp.png"))+"); }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/components/block/block.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE,sBAAsB,EAAE;;AAE1B;EACE,aAAa;EACb,cAAc;EACd,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;EACnB,gBAAgB;EAChB,0BAA0B;EAC1B,gDAAoD;EACpD,uBAAuB,EAAE;EACzB;IACE,wBAAwB;IACxB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,oBAAoB;IACpB,eAAe,EAAE;EACnB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc;MACd,kBAAkB,EAAE,EAAE;EAC1B;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,uBAAuB;EACvB,uBAAuB;EACvB,eAAe;EACf,uBAAuB;EACvB,wBAAwB;EACxB,sBAAsB;EACtB,kBAAkB;EAClB,mBAAmB,EAAE;EACrB;IACE,iBAAiB;IACjB,eAAe,EAAE;EACnB;IACE;MACE,kBAAkB;MAClB,mBAAmB,EAAE,EAAE;EAC3B;IACE;MACE,kBAAkB;MAClB,mBAAmB,EAAE,EAAE;;AAE7B;EACE,gDAAgD,EAAE;;AAEpD;EACE,gDAAqD,EAAE;;AAEzD;EACE,gDAAoD,EAAE;;AAExD;EACE,gDAAiD,EAAE",file:"block.scss",sourcesContent:['.flex, .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock, .block h1, .hoverBlock h1, .wmblock h1, .cariblock h1, .tribeblock h1, .shpblock h1, .block h2, .hoverBlock h2, .wmblock h2, .cariblock h2, .tribeblock h2, .shpblock h2 {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\na {\n  text-decoration: none; }\n\n.block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n  width: 500px;\n  height: 500px;\n  max-width: 500px;\n  margin-left: 2rem;\n  align-self: center;\n  cursor: pointer;\n  background-color: #888888;\n  background-image: url("../../assets/astronomy.jpg");\n  background-size: cover; }\n  .block h1, .hoverBlock h1, .wmblock h1, .cariblock h1, .tribeblock h1, .shpblock h1, .block h2, .hoverBlock h2, .wmblock h2, .cariblock h2, .tribeblock h2, .shpblock h2 {\n    justify-content: center;\n    width: 100%;\n    color: black;\n    background-color: #fff;\n    align-items: center;\n    margin: 0 auto; }\n  @media (max-width: 1150px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 425px;\n      height: 425px; } }\n  @media (max-width: 945px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 370px;\n      height: 370px; } }\n  @media (max-width: 768px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 320px;\n      height: 320px; } }\n  @media (max-width: 650px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 310px;\n      height: 310px; } }\n  @media (max-width: 600px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 300px;\n      height: 300px;\n      margin: 2rem auto; } }\n  @media (max-width: 425px) {\n    .block, .hoverBlock, .wmblock, .cariblock, .tribeblock, .shpblock {\n      width: 220px;\n      height: 220px; } }\n\n.hoverBlock {\n  background-image: none;\n  background-color: #fff;\n  margin-left: 0;\n  flex-direction: column;\n  justify-content: center;\n  text-decoration: none;\n  font-size: 1.6rem;\n  text-align: center; }\n  .hoverBlock h2 {\n    margin-top: 1rem;\n    color: #0095e7; }\n  @media (max-width: 600px) {\n    .hoverBlock {\n      font-size: 1.4rem;\n      text-align: center; } }\n  @media (max-width: 425px) {\n    .hoverBlock {\n      font-size: 1.2rem;\n      text-align: center; } }\n\n.wmblock {\n  background-image: url("../../assets/tb-wm.png"); }\n\n.cariblock {\n  background-image: url("../../assets/tb-caribou.png"); }\n\n.tribeblock {\n  background-image: url("../../assets/tb-hummus.png"); }\n\n.shpblock {\n  background-image: url("../../assets/tb-shp.png"); }\n'],sourceRoot:""}]),t.locals={flex:"flex_3TwiOQZPpGY2LTFoHUxEp2",block:"block_IjYsoX2pMMTBeH1L55Pxi",hoverBlock:"hoverBlock_2rJfBAVGkBe1trQDyFl68Y",wmblock:"wmblock_W0qK_qpH0nci9x2u-Se-a",cariblock:"cariblock_2OT8qawHQU5ILYsQY4E2t5",tribeblock:"tribeblock_13aFs-4UOFd71wXxF_am9e",shpblock:"shpblock_cR48u2aO8OTIu5Jd7OopO",col:"col_qe1MOu9jeXuAWdv7n-ACx",row:"row_1kgeUsJXJX7CjTjXSu6ssX"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/footer/footer.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".footer_1cFVYGyrn65Q-z4B2bhrSB {\n  background-color: #0095e7;\n  margin-top: 2rem;\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  color: white;\n  justify-content: space-around;\n  padding: 1rem;\n  text-transform: uppercase; }\n  @media (max-width: 768px) {\n    .footer_1cFVYGyrn65Q-z4B2bhrSB {\n      margin-top: 4.5rem; } }\n  @media (max-width: 649px) {\n    .footer_1cFVYGyrn65Q-z4B2bhrSB {\n      margin-top: 5.55rem; } }\n  .footer_1cFVYGyrn65Q-z4B2bhrSB h2 {\n    font-size: 1.6rem; }\n    @media (max-width: 768px) {\n      .footer_1cFVYGyrn65Q-z4B2bhrSB h2 {\n        font-size: 1.3rem; } }\n    @media (max-width: 500px) {\n      .footer_1cFVYGyrn65Q-z4B2bhrSB h2 {\n        font-size: 1rem; } }\n    @media (max-width: 400px) {\n      .footer_1cFVYGyrn65Q-z4B2bhrSB h2 {\n        font-size: .8rem; } }\n    @media (max-width: 340px) {\n      .footer_1cFVYGyrn65Q-z4B2bhrSB h2 {\n        font-size: .6rem; } }\n  .footer_1cFVYGyrn65Q-z4B2bhrSB a {\n    color: white; }\n  .footer_1cFVYGyrn65Q-z4B2bhrSB .socialRow_3UU6Hh38H3vv-kA4416JVD {\n    display: flex;\n    flex-direction: row;\n    align-content: flex-end; }\n    .footer_1cFVYGyrn65Q-z4B2bhrSB .socialRow_3UU6Hh38H3vv-kA4416JVD .social_2k_cGBdRZvLIVVa511SrgI :last-child {\n      margin-right: 2rem; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/components/footer/footer.scss"],names:[],mappings:"AAAA;EACE,0BAA0B;EAC1B,iBAAiB;EACjB,aAAa;EACb,cAAc;EACd,oBAAoB;EACpB,aAAa;EACb,8BAA8B;EAC9B,cAAc;EACd,0BAA0B,EAAE;EAC5B;IACE;MACE,mBAAmB,EAAE,EAAE;EAC3B;IACE;MACE,oBAAoB,EAAE,EAAE;EAC5B;IACE,kBAAkB,EAAE;IACpB;MACE;QACE,kBAAkB,EAAE,EAAE;IAC1B;MACE;QACE,gBAAgB,EAAE,EAAE;IACxB;MACE;QACE,iBAAiB,EAAE,EAAE;IACzB;MACE;QACE,iBAAiB,EAAE,EAAE;EAC3B;IACE,aAAa,EAAE;EACjB;IACE,cAAc;IACd,oBAAoB;IACpB,wBAAwB,EAAE;IAC1B;MACE,mBAAmB,EAAE",file:"footer.scss",sourcesContent:[".footer {\n  background-color: #0095e7;\n  margin-top: 2rem;\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  color: white;\n  justify-content: space-around;\n  padding: 1rem;\n  text-transform: uppercase; }\n  @media (max-width: 768px) {\n    .footer {\n      margin-top: 4.5rem; } }\n  @media (max-width: 649px) {\n    .footer {\n      margin-top: 5.55rem; } }\n  .footer h2 {\n    font-size: 1.6rem; }\n    @media (max-width: 768px) {\n      .footer h2 {\n        font-size: 1.3rem; } }\n    @media (max-width: 500px) {\n      .footer h2 {\n        font-size: 1rem; } }\n    @media (max-width: 400px) {\n      .footer h2 {\n        font-size: .8rem; } }\n    @media (max-width: 340px) {\n      .footer h2 {\n        font-size: .6rem; } }\n  .footer a {\n    color: white; }\n  .footer .socialRow {\n    display: flex;\n    flex-direction: row;\n    align-content: flex-end; }\n    .footer .socialRow .social :last-child {\n      margin-right: 2rem; }\n"],sourceRoot:""}]),t.locals={footer:"footer_1cFVYGyrn65Q-z4B2bhrSB",socialRow:"socialRow_3UU6Hh38H3vv-kA4416JVD",social:"social_2k_cGBdRZvLIVVa511SrgI"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/navigation/breadcrumbs.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_bzdEuOKB-_yz5NPQChUWz, .breadcrumbs_2ddGiyMCwu5vw68C7GYL4C, .crumbles_19p9c8oL_BcdwrV9g66JT4 {\n  display: flex; }\n\n.col_LRns5BiYVhFfMuR33SLXI {\n  flex-direction: column; }\n\n.row_2P5N4HlaS8BzDdHa7idJ7S, .crumbles_19p9c8oL_BcdwrV9g66JT4 {\n  flex-direction: row; }\n\n.breadcrumbs_2ddGiyMCwu5vw68C7GYL4C {\n  width: 100%; }\n\n.crumbles_19p9c8oL_BcdwrV9g66JT4 {\n  width: 100%;\n  justify-content: space-between; }\n\n.crumble_1poVKDHHt2RFqxfmP8LXnd {\n  width: 100%;\n  align-self: center; }\n  .crumble_1poVKDHHt2RFqxfmP8LXnd h1 {\n    padding: 1rem; }\n  .crumble_1poVKDHHt2RFqxfmP8LXnd :hover, .crumble_1poVKDHHt2RFqxfmP8LXnd ::before, .crumble_1poVKDHHt2RFqxfmP8LXnd ::after {\n    background-color: #0095e7;\n    color: white;\n    border-radius: 2%; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/components/navigation/breadcrumbs.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE,YAAY,EAAE;;AAEhB;EACE,YAAY;EACZ,+BAA+B,EAAE;;AAEnC;EACE,YAAY;EACZ,mBAAmB,EAAE;EACrB;IACE,cAAc,EAAE;EAClB;IACE,0BAA0B;IAC1B,aAAa;IACb,kBAAkB,EAAE",file:"breadcrumbs.scss",sourcesContent:[".flex, .breadcrumbs, .crumbles {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row, .crumbles {\n  flex-direction: row; }\n\n.breadcrumbs {\n  width: 100%; }\n\n.crumbles {\n  width: 100%;\n  justify-content: space-between; }\n\n.crumble {\n  width: 100%;\n  align-self: center; }\n  .crumble h1 {\n    padding: 1rem; }\n  .crumble :hover, .crumble ::before, .crumble ::after {\n    background-color: #0095e7;\n    color: white;\n    border-radius: 2%; }\n"],sourceRoot:""}]),t.locals={flex:"flex_bzdEuOKB-_yz5NPQChUWz",breadcrumbs:"breadcrumbs_2ddGiyMCwu5vw68C7GYL4C",crumbles:"crumbles_19p9c8oL_BcdwrV9g66JT4",col:"col_LRns5BiYVhFfMuR33SLXI",row:"row_2P5N4HlaS8BzDdHa7idJ7S",crumble:"crumble_1poVKDHHt2RFqxfmP8LXnd"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/navigation/navigation.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_3LOkqdrn8IzMWPb2WZH3qo, .navigationContainer_3vd7v8vZs60r3CWpqGT_gv, .navList_5iGYHSLGcp7fAcS_DpQ4o, .navListMobile_ScB_ftlgQ0MobCrmULEAe {\n  display: flex; }\n\n.col_1leYFICuXxwZV7jS27vlXI {\n  flex-direction: column; }\n\n.row_gpQfQ_-rP6H7C7t6lZncw, .navList_5iGYHSLGcp7fAcS_DpQ4o, .navListMobile_ScB_ftlgQ0MobCrmULEAe {\n  flex-direction: row; }\n\n.navigationContainer_3vd7v8vZs60r3CWpqGT_gv {\n  justify-content: space-around; }\n  @media (min-width: 1919px) {\n    .navigationContainer_3vd7v8vZs60r3CWpqGT_gv {\n      justify-content: space-around;\n      /* IE EDGE FIX */ } }\n  @media (max-width: 1600px) {\n    .navigationContainer_3vd7v8vZs60r3CWpqGT_gv {\n      justify-content: space-around;\n      /* IE EDGE FIX */ } }\n\n.navCopy_3bg5WA7f2VuRb6gqMeyVwz {\n  font-size: 2rem;\n  text-transform: uppercase; }\n\n.navList_5iGYHSLGcp7fAcS_DpQ4o, .navListMobile_ScB_ftlgQ0MobCrmULEAe {\n  font-size: 1.4rem;\n  color: #0095e7;\n  list-style-type: none; }\n\n.navListMobile_ScB_ftlgQ0MobCrmULEAe {\n  flex-direction: column;\n  justify-content: left;\n  z-index: 2;\n  font-size: 1.8rem;\n  line-height: 1.6; }\n\n.navListItem_3ItY09mFhGrRJW4O_hZw8Y {\n  align-self: center;\n  width: 100%;\n  height: auto;\n  justify-content: center; }\n  .navListItem_3ItY09mFhGrRJW4O_hZw8Y:nth-child(2) {\n    margin: 0 4.5rem; }\n  .navListItem_3ItY09mFhGrRJW4O_hZw8Y:hover {\n    cursor: pointer;\n    text-decoration: none;\n    color: #0095e7; }\n    .navListItem_3ItY09mFhGrRJW4O_hZw8Y:hover :visited {\n      color: #0095e7; }\n\n.arrowUp_isBTs3NKKYKoWaKuIOoyR, .arrowUp1_fgcYGZGOBq_cv84S3yFSe {\n  width: 0;\n  height: 0;\n  border-left: 15px solid transparent;\n  border-right: 15px solid transparent;\n  border-bottom: 15px solid lightcoral; }\n\n.arrowUp1_fgcYGZGOBq_cv84S3yFSe {\n  background-color: 0095e7; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/components/navigation/navigation.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE,8BAA8B,EAAE;EAChC;IACE;MACE,8BAA8B;MAC9B,iBAAiB,EAAE,EAAE;EACzB;IACE;MACE,8BAA8B;MAC9B,iBAAiB,EAAE,EAAE;;AAE3B;EACE,gBAAgB;EAChB,0BAA0B,EAAE;;AAE9B;EACE,kBAAkB;EAClB,eAAe;EACf,sBAAsB,EAAE;;AAE1B;EACE,uBAAuB;EACvB,sBAAsB;EACtB,WAAW;EACX,kBAAkB;EAClB,iBAAiB,EAAE;;AAErB;EACE,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,wBAAwB,EAAE;EAC1B;IACE,iBAAiB,EAAE;EACrB;IACE,gBAAgB;IAChB,sBAAsB;IACtB,eAAe,EAAE;IACjB;MACE,eAAe,EAAE;;AAEvB;EACE,SAAS;EACT,UAAU;EACV,oCAAoC;EACpC,qCAAqC;EACrC,qCAAqC,EAAE;;AAEzC;EACE,yBAAyB,EAAE",file:"navigation.scss",sourcesContent:[".flex, .navigationContainer, .navList, .navListMobile {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row, .navList, .navListMobile {\n  flex-direction: row; }\n\n.navigationContainer {\n  justify-content: space-around; }\n  @media (min-width: 1919px) {\n    .navigationContainer {\n      justify-content: space-around;\n      /* IE EDGE FIX */ } }\n  @media (max-width: 1600px) {\n    .navigationContainer {\n      justify-content: space-around;\n      /* IE EDGE FIX */ } }\n\n.navCopy {\n  font-size: 2rem;\n  text-transform: uppercase; }\n\n.navList, .navListMobile {\n  font-size: 1.4rem;\n  color: #0095e7;\n  list-style-type: none; }\n\n.navListMobile {\n  flex-direction: column;\n  justify-content: left;\n  z-index: 2;\n  font-size: 1.8rem;\n  line-height: 1.6; }\n\n.navListItem {\n  align-self: center;\n  width: 100%;\n  height: auto;\n  justify-content: center; }\n  .navListItem:nth-child(2) {\n    margin: 0 4.5rem; }\n  .navListItem:hover {\n    cursor: pointer;\n    text-decoration: none;\n    color: #0095e7; }\n    .navListItem:hover :visited {\n      color: #0095e7; }\n\n.arrowUp, .arrowUp1 {\n  width: 0;\n  height: 0;\n  border-left: 15px solid transparent;\n  border-right: 15px solid transparent;\n  border-bottom: 15px solid lightcoral; }\n\n.arrowUp1 {\n  background-color: 0095e7; }\n"],sourceRoot:""}]),t.locals={flex:"flex_3LOkqdrn8IzMWPb2WZH3qo",navigationContainer:"navigationContainer_3vd7v8vZs60r3CWpqGT_gv",navList:"navList_5iGYHSLGcp7fAcS_DpQ4o",navListMobile:"navListMobile_ScB_ftlgQ0MobCrmULEAe",col:"col_1leYFICuXxwZV7jS27vlXI",row:"row_gpQfQ_-rP6H7C7t6lZncw",navCopy:"navCopy_3bg5WA7f2VuRb6gqMeyVwz",navListItem:"navListItem_3ItY09mFhGrRJW4O_hZw8Y",arrowUp:"arrowUp_isBTs3NKKYKoWaKuIOoyR",arrowUp1:"arrowUp1_fgcYGZGOBq_cv84S3yFSe"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/about/about.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".aboutContainer_EYgGhkHm9GPdTNO_ksm68 {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto;\n  display: flex; }\n\n.aboutContent_100KpmZHhSiSKnJr0-vbVG {\n  margin-top: 2rem; }\n\n.blurb_2SO4TKvUsH-NcO7B92-Jfo {\n  font-size: 1.7rem;\n  margin: 0 7rem; }\n  @media (max-width: 768px) {\n    .blurb_2SO4TKvUsH-NcO7B92-Jfo {\n      margin: 0 5rem; } }\n  @media (max-width: 600px) {\n    .blurb_2SO4TKvUsH-NcO7B92-Jfo {\n      margin: 0 2rem; } }\n  @media (max-width: 425px) {\n    .blurb_2SO4TKvUsH-NcO7B92-Jfo {\n      margin: 0 .5rem; } }\n\n.header_3dxjuhzUC6fwvMiY1UjbZl {\n  color: #e4905b;\n  font-size: 3.2rem;\n  text-align: center;\n  margin-top: 7rem;\n  margin-bottom: 3rem; }\n  @media (max-width: 600px) {\n    .header_3dxjuhzUC6fwvMiY1UjbZl {\n      margin-top: 2rem; } }\n\n.socialRow_2RFMzY5bD_QDp7YeeiTa6l {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 5rem 0; }\n  @media (max-width: 600px) {\n    .socialRow_2RFMzY5bD_QDp7YeeiTa6l {\n      flex-direction: column; } }\n\n.social_1jEdr3ICC-2KQGiWep3G9d {\n  font-size: 3rem; }\n  .social_1jEdr3ICC-2KQGiWep3G9d i {\n    color: #0095e7;\n    padding: 1rem; }\n  @media (max-width: 600px) {\n    .social_1jEdr3ICC-2KQGiWep3G9d {\n      text-align: center; } }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/about/about.scss"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;EACzB,cAAc,EAAE;;AAElB;EACE,iBAAiB,EAAE;;AAErB;EACE,kBAAkB;EAClB,eAAe,EAAE;EACjB;IACE;MACE,eAAe,EAAE,EAAE;EACvB;IACE;MACE,eAAe,EAAE,EAAE;EACvB;IACE;MACE,gBAAgB,EAAE,EAAE;;AAE1B;EACE,eAAe;EACf,kBAAkB;EAClB,mBAAmB;EACnB,iBAAiB;EACjB,oBAAoB,EAAE;EACtB;IACE;MACE,iBAAiB,EAAE,EAAE;;AAE3B;EACE,cAAc;EACd,oBAAoB;EACpB,wBAAwB;EACxB,eAAe,EAAE;EACjB;IACE;MACE,uBAAuB,EAAE,EAAE;;AAEjC;EACE,gBAAgB,EAAE;EAClB;IACE,eAAe;IACf,cAAc,EAAE;EAClB;IACE;MACE,mBAAmB,EAAE,EAAE",file:"about.scss",sourcesContent:[".aboutContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto;\n  display: flex; }\n\n.aboutContent {\n  margin-top: 2rem; }\n\n.blurb {\n  font-size: 1.7rem;\n  margin: 0 7rem; }\n  @media (max-width: 768px) {\n    .blurb {\n      margin: 0 5rem; } }\n  @media (max-width: 600px) {\n    .blurb {\n      margin: 0 2rem; } }\n  @media (max-width: 425px) {\n    .blurb {\n      margin: 0 .5rem; } }\n\n.header {\n  color: #e4905b;\n  font-size: 3.2rem;\n  text-align: center;\n  margin-top: 7rem;\n  margin-bottom: 3rem; }\n  @media (max-width: 600px) {\n    .header {\n      margin-top: 2rem; } }\n\n.socialRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 5rem 0; }\n  @media (max-width: 600px) {\n    .socialRow {\n      flex-direction: column; } }\n\n.social {\n  font-size: 3rem; }\n  .social i {\n    color: #0095e7;\n    padding: 1rem; }\n  @media (max-width: 600px) {\n    .social {\n      text-align: center; } }\n"],sourceRoot:""}]),t.locals={aboutContainer:"aboutContainer_EYgGhkHm9GPdTNO_ksm68",aboutContent:"aboutContent_100KpmZHhSiSKnJr0-vbVG",blurb:"blurb_2SO4TKvUsH-NcO7B92-Jfo",header:"header_3dxjuhzUC6fwvMiY1UjbZl",socialRow:"socialRow_2RFMzY5bD_QDp7YeeiTa6l",social:"social_1jEdr3ICC-2KQGiWep3G9d"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/caribou/caribou.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_20-Y4wMs8NNozddlcnO9Hk {\n  display: flex; }\n\n.col_3egevUhY_xsCcSoEK85rt9 {\n  flex-direction: column; }\n\n.row_1x340l9oGidycygJosVdkM {\n  flex-direction: row; }\n\n@keyframes fadein_3-wlRDS9E3CgNbOFO1Wn9b {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.caribouContainer_35EMz7wwosEN9fMKeMrzIK {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock_1SzgCxqenF6DPZBiF2Q24D {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.video_MSgMcF6M3dvZOffbOWBC_ {\n  width: 800px;\n  height: 600px;\n  text-align: center; }\n  @media (max-width: 799px) {\n    .video_MSgMcF6M3dvZOffbOWBC_ {\n      width: 600px;\n      height: 400px; } }\n  @media (max-width: 600px) {\n    .video_MSgMcF6M3dvZOffbOWBC_ {\n      width: 400px;\n      height: 200px; } }\n  @media (max-width: 425px) {\n    .video_MSgMcF6M3dvZOffbOWBC_ {\n      width: 300px;\n      height: 200px; } }\n\n.caribouBanner__I1PyOXfsuJzjyGgfdsT6,\n.caribouImage_3TvHAbBY3v_h20EVBkR-Od,\n.caribouImage1_3azCHqdFah3zRPqE2xJrb1,\n.caribouImage2_29kxeByLuAaSl2CC-BVAot,\n.caribouSite_2SOKKshZXo0ztN_2jC5y1S {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein_3-wlRDS9E3CgNbOFO1Wn9b 2s; }\n  @media (max-width: 600px) {\n    .caribouBanner__I1PyOXfsuJzjyGgfdsT6,\n    .caribouImage_3TvHAbBY3v_h20EVBkR-Od,\n    .caribouImage1_3azCHqdFah3zRPqE2xJrb1,\n    .caribouImage2_29kxeByLuAaSl2CC-BVAot,\n    .caribouSite_2SOKKshZXo0ztN_2jC5y1S {\n      margin: 2rem 0; } }\n\n.caribouBanner__I1PyOXfsuJzjyGgfdsT6 {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .caribouBanner__I1PyOXfsuJzjyGgfdsT6 {\n      width: 250px;\n      height: 100px; } }\n\n.caribouImage_3TvHAbBY3v_h20EVBkR-Od {\n  width: 900px;\n  height: 800px; }\n  @media (max-width: 901px) {\n    .caribouImage_3TvHAbBY3v_h20EVBkR-Od {\n      width: 500px;\n      height: 445px; } }\n  @media (max-width: 600px) {\n    .caribouImage_3TvHAbBY3v_h20EVBkR-Od {\n      width: 300px;\n      height: 260px; } }\n\n.caribouImage1_3azCHqdFah3zRPqE2xJrb1 {\n  width: 900px;\n  height: 360px; }\n  @media (max-width: 901px) {\n    .caribouImage1_3azCHqdFah3zRPqE2xJrb1 {\n      width: 500px;\n      height: 200px; } }\n  @media (max-width: 600px) {\n    .caribouImage1_3azCHqdFah3zRPqE2xJrb1 {\n      width: 300px;\n      height: 120px; } }\n\n.caribouImage2_29kxeByLuAaSl2CC-BVAot {\n  width: 900px;\n  height: 850px; }\n  @media (max-width: 900px) {\n    .caribouImage2_29kxeByLuAaSl2CC-BVAot {\n      width: 500px;\n      height: 200px; } }\n  @media (max-width: 600px) {\n    .caribouImage2_29kxeByLuAaSl2CC-BVAot {\n      width: 300px;\n      height: 280px; } }\n\n.caribouSite_2SOKKshZXo0ztN_2jC5y1S {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .caribouSite_2SOKKshZXo0ztN_2jC5y1S {\n      width: 700px;\n      height: 380px; } }\n  @media (max-width: 600px) {\n    .caribouSite_2SOKKshZXo0ztN_2jC5y1S {\n      width: 300px;\n      height: 160px; } }\n\n.blurb_1AzuItTz8pWRCd2-QfVihO {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb_1AzuItTz8pWRCd2-QfVihO {\n      font-size: 1.225rem;\n      margin: 5rem 5rem; } }\n\n.caribouLink_1e9Huywg3GRz8O5bA6CNFs {\n  text-decoration: none;\n  color: #0095e7; }\n  .caribouLink_1e9Huywg3GRz8O5bA6CNFs:visited {\n    color: #0095e7; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/campaigns/caribou/caribou.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE;IACE,WAAW,EAAE;EACf;IACE,WAAW,EAAE,EAAE;;AAEnB;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB,EAAE;;AAE7B;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,eAAe;EACf,iBAAiB,EAAE;;AAErB;EACE,aAAa;EACb,cAAc;EACd,mBAAmB,EAAE;EACrB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;;;;;EAKE,mBAAmB;EACnB,eAAe;EACf,4CAAqB,EAAE;EACvB;IACE;;;;;MAKE,eAAe,EAAE,EAAE;;AAEzB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,cAAc;EACd,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,oBAAoB;EACpB,kBAAkB;EAClB,mBAAmB,EAAE;EACrB;IACE;MACE,oBAAoB;MACpB,kBAAkB,EAAE,EAAE;;AAE5B;EACE,sBAAsB;EACtB,eAAe,EAAE;EACjB;IACE,eAAe,EAAE",file:"caribou.scss",sourcesContent:[".flex {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\n@keyframes fadein {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.caribouContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.video {\n  width: 800px;\n  height: 600px;\n  text-align: center; }\n  @media (max-width: 799px) {\n    .video {\n      width: 600px;\n      height: 400px; } }\n  @media (max-width: 600px) {\n    .video {\n      width: 400px;\n      height: 200px; } }\n  @media (max-width: 425px) {\n    .video {\n      width: 300px;\n      height: 200px; } }\n\n.caribouBanner,\n.caribouImage,\n.caribouImage1,\n.caribouImage2,\n.caribouSite {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein 2s; }\n  @media (max-width: 600px) {\n    .caribouBanner,\n    .caribouImage,\n    .caribouImage1,\n    .caribouImage2,\n    .caribouSite {\n      margin: 2rem 0; } }\n\n.caribouBanner {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .caribouBanner {\n      width: 250px;\n      height: 100px; } }\n\n.caribouImage {\n  width: 900px;\n  height: 800px; }\n  @media (max-width: 901px) {\n    .caribouImage {\n      width: 500px;\n      height: 445px; } }\n  @media (max-width: 600px) {\n    .caribouImage {\n      width: 300px;\n      height: 260px; } }\n\n.caribouImage1 {\n  width: 900px;\n  height: 360px; }\n  @media (max-width: 901px) {\n    .caribouImage1 {\n      width: 500px;\n      height: 200px; } }\n  @media (max-width: 600px) {\n    .caribouImage1 {\n      width: 300px;\n      height: 120px; } }\n\n.caribouImage2 {\n  width: 900px;\n  height: 850px; }\n  @media (max-width: 900px) {\n    .caribouImage2 {\n      width: 500px;\n      height: 200px; } }\n  @media (max-width: 600px) {\n    .caribouImage2 {\n      width: 300px;\n      height: 280px; } }\n\n.caribouSite {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .caribouSite {\n      width: 700px;\n      height: 380px; } }\n  @media (max-width: 600px) {\n    .caribouSite {\n      width: 300px;\n      height: 160px; } }\n\n.blurb {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb {\n      font-size: 1.225rem;\n      margin: 5rem 5rem; } }\n\n.caribouLink {\n  text-decoration: none;\n  color: #0095e7; }\n  .caribouLink:visited {\n    color: #0095e7; }\n"],sourceRoot:""}]),t.locals={flex:"flex_20-Y4wMs8NNozddlcnO9Hk",col:"col_3egevUhY_xsCcSoEK85rt9",row:"row_1x340l9oGidycygJosVdkM",caribouContainer:"caribouContainer_35EMz7wwosEN9fMKeMrzIK",contentBlock:"contentBlock_1SzgCxqenF6DPZBiF2Q24D",video:"video_MSgMcF6M3dvZOffbOWBC_",caribouBanner:"caribouBanner__I1PyOXfsuJzjyGgfdsT6",caribouImage:"caribouImage_3TvHAbBY3v_h20EVBkR-Od",caribouImage1:"caribouImage1_3azCHqdFah3zRPqE2xJrb1",caribouImage2:"caribouImage2_29kxeByLuAaSl2CC-BVAot",caribouSite:"caribouSite_2SOKKshZXo0ztN_2jC5y1S",fadein:"fadein_3-wlRDS9E3CgNbOFO1Wn9b",blurb:"blurb_1AzuItTz8pWRCd2-QfVihO",caribouLink:"caribouLink_1e9Huywg3GRz8O5bA6CNFs"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/shoptology/shoptology.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_3NhJ_yzeSWif1sSF_ohqq8 {\n  display: flex; }\n\n.col_2NcCgOWOhw2YJdcdNK5rfq {\n  flex-direction: column; }\n\n.row_3muO7GbvZ83tm31vX-gdna {\n  flex-direction: row; }\n\n@keyframes fadein_3rUS_6kzP9T6NZom70H7Rk {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.shoptologyContainer_2M3wFYkDXP0q4ut2VwkCl0 {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock_H6tH9dOzpZnqU5Z6JRWOn {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.shoptologyBanner_3lgFVPimOowmI3WbZGhROq,\n.shoptologyImage_1WjGiunoZTeNS4GYWgJR6z {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein_3rUS_6kzP9T6NZom70H7Rk 2s; }\n  @media (max-width: 600px) {\n    .shoptologyBanner_3lgFVPimOowmI3WbZGhROq,\n    .shoptologyImage_1WjGiunoZTeNS4GYWgJR6z {\n      margin: 2rem 0; } }\n\n.shoptologyBanner_3lgFVPimOowmI3WbZGhROq {\n  width: 600px;\n  height: 600px; }\n  @media (max-width: 900px) {\n    .shoptologyBanner_3lgFVPimOowmI3WbZGhROq {\n      width: 500px;\n      height: 500px; } }\n  @media (max-width: 600px) {\n    .shoptologyBanner_3lgFVPimOowmI3WbZGhROq {\n      width: 300px;\n      height: 300px; } }\n\n.shoptologyImage_1WjGiunoZTeNS4GYWgJR6z {\n  width: 600px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .shoptologyImage_1WjGiunoZTeNS4GYWgJR6z {\n      width: 500px;\n      height: 415px; } }\n  @media (max-width: 600px) {\n    .shoptologyImage_1WjGiunoZTeNS4GYWgJR6z {\n      width: 300px;\n      height: 250px; } }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/campaigns/shoptology/shoptology.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE;IACE,WAAW,EAAE;EACf;IACE,WAAW,EAAE,EAAE;;AAEnB;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB,EAAE;;AAE7B;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,eAAe;EACf,iBAAiB,EAAE;;AAErB;;EAEE,mBAAmB;EACnB,eAAe;EACf,4CAAqB,EAAE;EACvB;IACE;;MAEE,eAAe,EAAE,EAAE;;AAEzB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE",file:"shoptology.scss",sourcesContent:[".flex {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\n@keyframes fadein {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.shoptologyContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.shoptologyBanner,\n.shoptologyImage {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein 2s; }\n  @media (max-width: 600px) {\n    .shoptologyBanner,\n    .shoptologyImage {\n      margin: 2rem 0; } }\n\n.shoptologyBanner {\n  width: 600px;\n  height: 600px; }\n  @media (max-width: 900px) {\n    .shoptologyBanner {\n      width: 500px;\n      height: 500px; } }\n  @media (max-width: 600px) {\n    .shoptologyBanner {\n      width: 300px;\n      height: 300px; } }\n\n.shoptologyImage {\n  width: 600px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .shoptologyImage {\n      width: 500px;\n      height: 415px; } }\n  @media (max-width: 600px) {\n    .shoptologyImage {\n      width: 300px;\n      height: 250px; } }\n"],sourceRoot:""}]),t.locals={flex:"flex_3NhJ_yzeSWif1sSF_ohqq8",col:"col_2NcCgOWOhw2YJdcdNK5rfq",row:"row_3muO7GbvZ83tm31vX-gdna",shoptologyContainer:"shoptologyContainer_2M3wFYkDXP0q4ut2VwkCl0",contentBlock:"contentBlock_H6tH9dOzpZnqU5Z6JRWOn",shoptologyBanner:"shoptologyBanner_3lgFVPimOowmI3WbZGhROq",shoptologyImage:"shoptologyImage_1WjGiunoZTeNS4GYWgJR6z",fadein:"fadein_3rUS_6kzP9T6NZom70H7Rk"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/tribe/tribe.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_2eYCVHuF9JEcA33m6nMc2h {\n  display: flex; }\n\n.col_YZg7Ftv06SmSycjLxPMhr {\n  flex-direction: column; }\n\n.row_288GPluMdJ1NiBz3AMDdCj {\n  flex-direction: row; }\n\n@keyframes fadein_3lcuEMye8JVkd6y9u9Pbn7 {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.tribeContainer_347L0nISqTHmfTRCnC111C {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock_3RMr7SUdDVxGQTeXDL6TvI {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.tribeBanner_3GHH6t5eQd6dKkFjmpoxK-, .tribeImage_2VSSkXRPqg02dtXdRIUg8s, .tribeImageCart_3e3ifxMLuhZPToRhTEWC6T, .tribeSite_3qjP6QBBZCIkTAujs_rJml {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein_3lcuEMye8JVkd6y9u9Pbn7 2s; }\n  @media (max-width: 600px) {\n    .tribeBanner_3GHH6t5eQd6dKkFjmpoxK-, .tribeImage_2VSSkXRPqg02dtXdRIUg8s, .tribeImageCart_3e3ifxMLuhZPToRhTEWC6T, .tribeSite_3qjP6QBBZCIkTAujs_rJml {\n      margin: 2rem 0; } }\n\n.tribeSite_3qjP6QBBZCIkTAujs_rJml {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .tribeSite_3qjP6QBBZCIkTAujs_rJml {\n      width: 700px;\n      height: 380px; } }\n  @media (max-width: 600px) {\n    .tribeSite_3qjP6QBBZCIkTAujs_rJml {\n      width: 300px;\n      height: 165px; } }\n\n.tribeBanner_3GHH6t5eQd6dKkFjmpoxK- {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .tribeBanner_3GHH6t5eQd6dKkFjmpoxK- {\n      width: 250px;\n      height: 100px; } }\n\n.tribeImage_2VSSkXRPqg02dtXdRIUg8s {\n  width: 900px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .tribeImage_2VSSkXRPqg02dtXdRIUg8s {\n      width: 500px;\n      height: 275px; } }\n  @media (max-width: 600px) {\n    .tribeImage_2VSSkXRPqg02dtXdRIUg8s {\n      width: 300px;\n      height: 165px; } }\n\n.tribeImageCart_3e3ifxMLuhZPToRhTEWC6T {\n  width: 900px;\n  height: 850px; }\n  @media (max-width: 900px) {\n    .tribeImageCart_3e3ifxMLuhZPToRhTEWC6T {\n      width: 500px;\n      height: 470px; } }\n  @media (max-width: 600px) {\n    .tribeImageCart_3e3ifxMLuhZPToRhTEWC6T {\n      width: 300px;\n      height: 280px; } }\n\n.blurb_3J_ZmTJlkcZArkBqzlt6FB {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb_3J_ZmTJlkcZArkBqzlt6FB {\n      font-size: 1.225rem;\n      margin: 5rem 5rem; } }\n\n.tribeLink_WUGTHV1xvTaNJNx2NKNbB {\n  text-decoration: none;\n  color: #0095e7; }\n  .tribeLink_WUGTHV1xvTaNJNx2NKNbB:visited {\n    color: #0095e7; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/campaigns/tribe/tribe.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE;IACE,WAAW,EAAE;EACf;IACE,WAAW,EAAE,EAAE;;AAEnB;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB,EAAE;;AAE7B;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,eAAe;EACf,iBAAiB,EAAE;;AAErB;EACE,mBAAmB;EACnB,eAAe;EACf,4CAAqB,EAAE;EACvB;IACE;MACE,eAAe,EAAE,EAAE;;AAEzB;EACE,cAAc;EACd,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,oBAAoB;EACpB,kBAAkB;EAClB,mBAAmB,EAAE;EACrB;IACE;MACE,oBAAoB;MACpB,kBAAkB,EAAE,EAAE;;AAE5B;EACE,sBAAsB;EACtB,eAAe,EAAE;EACjB;IACE,eAAe,EAAE",file:"tribe.scss",sourcesContent:[".flex {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\n@keyframes fadein {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.tribeContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.tribeBanner, .tribeImage, .tribeImageCart, .tribeSite {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein 2s; }\n  @media (max-width: 600px) {\n    .tribeBanner, .tribeImage, .tribeImageCart, .tribeSite {\n      margin: 2rem 0; } }\n\n.tribeSite {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .tribeSite {\n      width: 700px;\n      height: 380px; } }\n  @media (max-width: 600px) {\n    .tribeSite {\n      width: 300px;\n      height: 165px; } }\n\n.tribeBanner {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .tribeBanner {\n      width: 250px;\n      height: 100px; } }\n\n.tribeImage {\n  width: 900px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .tribeImage {\n      width: 500px;\n      height: 275px; } }\n  @media (max-width: 600px) {\n    .tribeImage {\n      width: 300px;\n      height: 165px; } }\n\n.tribeImageCart {\n  width: 900px;\n  height: 850px; }\n  @media (max-width: 900px) {\n    .tribeImageCart {\n      width: 500px;\n      height: 470px; } }\n  @media (max-width: 600px) {\n    .tribeImageCart {\n      width: 300px;\n      height: 280px; } }\n\n.blurb {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb {\n      font-size: 1.225rem;\n      margin: 5rem 5rem; } }\n\n.tribeLink {\n  text-decoration: none;\n  color: #0095e7; }\n  .tribeLink:visited {\n    color: #0095e7; }\n"],sourceRoot:""}]),t.locals={flex:"flex_2eYCVHuF9JEcA33m6nMc2h",col:"col_YZg7Ftv06SmSycjLxPMhr",row:"row_288GPluMdJ1NiBz3AMDdCj",tribeContainer:"tribeContainer_347L0nISqTHmfTRCnC111C",contentBlock:"contentBlock_3RMr7SUdDVxGQTeXDL6TvI",tribeBanner:"tribeBanner_3GHH6t5eQd6dKkFjmpoxK-",tribeImage:"tribeImage_2VSSkXRPqg02dtXdRIUg8s",tribeImageCart:"tribeImageCart_3e3ifxMLuhZPToRhTEWC6T",tribeSite:"tribeSite_3qjP6QBBZCIkTAujs_rJml",fadein:"fadein_3lcuEMye8JVkd6y9u9Pbn7",blurb:"blurb_3J_ZmTJlkcZArkBqzlt6FB",tribeLink:"tribeLink_WUGTHV1xvTaNJNx2NKNbB"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/walmart/walmart.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_1FtzHNGajUXBd3jtmsKalK {\n  display: flex; }\n\n.col_1yk75UpopV_fU8S2sHOR5O {\n  flex-direction: column; }\n\n.row_1nrsTD-R9RnHcGfo_tgUpt {\n  flex-direction: row; }\n\n@keyframes fadein_tDcikN5UEJ6A8fb0v8kPc {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.walmartContainer_SXgDFuhRMP6vodMOvxg8v {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock_3PWwEloZg1kxVrctY_qOKC {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.wmmBanner_3ffHB1aRh8nvQFtWdPPx-4, .wmmImage_MulqHy_2myQvf3yj7dZBj, .wmmSite_hFRt9rXT5gIeC65FaaH_j {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein_tDcikN5UEJ6A8fb0v8kPc 2s; }\n  @media (max-width: 600px) {\n    .wmmBanner_3ffHB1aRh8nvQFtWdPPx-4, .wmmImage_MulqHy_2myQvf3yj7dZBj, .wmmSite_hFRt9rXT5gIeC65FaaH_j {\n      margin: 2rem 0; } }\n\n.wmmSite_hFRt9rXT5gIeC65FaaH_j {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .wmmSite_hFRt9rXT5gIeC65FaaH_j {\n      width: 600px;\n      height: 325px; } }\n  @media (max-width: 600px) {\n    .wmmSite_hFRt9rXT5gIeC65FaaH_j {\n      width: 300px;\n      height: 165px; } }\n\n.wmmBanner_3ffHB1aRh8nvQFtWdPPx-4 {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .wmmBanner_3ffHB1aRh8nvQFtWdPPx-4 {\n      width: 250px;\n      height: 100px; } }\n\n.wmmImage_MulqHy_2myQvf3yj7dZBj {\n  width: 900px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .wmmImage_MulqHy_2myQvf3yj7dZBj {\n      width: 500px;\n      height: 275px; } }\n  @media (max-width: 600px) {\n    .wmmImage_MulqHy_2myQvf3yj7dZBj {\n      width: 300px;\n      height: 165px; } }\n\n.blurb_2DMMcw016FeM7MLILh3n7d {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb_2DMMcw016FeM7MLILh3n7d {\n      font-size: 1.225rem;\n      text-align: left; } }\n\n.wmLink_1DeCaZbI7PdqvUihPHFuUN {\n  text-decoration: none;\n  color: #0095e7; }\n  .wmLink_1DeCaZbI7PdqvUihPHFuUN:visited {\n    color: #0095e7; }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/campaigns/walmart/walmart.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE;IACE,WAAW,EAAE;EACf;IACE,WAAW,EAAE,EAAE;;AAEnB;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB,EAAE;;AAE7B;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,eAAe;EACf,iBAAiB,EAAE;;AAErB;EACE,mBAAmB;EACnB,eAAe;EACf,2CAAqB,EAAE;EACvB;IACE;MACE,eAAe,EAAE,EAAE;;AAEzB;EACE,cAAc;EACd,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,aAAa;EACb,cAAc,EAAE;EAChB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;EACtB;IACE;MACE,aAAa;MACb,cAAc,EAAE,EAAE;;AAExB;EACE,oBAAoB;EACpB,kBAAkB;EAClB,mBAAmB,EAAE;EACrB;IACE;MACE,oBAAoB;MACpB,iBAAiB,EAAE,EAAE;;AAE3B;EACE,sBAAsB;EACtB,eAAe,EAAE;EACjB;IACE,eAAe,EAAE",file:"walmart.scss",sourcesContent:[".flex {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\n@keyframes fadein {\n  from {\n    opacity: 0; }\n  to {\n    opacity: 1; } }\n\n.walmartContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.contentBlock {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n\n.wmmBanner, .wmmImage, .wmmSite {\n  align-self: center;\n  margin: 4rem 0;\n  animation: fadein 2s; }\n  @media (max-width: 600px) {\n    .wmmBanner, .wmmImage, .wmmSite {\n      margin: 2rem 0; } }\n\n.wmmSite {\n  width: 1100px;\n  height: 600px; }\n  @media (max-width: 1100px) {\n    .wmmSite {\n      width: 600px;\n      height: 325px; } }\n  @media (max-width: 600px) {\n    .wmmSite {\n      width: 300px;\n      height: 165px; } }\n\n.wmmBanner {\n  width: 380px;\n  height: 160px; }\n  @media (max-width: 600px) {\n    .wmmBanner {\n      width: 250px;\n      height: 100px; } }\n\n.wmmImage {\n  width: 900px;\n  height: 500px; }\n  @media (max-width: 900px) {\n    .wmmImage {\n      width: 500px;\n      height: 275px; } }\n  @media (max-width: 600px) {\n    .wmmImage {\n      width: 300px;\n      height: 165px; } }\n\n.blurb {\n  font-size: 2.125rem;\n  margin: 8rem 5rem;\n  text-align: center; }\n  @media (max-width: 600px) {\n    .blurb {\n      font-size: 1.225rem;\n      text-align: left; } }\n\n.wmLink {\n  text-decoration: none;\n  color: #0095e7; }\n  .wmLink:visited {\n    color: #0095e7; }\n"],sourceRoot:""}]),t.locals={flex:"flex_1FtzHNGajUXBd3jtmsKalK",col:"col_1yk75UpopV_fU8S2sHOR5O",row:"row_1nrsTD-R9RnHcGfo_tgUpt",walmartContainer:"walmartContainer_SXgDFuhRMP6vodMOvxg8v",contentBlock:"contentBlock_3PWwEloZg1kxVrctY_qOKC",wmmBanner:"wmmBanner_3ffHB1aRh8nvQFtWdPPx-4",wmmImage:"wmmImage_MulqHy_2myQvf3yj7dZBj",wmmSite:"wmmSite_hFRt9rXT5gIeC65FaaH_j",fadein:"fadein_tDcikN5UEJ6A8fb0v8kPc",blurb:"blurb_2DMMcw016FeM7MLILh3n7d",wmLink:"wmLink_1DeCaZbI7PdqvUihPHFuUN"}},"./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/home/home.scss":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!0)).push([e.i,".flex_kB2JU7kWk3y0QEqyLma6E {\n  display: flex; }\n\n.col_399gsIIgt3fUUvCyMp0cFq {\n  flex-direction: column; }\n\n.row_2FNfUEF4lNs-JmqjhXdK3n {\n  flex-direction: row; }\n\n.homeContainer_3_io8sUaAJQ0oA8ORFAWK0 {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.blockRow_2_wfbDCm4sU7MkiJLdjC1o {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n  @media (max-width: 600px) {\n    .blockRow_2_wfbDCm4sU7MkiJLdjC1o {\n      flex-direction: column; } }\n","",{version:3,sources:["C:/Users/Ron/Desktop/proprojects/amysite/client/src/views/home/home.scss"],names:[],mappings:"AAAA;EACE,cAAc,EAAE;;AAElB;EACE,uBAAuB,EAAE;;AAE3B;EACE,oBAAoB,EAAE;;AAExB;EACE,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB,EAAE;;AAE7B;EACE,cAAc;EACd,oBAAoB;EACpB,YAAY;EACZ,wBAAwB;EACxB,sBAAsB;EACtB,eAAe;EACf,iBAAiB,EAAE;EACnB;IACE;MACE,uBAAuB,EAAE,EAAE",file:"home.scss",sourcesContent:[".flex {\n  display: flex; }\n\n.col {\n  flex-direction: column; }\n\n.row {\n  flex-direction: row; }\n\n.homeContainer {\n  margin-top: 2rem;\n  max-width: 1200px;\n  margin: 2rem auto 0 auto; }\n\n.blockRow {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: center;\n  align-content: center;\n  margin: 0 auto;\n  margin-top: 2rem; }\n  @media (max-width: 600px) {\n    .blockRow {\n      flex-direction: column; } }\n"],sourceRoot:""}]),t.locals={flex:"flex_kB2JU7kWk3y0QEqyLma6E",col:"col_399gsIIgt3fUUvCyMp0cFq",row:"row_2FNfUEF4lNs-JmqjhXdK3n",homeContainer:"homeContainer_3_io8sUaAJQ0oA8ORFAWK0",blockRow:"blockRow_2_wfbDCm4sU7MkiJLdjC1o"}},"./node_modules/css-loader/lib/css-base.js":function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},"./node_modules/css-loader/lib/url/escape.js":function(e,t){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},"./node_modules/history/node_modules/warning/browser.js":function(e,t,n){"use strict";e.exports=function(){}},"./node_modules/invariant/browser.js":function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(s=new Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},"./node_modules/json2mq/index.js":function(e,t,n){var r=n("./node_modules/string-convert/camel2hyphen.js"),o=function(e){var t="",n=Object.keys(e);return n.forEach(function(o,i){var a=e[o];(function(e){return/[height|width]$/.test(e)})(o=r(o))&&"number"==typeof a&&(a+="px"),t+=!0===a?o:!1===a?"not "+o:"("+o+": "+a+")",i<n.length-1&&(t+=" and ")}),t};e.exports=function(e){var t="";return"string"==typeof e?e:e instanceof Array?(e.forEach(function(n,r){t+=o(n),r<e.length-1&&(t+=", ")}),t):o(e)}},"./node_modules/object-assign/index.js":function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),s=1;s<arguments.length;s++){for(var u in n=Object(arguments[s]))o.call(n,u)&&(l[u]=n[u]);if(r){a=r(n);for(var c=0;c<a.length;c++)i.call(n,a[c])&&(l[a[c]]=n[a[c]])}}return l}},"./node_modules/path-to-regexp/index.js":function(e,t,n){var r=n("./node_modules/path-to-regexp/node_modules/isarray/index.js");e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var d=n[0],f=n[1],p=n.index;if(l+=e.slice(a,p),a=p+d.length,f)l+=f[1];else{var m=e[a],h=n[2],b=n[3],y=n[4],g=n[5],v=n[6],A=n[7];l&&(r.push(l),l="");var _=null!=h&&null!=m&&m!==h,E="+"===v||"*"===v,x="?"===v||"*"===v,j=n[2]||c,w=y||g;r.push({name:b||i++,prefix:h||"",delimiter:j,optional:x,repeat:E,partial:_,asterisk:!!A,pattern:w?u(w):A?".*":"[^"+s(j)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},s=(o||{}).pretty?a:encodeURIComponent,u=0;u<e.length;u++){var c=e[u];if("string"!=typeof c){var d,f=l[c.name];if(null==f){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(f)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<f.length;p++){if(d=s(f[p]),!t[u].test(d))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===p?c.prefix:c.delimiter)+d}}else{if(d=c.asterisk?encodeURI(f).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):s(f),!t[u].test(d))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+d+'"');i+=c.prefix+d}}else i+=c}return i}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function d(e){return e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=s(u);else{var f=s(u.prefix),p="(?:"+u.pattern+")";t.push(u),u.repeat&&(p+="(?:"+f+p+")*"),a+=p=u.optional?u.partial?f+"("+p+")?":"(?:"+f+"("+p+"))?":f+"("+p+")"}}var m=s(n.delimiter||"/"),h=a.slice(-m.length)===m;return o||(a=(h?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+m+"|$)",c(new RegExp("^"+a,d(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return f(i(e,n),t,n)}(e,t,n)}},"./node_modules/path-to-regexp/node_modules/isarray/index.js":function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},"./node_modules/prop-types/factoryWithThrowingShims.js":function(e,t,n){"use strict";var r=n("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},"./node_modules/prop-types/index.js":function(e,t,n){e.exports=n("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/react-dom/cjs/react-dom.production.min.js":function(e,t,n){"use strict";
/** @license React v16.8.3
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/react/index.js"),o=n("./node_modules/object-assign/index.js"),i=n("./node_modules/scheduler/index.js");function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,a,l],u=0;(e=Error(t.replace(/%s/g,function(){return s[u++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,s=null,u=!1,c=null,d={onError:function(e){l=!0,s=e}};function f(e,t,n,r,o,i,a,u,c){l=!1,s=null,function(e,t,n,r,o,i,a,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}.apply(d,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,s=r;g.hasOwnProperty(s)&&a("99",s),g[s]=i;var u=i.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&b(u[o],l,s);o=!0}else i.registrationName?(b(i.registrationName,l,s),o=!0):o=!1;o||a("98",r,e)}}}function b(e,t,n){v[e]&&a("100",e),v[e]=t,A[e]=t.eventTypes[n].dependencies}var y=[],g={},v={},A={},_=null,E=null,x=null;function j(e,t,n){var r=e.type||"unknown-event";e.currentTarget=x(n),function(e,t,n,r,o,i,d,p,m){if(f.apply(this,arguments),l){if(l){var h=s;l=!1,s=null}else a("198"),h=void 0;u||(u=!0,c=h)}}(r,t,void 0,e),e.currentTarget=null}function w(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var k=null;function B(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)j(e,t[r],n[r]);else t&&j(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var T={injectEventPluginOrder:function(e){p&&a("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&a("102",t),m[t]=r,n=!0)}n&&h()}};function S(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function O(e){if(null!==e&&(k=w(k,e)),e=k,k=null,e&&(C(e,B),k&&a("95"),u))throw e=c,u=!1,c=null,e}var P=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+P,I="__reactEventHandlers$"+P;function R(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function N(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function F(e){return e[I]||null}function U(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=S(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=w(n._dispatchListeners,t),n._dispatchInstances=w(n._dispatchInstances,e))}function D(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=U(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function H(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=S(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=w(n._dispatchListeners,t),n._dispatchInstances=w(n._dispatchInstances,e))}function W(e){e&&e.dispatchConfig.registrationName&&H(e._targetInst,null,e)}function Y(e){C(e,D)}var q=!("undefined"==typeof window||!window.document||!window.document.createElement);function V(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:V("Animation","AnimationEnd"),animationiteration:V("Animation","AnimationIteration"),animationstart:V("Animation","AnimationStart"),transitionend:V("Transition","TransitionEnd")},G={},J={};function K(e){if(G[e])return G[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in J)return G[e]=n[t];return e}q&&(J=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var X=K("animationend"),Z=K("animationiteration"),$=K("animationstart"),ee=K("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function se(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ue(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function de(e){e.eventPool=[],e.getPooled=ue,e.release=ce}o(se.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),se.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},se.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,de(n),n},de(se);var fe=se.extend({data:null}),pe=se.extend({data:null}),me=[9,13,27,32],he=q&&"CompositionEvent"in window,be=null;q&&"documentMode"in document&&(be=document.documentMode);var ye=q&&"TextEvent"in window&&!be,ge=q&&(!he||be&&8<be&&11>=be),ve=String.fromCharCode(32),Ae={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_e=!1;function Ee(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function xe(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var je=!1;var we={eventTypes:Ae,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(he)e:{switch(e){case"compositionstart":o=Ae.compositionStart;break e;case"compositionend":o=Ae.compositionEnd;break e;case"compositionupdate":o=Ae.compositionUpdate;break e}o=void 0}else je?Ee(e,n)&&(o=Ae.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Ae.compositionStart);return o?(ge&&"ko"!==n.locale&&(je||o!==Ae.compositionStart?o===Ae.compositionEnd&&je&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,je=!0)),o=fe.getPooled(o,t,n,r),i?o.data=i:null!==(i=xe(n))&&(o.data=i),Y(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return xe(t);case"keypress":return 32!==t.which?null:(_e=!0,ve);case"textInput":return(e=t.data)===ve&&_e?null:e;default:return null}}(e,n):function(e,t){if(je)return"compositionend"===e||!he&&Ee(e,t)?(e=ie(),oe=re=ne=null,je=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(Ae.beforeInput,t,n,r)).data=e,Y(t)):t=null,null===i?t:null===t?i:[i,t]}},Ce=null,ke=null,Be=null;function Te(e){if(e=E(e)){"function"!=typeof Ce&&a("280");var t=_(e.stateNode);Ce(e.stateNode,e.type,t)}}function Se(e){ke?Be?Be.push(e):Be=[e]:ke=e}function Oe(){if(ke){var e=ke,t=Be;if(Be=ke=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Pe(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Ie(){}var Re=!1;function Ne(e,t){if(Re)return e(t);Re=!0;try{return Pe(e,t)}finally{Re=!1,(null!==ke||null!==Be)&&(Ie(),Oe())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fe(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Ue(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!q)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function De(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function He(e){e._valueTracker||(e._valueTracker=function(e){var t=De(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function We(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=De(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ye=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ye.hasOwnProperty("ReactCurrentDispatcher")||(Ye.ReactCurrentDispatcher={current:null});var qe=/^(.*)[\\\/]/,Ve="function"==typeof Symbol&&Symbol.for,Qe=Ve?Symbol.for("react.element"):60103,Ge=Ve?Symbol.for("react.portal"):60106,Je=Ve?Symbol.for("react.fragment"):60107,Ke=Ve?Symbol.for("react.strict_mode"):60108,Xe=Ve?Symbol.for("react.profiler"):60114,Ze=Ve?Symbol.for("react.provider"):60109,$e=Ve?Symbol.for("react.context"):60110,et=Ve?Symbol.for("react.concurrent_mode"):60111,tt=Ve?Symbol.for("react.forward_ref"):60112,nt=Ve?Symbol.for("react.suspense"):60113,rt=Ve?Symbol.for("react.memo"):60115,ot=Ve?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Je:return"Fragment";case Ge:return"Portal";case Xe:return"Profiler";case Ke:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case $e:return"Context.Consumer";case Ze:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function st(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=lt(e.type);n=null,r&&(n=lt(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(qe,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ut=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,dt={},ft={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function bt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(ft,e)||!ct.call(dt,e)&&(ut.test(e)?ft[e]=!0:(dt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function vt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function At(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _t(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function Et(e,t){_t(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?jt(e,t.type,n):t.hasOwnProperty("defaultValue")&&jt(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function xt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function jt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,bt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,bt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,bt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var wt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ct(e,t,n){return(e=se.getPooled(wt.change,e,t,n)).type="change",Se(n),Y(e),e}var kt=null,Bt=null;function Tt(e){O(e)}function St(e){if(We(L(e)))return e}function Ot(e,t){if("change"===e)return t}var Pt=!1;function Mt(){kt&&(kt.detachEvent("onpropertychange",It),Bt=kt=null)}function It(e){"value"===e.propertyName&&St(Bt)&&Ne(Tt,e=Ct(Bt,e,Ue(e)))}function Rt(e,t,n){"focus"===e?(Mt(),Bt=n,(kt=t).attachEvent("onpropertychange",It)):"blur"===e&&Mt()}function Nt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return St(Bt)}function Lt(e,t){if("click"===e)return St(t)}function Ft(e,t){if("input"===e||"change"===e)return St(t)}q&&(Pt=ze("input")&&(!document.documentMode||9<document.documentMode));var Ut={eventTypes:wt,_isInputEventSupported:Pt,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Ot:Fe(o)?Pt?i=Ft:(i=Nt,a=Rt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return Ct(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&jt(o,"number",o.value)}},zt=se.extend({view:null,detail:null}),Dt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ht(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Dt[e])&&!!t[e]}function Wt(){return Ht}var Yt=0,qt=0,Vt=!1,Qt=!1,Gt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Wt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Yt;return Yt=e.screenX,Vt?"mousemove"===e.type?e.screenX-t:0:(Vt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=qt;return qt=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Jt=Gt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Kt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Kt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?R(t):null):i=null,i===t)return null;var a=void 0,l=void 0,s=void 0,u=void 0;"mouseout"===e||"mouseover"===e?(a=Gt,l=Kt.mouseLeave,s=Kt.mouseEnter,u="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Jt,l=Kt.pointerLeave,s=Kt.pointerEnter,u="pointer");var c=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(l,i,n,r)).type=u+"leave",e.target=c,e.relatedTarget=o,(n=a.getPooled(s,t,n,r)).type=u+"enter",n.target=o,n.relatedTarget=c,r=t,i&&r)e:{for(o=r,u=0,a=t=i;a;a=U(a))u++;for(a=0,s=o;s;s=U(s))a++;for(;0<u-a;)t=U(t),u--;for(;0<a-u;)o=U(o),a--;for(;u--;){if(t===o||t===o.alternate)break e;t=U(t),o=U(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(u=i.alternate)||u!==o);)t.push(i),i=U(i);for(i=[];r&&r!==o&&(null===(u=r.alternate)||u!==o);)i.push(r),r=U(r);for(r=0;r<t.length;r++)H(t[r],"bubbled",e);for(r=i.length;0<r--;)H(i[r],"captured",n);return[e,n]}};function Zt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var $t=Object.prototype.hasOwnProperty;function en(e,t){if(Zt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!$t.call(t,n[r])||!Zt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var s=o.child;s;){if(s===n){l=!0,n=o,r=i;break}if(s===r){l=!0,r=o,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,r=o;break}if(s===r){l=!0,r=i,n=o;break}s=s.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=se.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=se.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=zt.extend({relatedTarget:null});function sn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var un={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dn=zt.extend({key:function(e){if(e.key){var t=un[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=sn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Wt,charCode:function(e){return"keypress"===e.type?sn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?sn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),fn=Gt.extend({dataTransfer:null}),pn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Wt}),mn=se.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Gt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),bn=[["abort","abort"],[X,"animationEnd"],[Z,"animationIteration"],[$,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},gn={};function vn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){vn(e,!0)}),bn.forEach(function(e){vn(e,!1)});var An={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===sn(n))return null;case"keydown":case"keyup":e=dn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Gt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case Z:case $:e=on;break;case ee:e=mn;break;case"scroll":e=zt;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Jt;break;default:e=se}return Y(t=e.getPooled(o,t,n,r)),t}},_n=An.isInteractiveTopLevelEventType,En=[];function xn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=R(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Ue(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<y.length;l++){var s=y[l];s&&(s=s.extractEvents(r,t,i,o))&&(a=w(a,s))}O(a)}}var jn=!0;function wn(e,t){if(!t)return null;var n=(_n(e)?kn:Bn).bind(null,e);t.addEventListener(e,n,!1)}function Cn(e,t){if(!t)return null;var n=(_n(e)?kn:Bn).bind(null,e);t.addEventListener(e,n,!0)}function kn(e,t){Me(Bn,e,t)}function Bn(e,t){if(jn){var n=Ue(t);if(null===(n=R(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),En.length){var r=En.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ne(xn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>En.length&&En.push(e)}}}var Tn={},Sn=0,On="_reactListenersID"+(""+Math.random()).slice(2);function Pn(e){return Object.prototype.hasOwnProperty.call(e,On)||(e[On]=Sn++,Tn[e[On]]={}),Tn[e[On]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function In(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Rn(e,t){var n,r=In(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=In(r)}}function Nn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Mn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Fn(e){var t=Nn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=Rn(n,i);var a=Rn(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Un=q&&"documentMode"in document&&11>=document.documentMode,zn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Dn=null,Hn=null,Wn=null,Yn=!1;function qn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Yn||null==Dn||Dn!==Mn(n)?null:("selectionStart"in(n=Dn)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wn&&en(Wn,n)?null:(Wn=n,(e=se.getPooled(zn.select,Hn,e,t)).type="select",e.target=Dn,Y(e),e))}var Vn={eventTypes:zn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Pn(i),o=A.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(Fe(i)||"true"===i.contentEditable)&&(Dn=i,Hn=t,Wn=null);break;case"blur":Wn=Hn=Dn=null;break;case"mousedown":Yn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Yn=!1,qn(n,r);case"selectionchange":if(Un)break;case"keydown":case"keyup":return qn(n,r)}return null}};function Qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Gn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Jn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Kn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Xn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Zn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}T.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=F,E=N,x=L,T.injectEventPluginsByName({SimpleEventPlugin:An,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ut,SelectEventPlugin:Vn,BeforeInputEventPlugin:we});var $n={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==$n.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function sr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=sr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function dr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Pn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=A[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Cn("scroll",e);break;case"focus":case"blur":Cn("focus",e),Cn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&Cn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&wn(o,e)}n[o]=!0}}}function mr(){}var hr=null,br=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var vr="function"==typeof setTimeout?setTimeout:void 0,Ar="function"==typeof clearTimeout?clearTimeout:void 0,_r=i.unstable_scheduleCallback,Er=i.unstable_cancelCallback;function xr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function jr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var wr=[],Cr=-1;function kr(e){0>Cr||(e.current=wr[Cr],wr[Cr]=null,Cr--)}function Br(e,t){wr[++Cr]=e.current,e.current=t}var Tr={},Sr={current:Tr},Or={current:!1},Pr=Tr;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Tr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ir(e){return null!=(e=e.childContextTypes)}function Rr(e){kr(Or),kr(Sr)}function Nr(e){kr(Or),kr(Sr)}function Lr(e,t,n){Sr.current!==Tr&&a("168"),Br(Sr,t),Br(Or,n)}function Fr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Ur(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Tr,Pr=Sr.current,Br(Sr,t),Br(Or,Or.current),!0}function zr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Fr(e,t,Pr),r.__reactInternalMemoizedMergedChildContext=t,kr(Or),kr(Sr),Br(Sr,t)):kr(Or),Br(Or,n)}var Dr=null,Hr=null;function Wr(e){return function(t){try{return e(t)}catch(e){}}}function Yr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qr(e,t,n,r){return new Yr(e,t,n,r)}function Vr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Qr(e,t){var n=e.alternate;return null===n?((n=qr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Gr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Vr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Je:return Jr(n.children,o,i,t);case et:return Kr(n,3|o,i,t);case Ke:return Kr(n,2|o,i,t);case Xe:return(e=qr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=qr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ze:l=10;break e;case $e:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=qr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Jr(e,t,n,r){return(e=qr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=qr(8,e,r,t),t=0==(1&t)?Ke:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Xr(e,t,n){return(e=qr(6,e,null,t)).expirationTime=n,e}function Zr(e,t,n){return(t=qr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $r(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=El(),o=Ki(r=Ja(r,e));o.payload=t,null!=n&&(o.callback=n),Wa(),Zi(e,o),Za(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=El(),o=Ki(r=Ja(r,e));o.tag=Yi,o.payload=t,null!=n&&(o.callback=n),Wa(),Zi(e,o),Za(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=El(),r=Ki(n=Ja(n,e));r.tag=qi,null!=t&&(r.callback=t),Wa(),Zi(e,r),Za(e,n)}};function lo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function so(e,t,n){var r=!1,o=Tr,i=t.contextType;return"object"==typeof i&&null!==i?i=Hi(i):(o=Ir(t)?Pr:Sr.current,i=(r=null!=(r=t.contextTypes))?Mr(e,o):Tr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function co(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Hi(i):(i=Ir(t)?Pr:Sr.current,o.context=Mr(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function mo(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function ho(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Qr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Gr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Zr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=Jr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Xr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Gr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Ge:return(t=Zr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Jr(t,e.mode,n,null)).return=e,t;mo(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Je?d(e,t,n.props.children,r,o):u(e,t,n,r):null;case Ge:return n.key===o?c(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:d(e,t,n,r,null);mo(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Je?d(t,e,r.props.children,o,r.key):u(t,e,r,o);case Ge:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return d(t,e=e.get(n)||null,r,o,null);mo(t,r)}return null}function h(o,a,l,s){for(var u=null,c=null,d=a,h=a=0,b=null;null!==d&&h<l.length;h++){d.index>h?(b=d,d=null):b=d.sibling;var y=p(o,d,l[h],s);if(null===y){null===d&&(d=b);break}e&&d&&null===y.alternate&&t(o,d),a=i(y,a,h),null===c?u=y:c.sibling=y,c=y,d=b}if(h===l.length)return n(o,d),u;if(null===d){for(;h<l.length;h++)(d=f(o,l[h],s))&&(a=i(d,a,h),null===c?u=d:c.sibling=d,c=d);return u}for(d=r(o,d);h<l.length;h++)(b=m(d,o,h,l[h],s))&&(e&&null!==b.alternate&&d.delete(null===b.key?h:b.key),a=i(b,a,h),null===c?u=b:c.sibling=b,c=b);return e&&d.forEach(function(e){return t(o,e)}),u}function b(o,l,s,u){var c=at(s);"function"!=typeof c&&a("150"),null==(s=c.call(s))&&a("151");for(var d=c=null,h=l,b=l=0,y=null,g=s.next();null!==h&&!g.done;b++,g=s.next()){h.index>b?(y=h,h=null):y=h.sibling;var v=p(o,h,g.value,u);if(null===v){h||(h=y);break}e&&h&&null===v.alternate&&t(o,h),l=i(v,l,b),null===d?c=v:d.sibling=v,d=v,h=y}if(g.done)return n(o,h),c;if(null===h){for(;!g.done;b++,g=s.next())null!==(g=f(o,g.value,u))&&(l=i(g,l,b),null===d?c=g:d.sibling=g,d=g);return c}for(h=r(o,h);!g.done;b++,g=s.next())null!==(g=m(h,o,b,g.value,u))&&(e&&null!==g.alternate&&h.delete(null===g.key?b:g.key),l=i(g,l,b),null===d?c=g:d.sibling=g,d=g);return e&&h.forEach(function(e){return t(o,e)}),c}return function(e,r,i,s){var u="object"==typeof i&&null!==i&&i.type===Je&&null===i.key;u&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Qe:e:{for(c=i.key,u=r;null!==u;){if(u.key===c){if(7===u.tag?i.type===Je:u.elementType===i.type){n(e,u.sibling),(r=o(u,i.type===Je?i.props.children:i.props)).ref=po(e,u,i),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}i.type===Je?((r=Jr(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=Gr(i.type,i.key,i.props,null,e.mode,s)).ref=po(e,r,i),s.return=e,e=s)}return l(e);case Ge:e:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Zr(i,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Xr(i,e.mode,s)).return=e,e=r),l(e);if(fo(i))return h(e,r,i,s);if(at(i))return b(e,r,i,s);if(c&&mo(e,i),void 0===i&&!u)switch(e.tag){case 1:case 0:a("152",(s=e.type).displayName||s.name||"Component")}return n(e,r)}}var bo=ho(!0),yo=ho(!1),go={},vo={current:go},Ao={current:go},_o={current:go};function Eo(e){return e===go&&a("174"),e}function xo(e,t){Br(_o,t),Br(Ao,e),Br(vo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}kr(vo),Br(vo,t)}function jo(e){kr(vo),kr(Ao),kr(_o)}function wo(e){Eo(_o.current);var t=Eo(vo.current),n=tr(t,e.type);t!==n&&(Br(Ao,e),Br(vo,n))}function Co(e){Ao.current===e&&(kr(vo),kr(Ao))}var ko=0,Bo=2,To=4,So=8,Oo=16,Po=32,Mo=64,Io=128,Ro=Ye.ReactCurrentDispatcher,No=0,Lo=null,Fo=null,Uo=null,zo=null,Do=null,Ho=null,Wo=0,Yo=null,qo=0,Vo=!1,Qo=null,Go=0;function Jo(){a("307")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Zt(e[n],t[n]))return!1;return!0}function Xo(e,t,n,r,o,i){if(No=i,Lo=t,Uo=null!==e?e.memoizedState:null,Ro.current=null===Uo?ci:di,t=n(r,o),Vo){do{Vo=!1,Go+=1,Uo=null!==e?e.memoizedState:null,Ho=zo,Yo=Do=Fo=null,Ro.current=di,t=n(r,o)}while(Vo);Qo=null,Go=0}return Ro.current=ui,(e=Lo).memoizedState=zo,e.expirationTime=Wo,e.updateQueue=Yo,e.effectTag|=qo,e=null!==Fo&&null!==Fo.next,No=0,Ho=Do=zo=Uo=Fo=Lo=null,Wo=0,Yo=null,qo=0,e&&a("300"),t}function Zo(){Ro.current=ui,No=0,Ho=Do=zo=Uo=Fo=Lo=null,Wo=0,Yo=null,qo=0,Vo=!1,Qo=null,Go=0}function $o(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Do?zo=Do=e:Do=Do.next=e,Do}function ei(){if(null!==Ho)Ho=(Do=Ho).next,Uo=null!==(Fo=Uo)?Fo.next:null;else{null===Uo&&a("310");var e={memoizedState:(Fo=Uo).memoizedState,baseState:Fo.baseState,queue:Fo.queue,baseUpdate:Fo.baseUpdate,next:null};Do=null===Do?zo=e:Do.next=e,Uo=Fo.next}return Do}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),0<Go){var r=n.dispatch;if(null!==Qo){var o=Qo.get(n);if(void 0!==o){Qo.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Zt(i,t.memoizedState)||(Ei=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.eagerReducer=e,n.eagerState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var s=o=null,u=r,c=!1;do{var d=u.expirationTime;d<No?(c||(c=!0,s=l,o=i),d>Wo&&(Wo=d)):i=u.eagerReducer===e?u.eagerState:e(i,u.action),l=u,u=u.next}while(null!==u&&u!==r);c||(s=l,o=i),Zt(i,t.memoizedState)||(Ei=!0),t.memoizedState=i,t.baseUpdate=s,t.baseState=o,n.eagerReducer=e,n.eagerState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Yo?(Yo={lastEffect:null}).lastEffect=e.next=e:null===(t=Yo.lastEffect)?Yo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Yo.lastEffect=e),e}function oi(e,t,n,r){var o=$o();qo|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Fo){var a=Fo.memoizedState;if(i=a.destroy,null!==r&&Ko(r,a.deps))return void ri(ko,n,i,r)}qo|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function li(){}function si(e,t,n){25>Go||a("301");var r=e.alternate;if(e===Lo||null!==r&&r===Lo)if(Vo=!0,e={expirationTime:No,action:n,eagerReducer:null,eagerState:null,next:null},null===Qo&&(Qo=new Map),void 0===(n=Qo.get(t)))Qo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Wa();var o=El(),i={expirationTime:o=Ja(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)i.next=i;else{var s=l.next;null!==s&&(i.next=s),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.eagerReducer))try{var u=t.eagerState,c=r(u,n);if(i.eagerReducer=r,i.eagerState=c,Zt(c,u))return}catch(e){}Za(e,o)}}var ui={readContext:Hi,useCallback:Jo,useContext:Jo,useEffect:Jo,useImperativeHandle:Jo,useLayoutEffect:Jo,useMemo:Jo,useReducer:Jo,useRef:Jo,useState:Jo,useDebugValue:Jo},ci={readContext:Hi,useCallback:function(e,t){return $o().memoizedState=[e,void 0===t?null:t],e},useContext:Hi,useEffect:function(e,t){return oi(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,To|Po,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,To|Po,e,t)},useMemo:function(e,t){var n=$o();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=$o();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,eagerReducer:e,eagerState:t}).dispatch=si.bind(null,Lo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},$o().memoizedState=e},useState:function(e){var t=$o();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,eagerReducer:ti,eagerState:e}).dispatch=si.bind(null,Lo,e),[t.memoizedState,e]},useDebugValue:li},di={readContext:Hi,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Hi,useEffect:function(e,t){return ii(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,To|Po,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,To|Po,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:li},fi=null,pi=null,mi=!1;function hi(e,t){var n=qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function bi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function yi(e){if(mi){var t=pi;if(t){var n=t;if(!bi(e,t)){if(!(t=xr(n))||!bi(e,t))return e.effectTag|=2,mi=!1,void(fi=e);hi(fi,n)}fi=e,pi=jr(t)}else e.effectTag|=2,mi=!1,fi=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fi=e}function vi(e){if(e!==fi)return!1;if(!mi)return gi(e),mi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=pi;t;)hi(e,t),t=xr(t);return gi(e),pi=fi?xr(e.stateNode):null,!0}function Ai(){pi=fi=null,mi=!1}var _i=Ye.ReactCurrentOwner,Ei=!1;function xi(e,t,n,r){t.child=null===e?yo(t,null,n,r):bo(t,e.child,n,r)}function ji(e,t,n,r,o){n=n.render;var i=t.ref;return Di(t,o),r=Xo(e,t,n,r,i,o),null===e||Ei?(t.effectTag|=1,xi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function wi(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Vr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Gr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ci(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Mi(e,t,i):(t.effectTag|=1,(e=Qr(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ci(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(Ei=!1,o<i)?Mi(e,t,i):Bi(e,t,n,r,i)}function ki(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Bi(e,t,n,r,o){var i=Ir(n)?Pr:Sr.current;return i=Mr(t,i),Di(t,o),n=Xo(e,t,n,r,i,o),null===e||Ei?(t.effectTag|=1,xi(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function Ti(e,t,n,r,o){if(Ir(n)){var i=!0;Ur(t)}else i=!1;if(Di(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),so(t,n,r),co(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var s=a.context,u=n.contextType;"object"==typeof u&&null!==u?u=Hi(u):u=Mr(t,u=Ir(n)?Pr:Sr.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==u)&&uo(t,a,r,u),Qi=!1;var f=t.memoizedState;s=a.state=f;var p=t.updateQueue;null!==p&&(na(t,p,r,a,o),s=t.memoizedState),l!==r||f!==s||Or.current||Qi?("function"==typeof c&&(io(t,n,c,r),s=t.memoizedState),(l=Qi||lo(t,n,l,r,f,s,u))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),a.props=r,a.state=s,a.context=u,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:ro(t.type,l),s=a.context,"object"==typeof(u=n.contextType)&&null!==u?u=Hi(u):u=Mr(t,u=Ir(n)?Pr:Sr.current),(d="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==u)&&uo(t,a,r,u),Qi=!1,s=t.memoizedState,f=a.state=s,null!==(p=t.updateQueue)&&(na(t,p,r,a,o),f=t.memoizedState),l!==r||s!==f||Or.current||Qi?("function"==typeof c&&(io(t,n,c,r),f=t.memoizedState),(c=Qi||lo(t,n,l,r,s,f,u))?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,u)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=u,r=c):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Si(e,t,n,r,i,o)}function Si(e,t,n,r,o,i){ki(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&zr(t,n,!1),Mi(e,t,i);r=t.stateNode,_i.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=bo(t,e.child,null,i),t.child=bo(t,null,l,i)):xi(e,t,l,i),t.memoizedState=r.state,o&&zr(t,n,!0),t.child}function Oi(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),xo(e,t.containerInfo)}function Pi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Jr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Jr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=yo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Qr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Qr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=bo(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Jr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Jr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=bo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Mi(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Qr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Qr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ii(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Or.current)Ei=!0;else if(r<n){switch(Ei=!1,t.tag){case 3:Oi(t),Ai();break;case 5:wo(t);break;case 1:Ir(t.type)&&Ur(t);break;case 4:xo(t,t.stateNode.containerInfo);break;case 10:Ui(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Pi(e,t,n):null!==(t=Mi(e,t,n))?t.sibling:null}return Mi(e,t,n)}}else Ei=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Sr.current);if(Di(t,n),o=Xo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Zo(),Ir(r)){var i=!0;Ur(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&io(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,co(t,r,e,n),t=Si(null,t,r,!0,i,n)}else t.tag=0,xi(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Vr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),l=void 0,o){case 0:l=Bi(null,t,e,i,n);break;case 1:l=Ti(null,t,e,i,n);break;case 11:l=ji(null,t,e,i,n);break;case 14:l=wi(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Bi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ti(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Oi(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(Ai(),t=Mi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(pi=jr(t.stateNode.containerInfo),fi=t,o=mi=!0),o?(t.effectTag|=2,t.child=yo(t,null,r,n)):(xi(e,t,r,n),Ai()),t=t.child),t;case 5:return wo(t),null===e&&yi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,gr(r,o)?l=null:null!==i&&gr(r,i)&&(t.effectTag|=16),ki(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(xi(e,t,l,n),t=t.child),t;case 6:return null===e&&yi(t),null;case 13:return Pi(e,t,n);case 4:return xo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=bo(t,null,r,n):xi(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ji(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return xi(e,t,t.pendingProps,n),t.child;case 8:case 12:return xi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,Ui(t,i=o.value),null!==l){var s=l.value;if(0===(i=Zt(s,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,i):1073741823))){if(l.children===o.children&&!Or.current){t=Mi(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.contextDependencies;if(null!==u){l=s.child;for(var c=u.first;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===s.tag&&((c=Ki(n)).tag=qi,Zi(s,c)),s.expirationTime<n&&(s.expirationTime=n),null!==(c=s.alternate)&&c.expirationTime<n&&(c.expirationTime=n),c=n;for(var d=s.return;null!==d;){var f=d.alternate;if(d.childExpirationTime<c)d.childExpirationTime=c,null!==f&&f.childExpirationTime<c&&(f.childExpirationTime=c);else{if(!(null!==f&&f.childExpirationTime<c))break;f.childExpirationTime=c}d=d.return}u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}}xi(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Di(t,n),r=r(o=Hi(o,i.unstable_observedBits)),t.effectTag|=1,xi(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),wi(e,t,o,i=ro(o.type,i),r,n);case 15:return Ci(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,Ur(t)):e=!1,Di(t,n),so(t,r,o),co(t,r,o,n),Si(null,t,r,!0,e,n)}a("156")}var Ri={current:null},Ni=null,Li=null,Fi=null;function Ui(e,t){var n=e.type._context;Br(Ri,n._currentValue),n._currentValue=t}function zi(e){var t=Ri.current;kr(Ri),e.type._context._currentValue=t}function Di(e,t){Ni=e,Fi=Li=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(Ei=!0),e.contextDependencies=null}function Hi(e,t){return Fi!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Fi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Li?(null===Ni&&a("308"),Li=t,Ni.contextDependencies={first:t,expirationTime:0}):Li=Li.next=t),e._currentValue}var Wi=0,Yi=1,qi=2,Vi=3,Qi=!1;function Gi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ji(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ki(e){return{expirationTime:e,tag:Wi,payload:null,callback:null,next:null,nextEffect:null}}function Xi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Zi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Gi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Gi(e.memoizedState),o=n.updateQueue=Gi(n.memoizedState)):r=e.updateQueue=Ji(o):null===o&&(o=n.updateQueue=Ji(r));null===o||r===o?Xi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Xi(r,t),Xi(o,t)):(Xi(r,t),o.lastUpdate=t)}function $i(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Gi(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Ji(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case Yi:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case Vi:e.effectTag=-2049&e.effectTag|64;case Wi:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case qi:Qi=!0}return r}function na(e,t,n,r,o){Qi=!1;for(var i=(t=ea(e,t)).baseState,a=null,l=0,s=t.firstUpdate,u=i;null!==s;){var c=s.expirationTime;c<o?(null===a&&(a=s,i=u),l<c&&(l=c)):(u=ta(e,0,s,u,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=s:(t.lastEffect.nextEffect=s,t.lastEffect=s))),s=s.next}for(c=null,s=t.firstCapturedUpdate;null!==s;){var d=s.expirationTime;d<o?(null===c&&(c=s,null===a&&(i=u)),l<d&&(l=d)):(u=ta(e,0,s,u,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=s:(t.lastCapturedEffect.nextEffect=s,t.lastCapturedEffect=s))),s=s.next}null===a&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===c&&(i=u),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=u}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:st(t)}}function aa(e){e.effectTag|=4}var la=void 0,sa=void 0,ua=void 0,ca=void 0;la=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},sa=function(){},ua=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(Eo(vo.current),e=null,n){case"input":a=vt(l,a),r=vt(l,r),e=[];break;case"option":a=Qn(l,a),r=Qn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Jn(l,a),r=Jn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=mr)}dr(n,r),l=n=void 0;var s=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var u=a[n];for(l in u)u.hasOwnProperty(l)&&(s||(s={}),s[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(v.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(u=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&c!==u&&(null!=c||null!=u))if("style"===n)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(s||(s={}),s[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(s||(s={}),s[l]=c[l])}else s||(e||(e=[]),e.push(n,s)),s=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(n,""+c)):"children"===n?u===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(v.hasOwnProperty(n)?(null!=c&&pr(i,n),e||u===c||(e=[])):(e=e||[]).push(n,c))}s&&(e=e||[]).push("style",s),i=e,(t.updateQueue=i)&&aa(t)}},ca=function(e,t,n,r){n!==r&&aa(t)};var da="function"==typeof WeakSet?WeakSet:Set;function fa(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=st(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function pa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ga(e,t)}else t.current=null}function ma(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==ko){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==ko&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ha(e){switch("function"==typeof Hr&&Hr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Ga(o,e)}}n=n.next}while(n!==t)}break;case 1:if(pa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ga(e,t)}break;case 5:pa(e);break;case 4:ga(e)}}function ba(e){return 5===e.tag||3===e.tag||4===e.tag}function ya(e){e:{for(var t=e.return;null!==t;){if(ba(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ba(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,s=n;8===i.nodeType?i.parentNode.insertBefore(l,s):i.insertBefore(l,s)}else t.insertBefore(o.stateNode,n);else r?(l=t,s=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(s,l):(i=l).appendChild(s),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=mr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(ha(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(ha(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ma(To,So,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[I]=o,"input"===n&&"radio"===o.type&&null!=o.name&&_t(e,o),fr(n,r),r=fr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?ur(e,l):"dangerouslySetInnerHTML"===a?or(e,l):"children"===a?ir(e,l):yt(e,a,l,r)}switch(n){case"input":Et(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Gn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Gn(e,!!o.multiple,o.defaultValue,!0):Gn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=El())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=sr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new da),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ja(t=El(),e),null!==(e=Xa(e,t))&&($r(e,t),0!==(t=e.expirationTime)&&xl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var Aa="function"==typeof WeakMap?WeakMap:Map;function _a(e,t,n){(n=Ki(n)).tag=Vi,n.payload={element:null};var r=t.value;return n.callback=function(){Pl(r),fa(e,t)},n}function Ea(e,t,n){(n=Ki(n)).tag=Vi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fa?Fa=new Set([this]):Fa.add(this));var n=t.value,o=t.stack;fa(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function xa(e){switch(e.tag){case 1:Ir(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return jo(),Nr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Co(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return jo(),null;case 10:return zi(e),null;default:return null}}var ja=Ye.ReactCurrentDispatcher,wa=Ye.ReactCurrentOwner,Ca=1073741822,ka=!1,Ba=null,Ta=null,Sa=0,Oa=-1,Pa=!1,Ma=null,Ia=!1,Ra=null,Na=null,La=null,Fa=null;function Ua(){if(null!==Ba)for(var e=Ba.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:jo(),Nr();break;case 5:Co(t);break;case 4:jo();break;case 10:zi(t)}e=e.return}Ta=null,Sa=0,Oa=-1,Pa=!1,Ba=null}function za(){for(;null!==Ma;){var e=Ma.effectTag;if(16&e&&ir(Ma.stateNode,""),128&e){var t=Ma.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:ya(Ma),Ma.effectTag&=-3;break;case 6:ya(Ma),Ma.effectTag&=-3,va(Ma.alternate,Ma);break;case 4:va(Ma.alternate,Ma);break;case 8:ga(e=Ma),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ma=Ma.nextEffect}}function Da(){for(;null!==Ma;){if(256&Ma.effectTag)e:{var e=Ma.alternate,t=Ma;switch(t.tag){case 0:case 11:case 15:ma(Bo,ko,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Ma=Ma.nextEffect}}function Ha(e,t){for(;null!==Ma;){var n=Ma.effectTag;if(36&n){var r=Ma.alternate,o=Ma,i=t;switch(o.tag){case 0:case 11:case 15:ma(Oo,Po,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var s=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(s,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ra(0,r,l)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=Ma.ref)&&(i=Ma.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Ra=e),Ma=Ma.nextEffect}}function Wa(){null!==Na&&Er(Na),null!==La&&La()}function Ya(e,t){Ia=ka=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?$r(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,$r(e,t)):t>n&&$r(e,t)}no(0,e)}(e,o>r?o:r),wa.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,hr=jn,br=function(){var e=Nn();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,s=0,u=0,c=e,d=null;t:for(;;){for(var f;c!==t||0!==r&&3!==c.nodeType||(a=i+r),c!==o||0!==n&&3!==c.nodeType||(l=i+n),3===c.nodeType&&(i+=c.nodeValue.length),null!==(f=c.firstChild);)d=c,c=f;for(;;){if(c===e)break t;if(d===t&&++s===r&&(a=i),d===o&&++u===n&&(l=i),null!==(f=c.nextSibling))break;d=(c=d).parentNode}c=f}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),jn=!1,Ma=r;null!==Ma;){o=!1;var l=void 0;try{Da()}catch(e){o=!0,l=e}o&&(null===Ma&&a("178"),Ga(Ma,l),null!==Ma&&(Ma=Ma.nextEffect))}for(Ma=r;null!==Ma;){o=!1,l=void 0;try{za()}catch(e){o=!0,l=e}o&&(null===Ma&&a("178"),Ga(Ma,l),null!==Ma&&(Ma=Ma.nextEffect))}for(Fn(br),br=null,jn=!!hr,hr=null,e.current=t,Ma=r;null!==Ma;){o=!1,l=void 0;try{Ha(e,n)}catch(e){o=!0,l=e}o&&(null===Ma&&a("178"),Ga(Ma,l),null!==Ma&&(Ma=Ma.nextEffect))}if(null!==r&&null!==Ra){var s=function(e,t){La=Na=Ra=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ma(Io,ko,i),ma(ko,Mo,i)}catch(e){r=!0,o=e}r&&Ga(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&xl(e,n),cl||ol||Bl(1073741823,!1)}.bind(null,e,r);Na=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return _r(s)}),La=s}ka=Ia=!1,"function"==typeof Dr&&Dr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Fa=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function qa(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ba=e;e:{var i=t,l=Sa,s=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Rr();break;case 3:jo(),Nr(),(s=t.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==i&&null!==i.child||(vi(t),t.effectTag&=-3),sa(t);break;case 5:Co(t);var u=Eo(_o.current);if(l=t.type,null!==i&&null!=t.stateNode)ua(i,t,l,s,u),i.ref!==t.ref&&(t.effectTag|=128);else if(s){var c=Eo(vo.current);if(vi(t)){i=(s=t).stateNode;var d=s.type,f=s.memoizedProps,p=u;switch(i[M]=s,i[I]=f,l=void 0,u=d){case"iframe":case"object":wn("load",i);break;case"video":case"audio":for(d=0;d<te.length;d++)wn(te[d],i);break;case"source":wn("error",i);break;case"img":case"image":case"link":wn("error",i),wn("load",i);break;case"form":wn("reset",i),wn("submit",i);break;case"details":wn("toggle",i);break;case"input":At(i,f),wn("invalid",i),pr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!f.multiple},wn("invalid",i),pr(p,"onChange");break;case"textarea":Kn(i,f),wn("invalid",i),pr(p,"onChange")}for(l in dr(u,f),d=null,f)f.hasOwnProperty(l)&&(c=f[l],"children"===l?"string"==typeof c?i.textContent!==c&&(d=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(d=["children",""+c]):v.hasOwnProperty(l)&&null!=c&&pr(p,l));switch(u){case"input":He(i),xt(i,f,!0);break;case"textarea":He(i),Zn(i);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(i.onclick=mr)}l=d,s.updateQueue=l,(s=null!==l)&&aa(t)}else{f=t,i=l,p=s,d=9===u.nodeType?u:u.ownerDocument,c===$n.html&&(c=er(i)),c===$n.html?"script"===i?((i=d.createElement("div")).innerHTML="<script><\/script>",d=i.removeChild(i.firstChild)):"string"==typeof p.is?d=d.createElement(i,{is:p.is}):(d=d.createElement(i),"select"===i&&p.multiple&&(d.multiple=!0)):d=d.createElementNS(c,i),(i=d)[M]=f,i[I]=s,la(i,t,!1,!1),p=i;var m=u,h=fr(d=l,f=s);switch(d){case"iframe":case"object":wn("load",p),u=f;break;case"video":case"audio":for(u=0;u<te.length;u++)wn(te[u],p);u=f;break;case"source":wn("error",p),u=f;break;case"img":case"image":case"link":wn("error",p),wn("load",p),u=f;break;case"form":wn("reset",p),wn("submit",p),u=f;break;case"details":wn("toggle",p),u=f;break;case"input":At(p,f),u=vt(p,f),wn("invalid",p),pr(m,"onChange");break;case"option":u=Qn(p,f);break;case"select":p._wrapperState={wasMultiple:!!f.multiple},u=o({},f,{value:void 0}),wn("invalid",p),pr(m,"onChange");break;case"textarea":Kn(p,f),u=Jn(p,f),wn("invalid",p),pr(m,"onChange");break;default:u=f}dr(d,u),c=void 0;var b=d,y=p,g=u;for(c in g)if(g.hasOwnProperty(c)){var A=g[c];"style"===c?ur(y,A):"dangerouslySetInnerHTML"===c?null!=(A=A?A.__html:void 0)&&or(y,A):"children"===c?"string"==typeof A?("textarea"!==b||""!==A)&&ir(y,A):"number"==typeof A&&ir(y,""+A):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(v.hasOwnProperty(c)?null!=A&&pr(m,c):null!=A&&yt(y,c,A,h))}switch(d){case"input":He(p),xt(p,f,!1);break;case"textarea":He(p),Zn(p);break;case"option":null!=f.value&&p.setAttribute("value",""+gt(f.value));break;case"select":(u=p).multiple=!!f.multiple,null!=(p=f.value)?Gn(u,!!f.multiple,p,!1):null!=f.defaultValue&&Gn(u,!!f.multiple,f.defaultValue,!0);break;default:"function"==typeof u.onClick&&(p.onclick=mr)}(s=yr(l,s))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?ca(i,t,i.memoizedProps,s):("string"!=typeof s&&(null===t.stateNode&&a("166")),i=Eo(_o.current),Eo(vo.current),vi(t)?(l=(s=t).stateNode,i=s.memoizedProps,l[M]=s,(s=l.nodeValue!==i)&&aa(t)):(l=t,(s=(9===i.nodeType?i:i.ownerDocument).createTextNode(s))[M]=t,l.stateNode=s));break;case 11:break;case 13:if(s=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ba=t;break e}s=null!==s,l=null!==i&&null!==i.memoizedState,null!==i&&!s&&l&&(null!==(i=i.child.sibling)&&(null!==(u=t.firstEffect)?(t.firstEffect=i,i.nextEffect=u):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(s||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:jo(),sa(t);break;case 10:zi(t);break;case 9:case 14:break;case 17:Ir(t.type)&&Rr();break;case 18:break;default:a("156")}Ba=null}if(t=e,1===Sa||1!==t.childExpirationTime){for(s=0,l=t.child;null!==l;)(i=l.expirationTime)>s&&(s=i),(u=l.childExpirationTime)>s&&(s=u),l=l.sibling;t.childExpirationTime=s}if(null!==Ba)return Ba;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=xa(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Va(e){var t=Ii(e.alternate,e,Sa);return e.memoizedProps=e.pendingProps,null===t&&(t=qa(e)),wa.current=null,t}function Qa(e,t){ka&&a("243"),Wa(),ka=!0;var n=ja.current;ja.current=ui;var r=e.nextExpirationTimeToWorkOn;r===Sa&&e===Ta&&null!==Ba||(Ua(),Sa=r,Ba=Qr((Ta=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ba&&!Cl();)Ba=Va(Ba);else for(;null!==Ba;)Ba=Va(Ba)}catch(t){if(Fi=Li=Ni=null,Zo(),null===Ba)o=!0,Pl(t);else{null===Ba&&a("271");var i=Ba,l=i.return;if(null!==l){e:{var s=e,u=l,c=i,d=t;if(l=Sa,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==d&&"object"==typeof d&&"function"==typeof d.then){var f=d;d=u;var p=-1,m=-1;do{if(13===d.tag){var h=d.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=d.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}d=d.return}while(null!==d);d=u;do{if((h=13===d.tag)&&(h=void 0!==d.memoizedProps.fallback&&null===d.memoizedState),h){if(null===(u=d.updateQueue)?((u=new Set).add(f),d.updateQueue=u):u.add(f),0==(1&d.mode)){d.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((l=Ki(1073741823)).tag=qi,Zi(c,l))),c.expirationTime=1073741823;break e}u=l;var b=(c=s).pingCache;null===b?(b=c.pingCache=new Aa,h=new Set,b.set(f,h)):void 0===(h=b.get(f))&&(h=new Set,b.set(f,h)),h.has(u)||(h.add(u),c=Ka.bind(null,c,f,u),f.then(c,c)),-1===p?s=1073741823:(-1===m&&(m=10*(1073741822-to(s,l))-5e3),s=m+p),0<=s&&Oa<s&&(Oa=s),d.effectTag|=2048,d.expirationTime=l;break e}d=d.return}while(null!==d);d=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+st(c))}Pa=!0,d=ia(d,c),s=u;do{switch(s.tag){case 3:s.effectTag|=2048,s.expirationTime=l,$i(s,l=_a(s,d,l));break e;case 1:if(p=d,m=s.type,c=s.stateNode,0==(64&s.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==c&&"function"==typeof c.componentDidCatch&&(null===Fa||!Fa.has(c)))){s.effectTag|=2048,s.expirationTime=l,$i(s,l=Ea(s,p,l));break e}}s=s.return}while(null!==s)}Ba=qa(i);continue}o=!0,Pl(t)}}break}if(ka=!1,ja.current=n,Fi=Li=Ni=null,Zo(),o)Ta=null,e.finishedWork=null;else if(null!==Ba)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Ta=null,Pa){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==l&&l<r)return eo(e,r),void _l(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void _l(e,n,r,t,-1)}t&&-1!==Oa?(eo(e,r),(t=10*(1073741822-to(e,r)))<Oa&&(Oa=t),t=10*(1073741822-El()),t=Oa-t,_l(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ga(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fa||!Fa.has(r)))return Zi(n,e=Ea(n,e=ia(t,e),1073741823)),void Za(n,1073741823);break;case 3:return Zi(n,e=_a(n,e=ia(t,e),1073741823)),void Za(n,1073741823)}n=n.return}3===e.tag&&(Zi(e,n=_a(e,n=ia(t,e),1073741823)),Za(e,1073741823))}function Ja(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(ka&&!Ia)r=Sa;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Ta&&r===Sa&&--r}return n===i.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Ka(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Ta&&Sa===n?Ta=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&xl(e,n)))}function Xa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Za(e,t){null!==(e=Xa(e,t))&&(!ka&&0!==Sa&&t>Sa&&Ua(),$r(e,t),ka&&!Ia&&Ta===e||xl(e,e.expirationTime),yl>bl&&(yl=0,a("185")))}function $a(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,il=null,al=0,ll=0,sl=!1,ul=null,cl=!1,dl=!1,fl=null,pl=i.unstable_now(),ml=1073741822-(pl/10|0),hl=ml,bl=50,yl=0,gl=null;function vl(){ml=1073741822-((i.unstable_now()-pl)/10|0)}function Al(e,t){if(0!==nl){if(t<nl)return;null!==rl&&i.unstable_cancelCallback(rl)}nl=t,e=i.unstable_now()-pl,rl=i.unstable_scheduleCallback(kl,{timeout:10*(1073741822-t)-e})}function _l(e,t,n,r,o){e.expirationTime=r,0!==o||Cl()?0<o&&(e.timeoutHandle=vr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,vl(),hl=ml,Tl(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function El(){return ol?hl:(jl(),0!==al&&1!==al||(vl(),hl=ml),hl)}function xl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(cl?dl&&(il=e,al=1073741823,Sl(e,1073741823,!1)):1073741823===t?Bl(1073741823,!1):Al(e,t))}function jl(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&a("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}il=t,al=e}var wl=!1;function Cl(){return!!wl||!!i.unstable_shouldYield()&&(wl=!0)}function kl(){try{if(!Cl()&&null!==el){vl();var e=el;do{var t=e.expirationTime;0!==t&&ml<=t&&(e.nextExpirationTimeToWorkOn=ml),e=e.nextScheduledRoot}while(e!==el)}Bl(0,!0)}finally{wl=!1}}function Bl(e,t){if(jl(),t)for(vl(),hl=ml;null!==il&&0!==al&&e<=al&&!(wl&&ml>al);)Sl(il,al,ml>al),jl(),vl(),hl=ml;else for(;null!==il&&0!==al&&e<=al;)Sl(il,al,!1),jl();if(t&&(nl=0,rl=null),0!==al&&Al(il,al),yl=0,gl=null,null!==fl)for(e=fl,fl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){sl||(sl=!0,ul=e)}}if(sl)throw e=ul,ul=null,sl=!1,e}function Tl(e,t){ol&&a("253"),il=e,al=t,Sl(e,t,!1),Bl(1073741823,!1)}function Sl(e,t,n){if(ol&&a("245"),ol=!0,n){var r=e.finishedWork;null!==r?Ol(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,Ar(r)),Qa(e,n),null!==(r=e.finishedWork)&&(Cl()?e.finishedWork=r:Ol(e,r,t)))}else null!==(r=e.finishedWork)?Ol(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,Ar(r)),Qa(e,n),null!==(r=e.finishedWork)&&Ol(e,r,t));ol=!1}function Ol(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===fl?fl=[r]:fl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gl?yl++:(gl=e,yl=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){Ya(e,t)})}function Pl(e){null===il&&a("246"),il.expirationTime=0,sl||(sl=!0,ul=e)}function Ml(e,t){var n=cl;cl=!0;try{return e(t)}finally{(cl=n)||ol||Bl(1073741823,!1)}}function Il(e,t){if(cl&&!dl){dl=!0;try{return e(t)}finally{dl=!1}}return e(t)}function Rl(e,t,n){cl||ol||0===ll||(Bl(ll,!1),ll=0);var r=cl;cl=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(cl=r)||ol||Bl(1073741823,!1)}}function Nl(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ir(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var s=n.type;if(Ir(s)){n=Fr(n,s,l);break e}}n=l}else n=Tr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ki(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Wa(),Zi(i,o),Za(i,r),r}function Ll(e,t,n,r){var o=t.current;return Nl(e,t,n,o=Ja(El(),o),r)}function Fl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ul(e){var t=1073741822-25*(1+((1073741822-El()+500)/25|0));t>=Ca&&(t=Ca-1),this._expirationTime=Ca=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function zl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Dl(e,t,n){e={current:t=qr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Hl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wl(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Fl(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Dl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Fl(i._internalRoot);l.call(e)}}Il(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Fl(i._internalRoot)}function Yl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Hl(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ge,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(Et(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=F(r);o||a("90"),We(r),Et(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Gn(e,!!n.multiple,t,!1)}},Ul.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new zl;return Nl(e,t,null,n,r._onCommit),r},Ul.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ul.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Tl(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Ul.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},zl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Dl.prototype.render=function(e,t){var n=this._internalRoot,r=new zl;return null!==(t=void 0===t?null:t)&&r.then(t),Ll(e,n,null,r._onCommit),r},Dl.prototype.unmount=function(e){var t=this._internalRoot,n=new zl;return null!==(e=void 0===e?null:e)&&n.then(e),Ll(null,t,null,n._onCommit),n},Dl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new zl;return null!==(n=void 0===n?null:n)&&o.then(n),Ll(t,r,e,o._onCommit),o},Dl.prototype.createBatch=function(){var e=new Ul(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Pe=Ml,Me=Rl,Ie=function(){ol||0===ll||(Bl(ll,!1),ll=0)};var ql={createPortal:Yl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Hl(t)||a("200"),Wl(null,e,t,!0,n)},render:function(e,t,n){return Hl(t)||a("200"),Wl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Hl(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),Wl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Hl(e)||a("40"),!!e._reactRootContainer&&(Il(function(){Wl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Yl.apply(void 0,arguments)},unstable_batchedUpdates:Ml,unstable_interactiveUpdates:Rl,flushSync:function(e,t){ol&&a("187");var n=cl;cl=!0;try{return $a(e,t)}finally{cl=n,Bl(1073741823,!1)}},unstable_createRoot:function(e,t){return Hl(e)||a("299","unstable_createRoot"),new Dl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=cl;cl=!0;try{$a(e)}finally{(cl=t)||ol||Bl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[N,L,F,T.injectEventPluginsByName,g,Y,function(e){C(e,W)},Se,Oe,Bn,O]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Dr=Wr(function(e){return t.onCommitFiberRoot(n,e)}),Hr=Wr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:Ye.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:R,bundleType:0,version:"16.8.3",rendererPackageName:"react-dom"});var Vl={default:ql},Ql=Vl&&ql||Vl;e.exports=Ql.default||Ql},"./node_modules/react-dom/index.js":function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n("./node_modules/react-dom/cjs/react-dom.production.min.js")},"./node_modules/react-media/esm/react-media.js":function(e,t,n){"use strict";function r(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.r(t);var i=n("./node_modules/react/index.js"),a=n.n(i),l=(n("./node_modules/prop-types/index.js"),n("./node_modules/invariant/browser.js")),s=n.n(l),u=n("./node_modules/json2mq/index.js"),c=n.n(u),d=function(){function e(e,t,n){var r=this;this.nativeMediaQueryList=e.matchMedia(t),this.active=!0,this.cancellableListener=function(){r.matches=r.nativeMediaQueryList.matches,r.active&&n.apply(void 0,arguments)},this.nativeMediaQueryList.addListener(this.cancellableListener),this.matches=this.nativeMediaQueryList.matches}return e.prototype.cancel=function(){this.active=!1,this.nativeMediaQueryList.removeListener(this.cancellableListener)},e}(),f=function(e){var t,n;function i(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return o(r(r(t=e.call.apply(e,[this].concat(i))||this)),"state",{matches:t.props.defaultMatches}),o(r(r(t)),"updateMatches",function(){var e=t.mediaQueryList.matches;t.setState({matches:e});var n=t.props.onChange;n&&n(e)}),t}n=e,(t=i).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var l=i.prototype;return l.componentWillMount=function(){if("object"==typeof window){var e=this.props.targetWindow||window;"function"!=typeof e.matchMedia&&s()(!1);var t=this.props.query;"string"!=typeof t&&(t=c()(t)),this.mediaQueryList=new d(e,t,this.updateMatches),this.updateMatches()}},l.componentWillUnmount=function(){this.mediaQueryList.cancel()},l.render=function(){var e=this.props,t=e.children,n=e.render,r=this.state.matches;return n?r?n():null:t?"function"==typeof t?t(r):(!Array.isArray(t)||t.length)&&r?a.a.Children.only(t):null:null},i}(a.a.Component);o(f,"defaultProps",{defaultMatches:!0});t.default=f},"./node_modules/react-router-dom/es/index.js":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/warning/warning.js"),o=n.n(r),i=n("./node_modules/react/index.js"),a=n.n(i),l=n("./node_modules/prop-types/index.js"),s=n.n(l),u=n("./node_modules/history/node_modules/warning/browser.js"),c=n.n(u),d=n("./node_modules/invariant/browser.js"),f=n.n(d);function p(e){return"/"===e.charAt(0)}function m(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var h=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&p(e),i=t&&p(t),a=o||i;if(e&&p(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var s=r[r.length-1];l="."===s||".."===s||""===s}else l=!1;for(var u=0,c=r.length;c>=0;c--){var d=r[c];"."===d?m(r,c):".."===d?(m(r,c),u++):u&&(m(r,c),u--)}if(!a)for(;u--;u)r.unshift("..");!a||""===r[0]||r[0]&&p(r[0])||r.unshift("");var f=r.join("/");return l&&"/"!==f.substr(-1)&&(f+="/"),f},b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var y=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":b(t);if(r!==(void 0===n?"undefined":b(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),l=Object.keys(n);return a.length===l.length&&a.every(function(r){return e(t[r],n[r])})}return!1},g=function(e){return"/"===e.charAt(0)?e:"/"+e},v=function(e){return"/"===e.charAt(0)?e.substr(1):e},A=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},_=function(e,t){return A(e,t)?e.substr(t.length):e},E=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},x=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=j({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=h(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},C=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&y(e.state,t.state)},k=function(){var e=null,t=[];return{setPrompt:function(t){return c()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(c()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},B=!("undefined"==typeof window||!window.document||!window.document.createElement),T=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},S=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},O=function(e,t){return t(window.confirm(e))},P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},I=function(){try{return window.history.state||{}}catch(e){return{}}},R=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};f()(B,"Browser history needs a DOM");var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e.forceRefresh,a=void 0!==i&&i,l=e.getUserConfirmation,s=void 0===l?O:l,u=e.keyLength,d=void 0===u?6:u,p=e.basename?E(g(e.basename)):"",m=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return c()(!p||A(i,p),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+p+'".'),p&&(i=_(i,p)),w(i,r,n)},h=function(){return Math.random().toString(36).substr(2,d)},b=k(),y=function(e){M(Y,e),Y.length=n.length,b.notifyListeners(Y.location,Y.action)},v=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(m(e.state))},j=function(){R(m(I()))},C=!1,R=function(e){C?(C=!1,y()):b.confirmTransitionTo(e,"POP",s,function(t){t?y({action:"POP",location:e}):N(e)})},N=function(e){var t=Y.location,n=F.indexOf(t.key);-1===n&&(n=0);var r=F.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(C=!0,z(o))},L=m(I()),F=[L.key],U=function(e){return p+x(e)},z=function(e){n.go(e)},D=0,H=function(e){1===(D+=e)?(T(window,"popstate",v),o&&T(window,"hashchange",j)):0===D&&(S(window,"popstate",v),o&&S(window,"hashchange",j))},W=!1,Y={length:n.length,action:"POP",location:L,createHref:U,push:function(e,t){c()(!("object"===(void 0===e?"undefined":P(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=w(e,t,h(),Y.location);b.confirmTransitionTo(o,"PUSH",s,function(e){if(e){var t=U(o),i=o.key,l=o.state;if(r)if(n.pushState({key:i,state:l},null,t),a)window.location.href=t;else{var s=F.indexOf(Y.location.key),u=F.slice(0,-1===s?0:s+1);u.push(o.key),F=u,y({action:"PUSH",location:o})}else c()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=t}})},replace:function(e,t){c()(!("object"===(void 0===e?"undefined":P(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=w(e,t,h(),Y.location);b.confirmTransitionTo(o,"REPLACE",s,function(e){if(e){var t=U(o),i=o.key,l=o.state;if(r)if(n.replaceState({key:i,state:l},null,t),a)window.location.replace(t);else{var s=F.indexOf(Y.location.key);-1!==s&&(F[s]=o.key),y({action:"REPLACE",location:o})}else c()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(t)}})},go:z,goBack:function(){return z(-1)},goForward:function(){return z(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=b.setPrompt(e);return W||(H(1),W=!0),function(){return W&&(W=!1,H(-1)),t()}},listen:function(e){var t=b.appendListener(e);return H(1),function(){H(-1),t()}}};return Y},N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},L={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:g},slash:{encodePath:g,decodePath:g}},F=function(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},U=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)},z=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};f()(B,"Hash history needs a DOM");var t=window.history,n=-1===window.navigator.userAgent.indexOf("Firefox"),r=e.getUserConfirmation,o=void 0===r?O:r,i=e.hashType,a=void 0===i?"slash":i,l=e.basename?E(g(e.basename)):"",s=L[a],u=s.encodePath,d=s.decodePath,p=function(){var e=d(F());return c()(!l||A(e,l),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+l+'".'),l&&(e=_(e,l)),w(e)},m=k(),h=function(e){N(q,e),q.length=t.length,m.notifyListeners(q.location,q.action)},b=!1,y=null,v=function(){var e=F(),t=u(e);if(e!==t)U(t);else{var n=p(),r=q.location;if(!b&&C(r,n))return;if(y===x(n))return;y=null,j(n)}},j=function(e){b?(b=!1,h()):m.confirmTransitionTo(e,"POP",o,function(t){t?h({action:"POP",location:e}):P(e)})},P=function(e){var t=q.location,n=z.lastIndexOf(x(t));-1===n&&(n=0);var r=z.lastIndexOf(x(e));-1===r&&(r=0);var o=n-r;o&&(b=!0,D(o))},M=F(),I=u(M);M!==I&&U(I);var R=p(),z=[x(R)],D=function(e){c()(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},H=0,W=function(e){1===(H+=e)?T(window,"hashchange",v):0===H&&S(window,"hashchange",v)},Y=!1,q={length:t.length,action:"POP",location:R,createHref:function(e){return"#"+u(l+x(e))},push:function(e,t){c()(void 0===t,"Hash history cannot push state; it is ignored");var n=w(e,void 0,void 0,q.location);m.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=x(n),r=u(l+t);if(F()!==r){y=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(x(q.location)),i=z.slice(0,-1===o?0:o+1);i.push(t),z=i,h({action:"PUSH",location:n})}else c()(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),h()}})},replace:function(e,t){c()(void 0===t,"Hash history cannot replace state; it is ignored");var n=w(e,void 0,void 0,q.location);m.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=x(n),r=u(l+t);F()!==r&&(y=t,U(r));var o=z.indexOf(x(q.location));-1!==o&&(z[o]=t),h({action:"REPLACE",location:n})}})},go:D,goBack:function(){return D(-1)},goForward:function(){return D(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=m.setPrompt(e);return Y||(W(1),Y=!0),function(){return Y&&(Y=!1,W(-1)),t()}},listen:function(e){var t=m.appendListener(e);return W(1),function(){W(-1),t()}}};return q},D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},W=function(e,t,n){return Math.min(Math.max(e,t),n)},Y=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getUserConfirmation,n=e.initialEntries,r=void 0===n?["/"]:n,o=e.initialIndex,i=void 0===o?0:o,a=e.keyLength,l=void 0===a?6:a,s=k(),u=function(e){H(b,e),b.length=b.entries.length,s.notifyListeners(b.location,b.action)},d=function(){return Math.random().toString(36).substr(2,l)},f=W(i,0,r.length-1),p=r.map(function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())}),m=x,h=function(e){var n=W(b.index+e,0,b.entries.length-1),r=b.entries[n];s.confirmTransitionTo(r,"POP",t,function(e){e?u({action:"POP",location:r,index:n}):u()})},b={length:p.length,action:"POP",location:p[f],index:f,entries:p,createHref:m,push:function(e,n){c()(!("object"===(void 0===e?"undefined":D(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var r=w(e,n,d(),b.location);s.confirmTransitionTo(r,"PUSH",t,function(e){if(e){var t=b.index+1,n=b.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),u({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,n){c()(!("object"===(void 0===e?"undefined":D(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var r=w(e,n,d(),b.location);s.confirmTransitionTo(r,"REPLACE",t,function(e){e&&(b.entries[b.index]=r,u({action:"REPLACE",location:r}))})},go:h,goBack:function(){return h(-1)},goForward:function(){return h(1)},canGo:function(e){var t=b.index+e;return t>=0&&t<b.entries.length},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return b},q=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function V(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Q=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=V(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},V(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:q({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;f()(null==n||1===a.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){o()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?a.a.Children.only(e):null},t}(a.a.Component);Q.propTypes={history:s.a.object.isRequired,children:s.a.node},Q.contextTypes={router:s.a.object},Q.childContextTypes={router:s.a.object.isRequired};var G=Q,J=G;function K(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var X=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=K(this,e.call.apply(e,[this].concat(i))),r.history=R(r.props),K(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(J,{history:this.history,children:this.props.children})},t}(a.a.Component);X.propTypes={basename:s.a.string,forceRefresh:s.a.bool,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var Z=X;function $(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ee=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=$(this,e.call.apply(e,[this].concat(i))),r.history=z(r.props),$(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<HashRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { HashRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(J,{history:this.history,children:this.props.children})},t}(a.a.Component);ee.propTypes={basename:s.a.string,getUserConfirmation:s.a.func,hashType:s.a.oneOf(["hashbang","noslash","slash"]),children:s.a.node};var te=ee,ne=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function re(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var oe=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},ie=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=re(this,e.call.apply(e,[this].concat(i))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!oe(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,i=n.to;o?t.replace(i):t.push(i)}},re(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);f()(this.context.router,"You should not use <Link> outside a <Router>"),f()(void 0!==t,'You must specify the "to" property');var o=this.context.router.history,i="string"==typeof t?w(t,null,null,o.location):t,l=o.createHref(i);return a.a.createElement("a",ne({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(a.a.Component);ie.propTypes={onClick:s.a.func,target:s.a.string,replace:s.a.bool,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired,innerRef:s.a.oneOfType([s.a.string,s.a.func])},ie.defaultProps={replace:!1},ie.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired,createHref:s.a.func.isRequired}).isRequired}).isRequired};var ae=ie;function le(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var se=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=le(this,e.call.apply(e,[this].concat(i))),r.history=Y(r.props),le(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<MemoryRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { MemoryRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(G,{history:this.history,children:this.props.children})},t}(a.a.Component);se.propTypes={initialEntries:s.a.array,initialIndex:s.a.number,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var ue=se,ce=n("./node_modules/path-to-regexp/index.js"),de=n.n(ce),fe={},pe=0,me=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,s=void 0!==l&&l,u=r.sensitive;if(null==o)return n;var c=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=fe[n]||(fe[n]={});if(r[e])return r[e];var o=[],i={re:de()(e,o,t),keys:o};return pe<1e4&&(r[e]=i,pe++),i}(o,{end:a,strict:s,sensitive:void 0!==u&&u}),d=c.re,f=c.keys,p=d.exec(e);if(!p)return null;var m=p[0],h=p.slice(1),b=e===m;return a&&!b?null:{path:o,url:"/"===o&&""===m?"/":m,isExact:b,params:f.reduce(function(e,t,n){return e[t.name]=h[n],e},{})}},he=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function be(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ye=function(e){return 0===a.a.Children.count(e)},ge=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=be(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},be(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:he({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;f()(t,"You should not use <Route> or withRouter() outside a <Router>");var s=t.route,u=(r||s.location).pathname;return me(u,{path:o,strict:i,exact:a,sensitive:l},s.match)},t.prototype.componentWillMount=function(){o()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),o()(!(this.props.component&&this.props.children&&!ye(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),o()(!(this.props.render&&this.props.children&&!ye(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){o()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,o=t.render,i=this.context.router,l=i.history,s=i.route,u=i.staticContext,c={match:e,location:this.props.location||s.location,history:l,staticContext:u};return r?e?a.a.createElement(r,c):null:o?e?o(c):null:"function"==typeof n?n(c):n&&!ye(n)?a.a.Children.only(n):null},t}(a.a.Component);ge.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},ge.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},ge.childContextTypes={router:s.a.object.isRequired};var ve=ge,Ae=ve,_e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var xe=function(e){var t=e.to,n=e.exact,r=e.strict,o=e.location,i=e.activeClassName,l=e.className,s=e.activeStyle,u=e.style,c=e.isActive,d=e["aria-current"],f=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","aria-current"]),p="object"===(void 0===t?"undefined":Ee(t))?t.pathname:t,m=p&&p.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1");return a.a.createElement(Ae,{path:m,exact:n,strict:r,location:o,children:function(e){var n=e.location,r=e.match,o=!!(c?c(r,n):r);return a.a.createElement(ae,_e({to:t,className:o?[l,i].filter(function(e){return e}).join(" "):l,style:o?_e({},u,s):u,"aria-current":o&&d||null},f))}})};xe.propTypes={to:ae.propTypes.to,exact:s.a.bool,strict:s.a.bool,location:s.a.object,activeClassName:s.a.string,className:s.a.string,activeStyle:s.a.object,style:s.a.object,isActive:s.a.func,"aria-current":s.a.oneOf(["page","step","location","date","time","true"])},xe.defaultProps={activeClassName:"active","aria-current":"page"};var je=xe;var we=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.enable=function(e){this.unblock&&this.unblock(),this.unblock=this.context.router.history.block(e)},t.prototype.disable=function(){this.unblock&&(this.unblock(),this.unblock=null)},t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Prompt> outside a <Router>"),this.props.when&&this.enable(this.props.message)},t.prototype.componentWillReceiveProps=function(e){e.when?this.props.when&&this.props.message===e.message||this.enable(e.message):this.disable()},t.prototype.componentWillUnmount=function(){this.disable()},t.prototype.render=function(){return null},t}(a.a.Component);we.propTypes={when:s.a.bool,message:s.a.oneOfType([s.a.func,s.a.string]).isRequired},we.defaultProps={when:!0},we.contextTypes={router:s.a.shape({history:s.a.shape({block:s.a.func.isRequired}).isRequired}).isRequired};var Ce=we,ke={},Be=0,Te=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"/"===e?e:function(e){var t=e,n=ke[t]||(ke[t]={});if(n[e])return n[e];var r=de.a.compile(e);return Be<1e4&&(n[e]=r,Be++),r}(e)(t,{pretty:!0})},Se=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Oe=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=w(e.to),n=w(this.props.to);C(t,n)?o()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.computeTo=function(e){var t=e.computedMatch,n=e.to;return t?"string"==typeof n?Te(n,t.params):Se({},n,{pathname:Te(n.pathname,t.params)}):n},t.prototype.perform=function(){var e=this.context.router.history,t=this.props.push,n=this.computeTo(this.props);t?e.push(n):e.replace(n)},t.prototype.render=function(){return null},t}(a.a.Component);Oe.propTypes={computedMatch:s.a.object,push:s.a.bool,from:s.a.string,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired},Oe.defaultProps={push:!1},Oe.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired}).isRequired,staticContext:s.a.object}).isRequired};var Pe=Oe,Me=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function Ie(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Re=function(e){return"/"===e.charAt(0)?e:"/"+e},Ne=function(e,t){return e?Me({},t,{pathname:Re(e)+t.pathname}):t},Le=function(e,t){if(!e)return t;var n=Re(e);return 0!==t.pathname.indexOf(n)?t:Me({},t,{pathname:t.pathname.substr(n.length)})},Fe=function(e){return"string"==typeof e?e:x(e)},Ue=function(e){return function(){f()(!1,"You cannot %s with <StaticRouter>",e)}},ze=function(){},De=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=Ie(this,e.call.apply(e,[this].concat(i))),r.createHref=function(e){return Re(r.props.basename+Fe(e))},r.handlePush=function(e){var t=r.props,n=t.basename,o=t.context;o.action="PUSH",o.location=Ne(n,w(e)),o.url=Fe(o.location)},r.handleReplace=function(e){var t=r.props,n=t.basename,o=t.context;o.action="REPLACE",o.location=Ne(n,w(e)),o.url=Fe(o.location)},r.handleListen=function(){return ze},r.handleBlock=function(){return ze},Ie(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:{staticContext:this.props.context}}},t.prototype.componentWillMount=function(){o()(!this.props.history,"<StaticRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { StaticRouter as Router }`.")},t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["basename","context","location"]),o={createHref:this.createHref,action:"POP",location:Le(t,w(n)),push:this.handlePush,replace:this.handleReplace,go:Ue("go"),goBack:Ue("goBack"),goForward:Ue("goForward"),listen:this.handleListen,block:this.handleBlock};return a.a.createElement(G,Me({},r,{history:o}))},t}(a.a.Component);De.propTypes={basename:s.a.string,context:s.a.object.isRequired,location:s.a.oneOfType([s.a.string,s.a.object])},De.defaultProps={basename:"",location:"/"},De.childContextTypes={router:s.a.object.isRequired};var He=De;var We=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){o()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,o=void 0;return a.a.Children.forEach(t,function(t){if(null==r&&a.a.isValidElement(t)){var i=t.props,l=i.path,s=i.exact,u=i.strict,c=i.sensitive,d=i.from,f=l||d;o=t,r=me(n.pathname,{path:f,exact:s,strict:u,sensitive:c},e.match)}}),r?a.a.cloneElement(o,{location:n,computedMatch:r}):null},t}(a.a.Component);We.contextTypes={router:s.a.shape({route:s.a.object.isRequired}).isRequired},We.propTypes={children:s.a.node,location:s.a.object};var Ye=We,qe=Te,Ve=me,Qe=n("./node_modules/react-router/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"),Ge=n.n(Qe),Je=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Ke=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return a.a.createElement(ve,{children:function(t){return a.a.createElement(e,Je({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:s.a.func},Ge()(t,e)};n.d(t,"BrowserRouter",function(){return Z}),n.d(t,"HashRouter",function(){return te}),n.d(t,"Link",function(){return ae}),n.d(t,"MemoryRouter",function(){return ue}),n.d(t,"NavLink",function(){return je}),n.d(t,"Prompt",function(){return Ce}),n.d(t,"Redirect",function(){return Pe}),n.d(t,"Route",function(){return Ae}),n.d(t,"Router",function(){return J}),n.d(t,"StaticRouter",function(){return He}),n.d(t,"Switch",function(){return Ye}),n.d(t,"generatePath",function(){return qe}),n.d(t,"matchPath",function(){return Ve}),n.d(t,"withRouter",function(){return Ke})},"./node_modules/react-router/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i=Object.defineProperty,a=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,s=Object.getOwnPropertyDescriptor,u=Object.getPrototypeOf,c=u&&u(Object);e.exports=function e(t,n,d){if("string"!=typeof n){if(c){var f=u(n);f&&f!==c&&e(t,f,d)}var p=a(n);l&&(p=p.concat(l(n)));for(var m=0;m<p.length;++m){var h=p[m];if(!(r[h]||o[h]||d&&d[h])){var b=s(n,h);try{i(t,h,b)}catch(e){}}}return t}return t}},"./node_modules/react/cjs/react.production.min.js":function(e,t,n){"use strict";
/** @license React v16.8.3
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/object-assign/index.js"),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,s=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,b=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,a,l],u=0;(e=Error(t.replace(/%s/g,function(){return s[u++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},A={};function _(e,t,n){this.props=e,this.context=t,this.refs=A,this.updater=n||v}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=A,this.updater=n||v}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=_.prototype;var j=x.prototype=new E;j.constructor=x,r(j,_.prototype),j.isPureReactComponent=!0;var w={current:null},C={current:null},k=Object.prototype.hasOwnProperty,B={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!B.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:C.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,P=[];function M(e,t,n,r){if(P.length){var o=P.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function R(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case i:case a:s=!0}}if(s)return r(o,t,""===n?"."+N(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var c=n+N(l=t[u],u);s+=e(l,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=y&&t[y]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),u=0;!(l=t.next()).done;)s+=e(l=l.value,c=n+N(l,u++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return s}(e,"",t,n)}function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return e}):null!=e&&(S(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function U(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),R(e,F,t=M(t,i,r,o)),I(t)}function z(){var e=w.current;return null===e&&g("307"),e}var D={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return U(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,L,t=M(null,null,t,n)),I(t)},count:function(e){return R(e,function(){return null},null)},toArray:function(e){var t=[];return U(e,t,null,function(e){return e}),t},only:function(e){return S(e)||g("143"),e}},createRef:function(){return{current:null}},Component:_,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:b,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return z().useCallback(e,t)},useContext:function(e,t){return z().useContext(e,t)},useEffect:function(e,t){return z().useEffect(e,t)},useImperativeHandle:function(e,t,n){return z().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return z().useLayoutEffect(e,t)},useMemo:function(e,t){return z().useMemo(e,t)},useReducer:function(e,t,n){return z().useReducer(e,t,n)},useRef:function(e){return z().useRef(e)},useState:function(e){return z().useState(e)},Fragment:l,StrictMode:s,Suspense:m,createElement:T,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,s=e.ref,u=e._owner;if(null!=t){void 0!==t.ref&&(s=t.ref,u=C.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)k.call(t,o)&&!B.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){c=Array(o);for(var d=0;d<o;d++)c[d]=arguments[d+2];a.children=c}return{$$typeof:i,type:e.type,key:l,ref:s,props:a,_owner:u}},createFactory:function(e){var t=T.bind(null,e);return t.type=e,t},isValidElement:S,version:"16.8.3",unstable_ConcurrentMode:f,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:w,ReactCurrentOwner:C,assign:r}},H={default:D},W=H&&D||H;e.exports=W.default||W},"./node_modules/react/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/react/cjs/react.production.min.js")},"./node_modules/regenerator-runtime/runtime-module.js":function(e,t,n){var r=function(){return this}()||Function("return this")(),o=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,i=o&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=n("./node_modules/regenerator-runtime/runtime.js"),o)r.regeneratorRuntime=i;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},"./node_modules/regenerator-runtime/runtime.js":function(e,t){!function(t){"use strict";var n,r=Object.prototype,o=r.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag",u="object"==typeof e,c=t.regeneratorRuntime;if(c)u&&(e.exports=c);else{(c=t.regeneratorRuntime=u?e.exports:{}).wrap=A;var d="suspendedStart",f="suspendedYield",p="executing",m="completed",h={},b={};b[a]=function(){return this};var y=Object.getPrototypeOf,g=y&&y(y(O([])));g&&g!==r&&o.call(g,a)&&(b=g);var v=j.prototype=E.prototype=Object.create(b);x.prototype=v.constructor=j,j.constructor=x,j[s]=x.displayName="GeneratorFunction",c.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===x||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,j):(e.__proto__=j,s in e||(e[s]="GeneratorFunction")),e.prototype=Object.create(v),e},c.awrap=function(e){return{__await:e}},w(C.prototype),C.prototype[l]=function(){return this},c.AsyncIterator=C,c.async=function(e,t,n,r){var o=new C(A(e,t,n,r));return c.isGeneratorFunction(t)?o:o.next().then(function(e){return e.done?e.value:o.next()})},w(v),v[s]="Generator",v[a]=function(){return this},v.toString=function(){return"[object Generator]"},c.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},c.values=O,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,o){return l.type="throw",l.arg=e,t.next=r,o&&(t.method="next",t.arg=n),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],l=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=o.call(a,"catchLoc"),u=o.call(a,"finallyLoc");if(s&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;T(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:O(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=n),h}}}function A(e,t,n,r){var o=t&&t.prototype instanceof E?t:E,i=Object.create(o.prototype),a=new S(r||[]);return i._invoke=function(e,t,n){var r=d;return function(o,i){if(r===p)throw new Error("Generator is already running");if(r===m){if("throw"===o)throw i;return P()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=k(a,n);if(l){if(l===h)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var s=_(e,t,n);if("normal"===s.type){if(r=n.done?m:f,s.arg===h)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r=m,n.method="throw",n.arg=s.arg)}}}(e,n,a),i}function _(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function E(){}function x(){}function j(){}function w(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function C(e){var t;this._invoke=function(n,r){function i(){return new Promise(function(t,i){!function t(n,r,i,a){var l=_(e[n],e,r);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==typeof u&&o.call(u,"__await")?Promise.resolve(u.__await).then(function(e){t("next",e,i,a)},function(e){t("throw",e,i,a)}):Promise.resolve(u).then(function(e){s.value=e,i(s)},a)}a(l.arg)}(n,r,t,i)})}return t=t?t.then(i,i):i()}}function k(e,t){var r=e.iterator[t.method];if(r===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,k(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var o=_(r,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,h;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,h):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function B(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(B,this),this.reset(!0)}function O(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(o.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=n,t.done=!0,t};return i.next=i}}return{next:P}}function P(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},"./node_modules/scheduler/cjs/scheduler.production.min.js":function(e,t,n){"use strict";(function(e){
/** @license React v0.13.3
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,s=!1;function u(){if(!l){var e=n.expirationTime;s?x():s=!0,E(f,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var s=r()}finally{o=i,a=l}if("function"==typeof s)if(s={callback:s,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=s.next=s.previous=s;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=s,u()),(t=r.previous).next=r.previous=s,s.next=r,s.previous=t}}function d(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?u():s=!1}}}function f(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{c()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{c()}while(null!==n&&!j())}finally{l=!1,r=o,null!==n?u():s=!1,d()}}var p,m,h=Date,b="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,v="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function A(e){p=g(function(t){y(m),e(t)}),m=b(function(){v(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return h.now()};var E,x,j,w=null;if("undefined"!=typeof window?w=window:void 0!==e&&(w=e),w&&w._schedMock){var C=w._schedMock;E=C[0],x=C[1],j=C[2],t.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var k=null,B=function(e){if(null!==k)try{k(e)}finally{k=null}};E=function(e){null!==k?setTimeout(E,0,e):(k=e,setTimeout(B,0,!1))},x=function(){k=null},j=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var T=null,S=!1,O=-1,P=!1,M=!1,I=0,R=33,N=33;j=function(){return I<=t.unstable_now()};var L=new MessageChannel,F=L.port2;L.port1.onmessage=function(){S=!1;var e=T,n=O;T=null,O=-1;var r=t.unstable_now(),o=!1;if(0>=I-r){if(!(-1!==n&&n<=r))return P||(P=!0,A(U)),T=e,void(O=n);o=!0}if(null!==e){M=!0;try{e(o)}finally{M=!1}}};var U=function(e){if(null!==T){A(U);var t=e-I+N;t<N&&R<N?(8>t&&(t=8),N=t<R?R:t):R=t,I=e+N,S||(S=!0,F.postMessage(void 0))}else P=!1};E=function(e,t){T=e,O=t,M||0>t?F.postMessage(void 0):P||(P=!0,A(U))},x=function(){T=null,S=!1,O=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,d()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,d()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,u();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=e,u()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,d()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||j())},t.unstable_continueExecution=function(){null!==n&&u()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n("./node_modules/webpack/buildin/global.js"))},"./node_modules/scheduler/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/scheduler/cjs/scheduler.production.min.js")},"./node_modules/string-convert/camel2hyphen.js":function(e,t){e.exports=function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()}).toLowerCase()}},"./node_modules/style-loader/lib/addStyles.js":function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),s=null,u=0,c=[],d=n("./node_modules/style-loader/lib/urls.js");function f(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(g(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function b(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var a=u++;n=s||(s=b(t)),r=_.bind(null,n,a,!1),o=_.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=d(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=b(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return f(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}e&&f(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete i[l.id]}}}};var v,A=(v=[],function(e,t){return v[e]=t,v.filter(Boolean).join("\n")});function _(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=A(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},"./node_modules/style-loader/lib/urls.js":function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},"./node_modules/warning/warning.js":function(e,t,n){"use strict";var r=function(){};e.exports=r},"./node_modules/webpack/buildin/global.js":function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},"./src/App.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=A(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=A(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=A(n("./node_modules/babel-runtime/helpers/createClass.js")),a=A(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=A(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=A(s),c=n("./node_modules/react-router-dom/es/index.js"),d=n("./src/views/home/Home.js"),f=n("./src/components/navigation/Navigation.js"),p=A(n("./index.scss")),m=n("./src/views/campaigns/walmart/Walmart.js"),h=n("./src/views/campaigns/tribe/Tribe.js"),b=n("./src/views/about/About.js"),y=n("./src/views/campaigns/caribou/Caribou.js"),g=n("./src/views/campaigns/shoptology/Shoptology.js"),v=A(n("./src/components/footer/Footer.js"));function A(e){return e&&e.__esModule?e:{default:e}}var _=function(e){var t=e.location;return u.default.createElement("div",null,u.default.createElement("h3",null,"No match for ",u.default.createElement("code",null,t.pathname)))},E=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement(c.BrowserRouter,null,u.default.createElement("div",{className:p.default.naked},u.default.createElement("div",{className:p.default.siteWrapper},u.default.createElement(f.Navigation,null),u.default.createElement(c.Switch,null,u.default.createElement(c.Route,{exact:!0,path:"/",component:d.Home}),u.default.createElement(c.Route,{path:"/walmart",component:m.WalmartContent}),u.default.createElement(c.Route,{path:"/tribe",component:h.TribeContent}),u.default.createElement(c.Route,{path:"/caribou",component:y.CaribouContent}),u.default.createElement(c.Route,{path:"/shoptology",component:g.ShoptologyContent}),u.default.createElement(c.Route,{path:"/about",component:b.About}),u.default.createElement(c.Route,{component:_}))),u.default.createElement(v.default,null)))}}]),t}(s.Component);t.default=E},"./src/assets/astronomy.jpg":function(e,t,n){e.exports=n.p+"f2d3e553802a5e400ad6afb8377e5be0.jpg"},"./src/assets/caribou/1cb.png":function(e,t,n){e.exports=n.p+"a2d4cf67de38657cea5e50240bade913.png"},"./src/assets/caribou/2cb.png":function(e,t,n){e.exports=n.p+"9cfbad12d224d6523d88abe40af1e5c8.png"},"./src/assets/caribou/3cb.png":function(e,t,n){e.exports=n.p+"a7cec87cd787a5edffe4e4ef9146614d.png"},"./src/assets/caribou/4cb.png":function(e,t,n){e.exports=n.p+"b26f8b4ccdc65ca181abaf33d4fe8d5a.png"},"./src/assets/caribou/5cb.png":function(e,t,n){e.exports=n.p+"1dbfe0f02f26c0a9b7a7c26104283899.png"},"./src/assets/caribou/6cb.png":function(e,t,n){e.exports=n.p+"5baf242f7ebbb74c02d7280d3011556a.png"},"./src/assets/caribou/7cb.png":function(e,t,n){e.exports=n.p+"76572c667760b937a26e3daf5fe0820c.png"},"./src/assets/shoptology/1shp.png":function(e,t,n){e.exports=n.p+"7456c4878f5b8576e3f120989ebc7352.png"},"./src/assets/shoptology/2shp.png":function(e,t,n){e.exports=n.p+"942d1b941fdff6b6d41fcc6ed40efeb4.png"},"./src/assets/shoptology/3shp.png":function(e,t,n){e.exports=n.p+"5212ce80faa3f89059c0dda0411c0521.png"},"./src/assets/shoptology/4shp.png":function(e,t,n){e.exports=n.p+"7c00eb99d538e89f45f20626a4cbfeb3.png"},"./src/assets/shoptology/5shp.png":function(e,t,n){e.exports=n.p+"e2189ac4c71180e04431841eee3fea31.png"},"./src/assets/tb-caribou.png":function(e,t,n){e.exports=n.p+"5403af2306db765f26fb46e70ebda168.png"},"./src/assets/tb-hummus.png":function(e,t,n){e.exports=n.p+"fec11dda14f22f01024992f1781c5497.png"},"./src/assets/tb-shp.png":function(e,t,n){e.exports=n.p+"417dccf3761471806f6334593899a4f3.png"},"./src/assets/tb-wm.png":function(e,t,n){e.exports=n.p+"b4aa02a616f3b05445d14fc7a1edb447.png"},"./src/assets/tribe/1th.png":function(e,t,n){e.exports=n.p+"64cadcc420fd68492e4adee8e0e7d6b4.png"},"./src/assets/tribe/2th.png":function(e,t,n){e.exports=n.p+"2e104b03f9265b3c661ddea974acc5b6.png"},"./src/assets/tribe/3th.png":function(e,t,n){e.exports=n.p+"9adcb59696e1c69a7b5d58b5b2b4a54f.png"},"./src/assets/tribe/4th.png":function(e,t,n){e.exports=n.p+"1cfa18dd8b403b04fdf888ad0c434f22.png"},"./src/assets/tribe/5th.png":function(e,t,n){e.exports=n.p+"2459c478d95f05f59a1c66dc4c531cec.png"},"./src/assets/tribe/6th.png":function(e,t,n){e.exports=n.p+"ead4e83f2cdebd6c202df13d32fc1399.png"},"./src/assets/walmart/1wmm.png":function(e,t,n){e.exports=n.p+"30612d4f3fa548ec194d208020c402ad.png"},"./src/assets/walmart/2wmm.png":function(e,t,n){e.exports=n.p+"4902f6afb56012371215eafe7645c24b.png"},"./src/assets/walmart/3wmm.png":function(e,t,n){e.exports=n.p+"2d90dc3d9733f27495cc70ad20228461.png"},"./src/assets/walmart/4wmm.png":function(e,t,n){e.exports=n.p+"ede6a175d867c20d75f81f11d9e6d93a.png"},"./src/components/block/Block.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ShopBlock=t.TribeBlock=t.CaribouBlock=t.WalmartBlock=t.DisplayBlock=void 0;var r=f(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=f(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=f(n("./node_modules/babel-runtime/helpers/createClass.js")),a=f(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=f(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=f(s),c=f(n("./src/components/block/block.scss")),d=n("./node_modules/react-router-dom/es/index.js");function f(e){return e&&e.__esModule?e:{default:e}}var p=t.DisplayBlock=function(e){function t(e){(0,o.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={isHovering:!1},n.onMouseEnter=n.onMouseEnter.bind(n),n.onMouseLeave=n.onMouseLeave.bind(n),n.handleClick=n.handleClick.bind(n),n}return(0,l.default)(t,e),(0,i.default)(t,[{key:"onMouseEnter",value:function(){this.setState({isHovering:!0})}},{key:"onMouseLeave",value:function(){this.setState({isHovering:!1})}},{key:"handleClick",value:function(){document.getElementById("siteTop").scrollIntoView()}},{key:"render",value:function(){return u.default.createElement("div",{className:this.props.className,onClick:this.handleClick,campid:this.props.campid,desc:this.props.desc,desc1:this.props.desc1,desc2:this.props.desc2,onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave},this.state.isHovering?u.default.createElement("div",{className:c.default.hoverBlock},u.default.createElement("h1",null,this.props.desc),u.default.createElement("h1",null,this.props.desc1),u.default.createElement("h2",null,this.props.desc2)):"")}}]),t}(s.Component);t.WalmartBlock=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement(d.Link,{to:"/walmart"},u.default.createElement(p,{className:c.default.wmblock,campid:"walmart",desc:"USER EXPERIENCE",desc1:"USER INTERFACE",desc2:"view more"})))}}]),t}(s.Component),t.CaribouBlock=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement(d.Link,{to:"/caribou"},u.default.createElement(p,{className:c.default.cariblock,campid:"caribou",desc:"SHOPPER MARKETING",desc1:"OMNI-CHANNEL",desc2:"view more"}))}}]),t}(s.Component),t.TribeBlock=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement(d.Link,{to:"/tribe"},u.default.createElement(p,{className:c.default.tribeblock,campid:"tribe",desc:"PHOTOGRAPHY",desc1:"SHOPPER MARKETING",desc2:"view more"}))}}]),t}(s.Component),t.ShopBlock=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement(d.Link,{to:"/shoptology"},u.default.createElement(p,{className:c.default.shpblock,campid:"shoptology",desc:"ILLUSTRATIONS",desc1:"GRAPHIC DESIGN",desc2:"view more"}))}}]),t}(s.Component)},"./src/components/block/block.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/block/block.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/components/footer/Footer.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=d(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=d(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=d(n("./node_modules/babel-runtime/helpers/createClass.js")),a=d(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=d(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=d(s),c=d(n("./src/components/footer/footer.scss"));function d(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("footer",{className:c.default.footer},u.default.createElement("h2",null,"© COPYRIGHT 2019"),u.default.createElement("h2",{className:c.default.social},u.default.createElement("a",{href:"mailto:amypedid@outlook.com?subject=Website Mail"},u.default.createElement("i",{className:"far fa-envelope"}))),u.default.createElement("h2",{className:c.default.social},u.default.createElement("a",{className:c.default.socialLink,href:"https://twitter.com/Amy_AHHA_Moment",target:"_blank"},u.default.createElement("i",{className:"fab fa-twitter"}))),u.default.createElement("h2",null,"Made by:",u.default.createElement("a",{href:"mailto:ronaldpedid@live.com?subject=web_development"}," The Sage Mages")))}}]),t}(s.Component);t.default=f},"./src/components/footer/footer.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/footer/footer.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/components/navigation/Breadcrumbs.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Crumbles=t.Crumble=t.Breadcrumbs=void 0;var r=d(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=d(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=d(n("./node_modules/babel-runtime/helpers/createClass.js")),a=d(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=d(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=d(s),c=(d(n("./node_modules/react-media/esm/react-media.js")),d(n("./src/components/navigation/breadcrumbs.scss")));function d(e){return e&&e.__esModule?e:{default:e}}t.Breadcrumbs=function(e){function t(e){(0,o.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.handleClick=n.handleClick.bind(n),n}return(0,l.default)(t,e),(0,i.default)(t,[{key:"handleClick",value:function(){document.getElementById("siteTop").scrollIntoView()}},{key:"render",value:function(){return u.default.createElement("div",{className:c.default.breadcrumbs,onClick:this.handleClick},this.props.children)}}]),t}(s.Component),t.Crumble=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.crumble},this.props.children)}}]),t}(s.Component),t.Crumbles=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.crumbles},this.props.children)}}]),t}(s.Component)},"./src/components/navigation/Navigation.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Navigation=void 0;var r=p(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=p(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=p(n("./node_modules/babel-runtime/helpers/createClass.js")),a=p(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=p(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=p(s),c=p(n("./node_modules/react-media/esm/react-media.js")),d=p(n("./src/components/navigation/navigation.scss")),f=n("./node_modules/react-router-dom/es/index.js");function p(e){return e&&e.__esModule?e:{default:e}}var m=["/","/about","/resume"],h=(t.Navigation=function(e){function t(e){(0,o.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={navMenuOpen:!1},n.openMenu=n.openMenu.bind(n),n.closeMenu=n.closeMenu.bind(n),n.handleClick=n.handleClick.bind(n),n}return(0,l.default)(t,e),(0,i.default)(t,[{key:"openMenu",value:function(){this.setState({navMenuOpen:!0})}},{key:"closeMenu",value:function(){this.setState({navMenuOpen:!1})}},{key:"handleClick",value:function(){document.getElementById("siteTop").scrollIntoView(),this.setState({navMenuOpen:!1})}},{key:"render",value:function(){var e=this;return u.default.createElement("nav",{className:d.default.navigationContainer},u.default.createElement("h1",{className:d.default.navCopy},u.default.createElement(f.Link,{to:m[0]},"Amy Pedid")),u.default.createElement(c.default,{query:{maxWidth:599}},function(t){return t?u.default.createElement("div",null,e.state.navMenuOpen?u.default.createElement(b,{onClick:e.closeMenu}):u.default.createElement(y,{onClick:e.openMenu})):u.default.createElement("ul",{className:d.default.navList},u.default.createElement("li",{onClick:e.handleClick,className:d.default.navListItem},u.default.createElement(f.Link,{to:m[0]},"Work")),u.default.createElement("li",{onClick:e.handleClick,className:d.default.navListItem},u.default.createElement(f.Link,{to:m[1]},"About")),u.default.createElement("li",{className:d.default.navListItem},u.default.createElement("a",{href:m[2],download:!0,target:"blank"},"Resume")))}))}}]),t}(s.Component),function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:d.default.arrowContainer},u.default.createElement("ul",{className:d.default.navListMobile},u.default.createElement(f.Link,{to:m[0]},u.default.createElement("li",{className:d.default.navListItemM},"Work")),u.default.createElement(f.Link,{to:m[1]},u.default.createElement("li",{className:d.default.navListItemM},"About")),u.default.createElement("a",{href:m[2]},u.default.createElement("li",{className:d.default.navListItemM},"Resume"))))}}]),t}(s.Component)),b=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:d.default.arrowContainer},u.default.createElement("ul",{className:d.default.navListMobile},u.default.createElement("div",{onClick:this.props.onClick,className:d.default.arrowUp}),u.default.createElement(h,null)))}}]),t}(s.Component),y=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:d.default.arrowContainer},u.default.createElement("div",{onClick:this.props.onClick,className:d.default.arrowUp1}))}}]),t}(s.Component)},"./src/components/navigation/breadcrumbs.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/navigation/breadcrumbs.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/components/navigation/navigation.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/components/navigation/navigation.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initializeClient=void 0;var r,o,i=f(n("./node_modules/babel-runtime/regenerator/index.js")),a=f(n("./node_modules/babel-runtime/helpers/asyncToGenerator.js")),l=f(n("./node_modules/babel-runtime/core-js/promise.js")),s=t.initializeClient=(r=(0,a.default)(i.default.mark(function e(t){return i.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:p(t),(0,d.render)(u.default.createElement(c.default,null),t);case 2:case"end":return e.stop()}},e,this)})),function(e){return r.apply(this,arguments)}),u=f(n("./node_modules/react/index.js")),c=f(n("./src/App.js")),d=n("./node_modules/react-dom/index.js");function f(e){return e&&e.__esModule?e:{default:e}}function p(e){(0,d.unmountComponentAtNode)(e)}o=document.getElementById("root"),l.default.resolve(s(o)).catch(function(e){console.error("An error occurred when starting the client"),console.error(e)})},"./src/views/about/About.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AboutContent=t.About=void 0;var r=p(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=p(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=p(n("./node_modules/babel-runtime/helpers/createClass.js")),a=p(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=p(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=p(s),c=p(n("./src/views/about/about.scss")),d=n("./src/components/navigation/Breadcrumbs.js"),f=n("./node_modules/react-router-dom/es/index.js");function p(e){return e&&e.__esModule?e:{default:e}}t.About=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.aboutContainer},u.default.createElement(m,null))}}]),t}(s.Component);var m=t.AboutContent=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.aboutContent},u.default.createElement("h1",{className:c.default.header},"Think Big. Plan Well."),u.default.createElement("p",{className:c.default.blurb},"It’s simple right? Design experiences that can break through the cacophony and create a way to efficiently satisfy customers. However, when new mandatories pop up or shorter deadlines emerge, that logical thinking can easily go out the window and be replaced by: anxiety, fear and bad work. That’s why in every project I am a part of I make it a priority to think big, and plan well. A tested strategy that has effectively combated substanceless decisions and avoided costly timeline pitfalls. If this collaborative and strategic environment suits you, let’s chat about how we can solve your brand and marketing problems. Together, we can think big and plan well. It’s simple right? "),u.default.createElement("div",{className:c.default.socialRow},u.default.createElement("h3",{className:c.default.social},u.default.createElement("a",{href:"mailto:amypedid@outlook.com"},u.default.createElement("i",{className:"far fa-envelope"}))),u.default.createElement("h3",{className:c.default.social},u.default.createElement("a",{className:c.default.socialLink,href:"https://twitter.com/Amy_AHHA_Moment",target:"_blank"},u.default.createElement("i",{className:"fab fa-twitter"})))),u.default.createElement(d.Breadcrumbs,null,u.default.createElement(d.Crumbles,null,u.default.createElement(f.Link,{to:"/shoptology"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Graphic Design"))),u.default.createElement("a",{href:"https://www.dropbox.com/s/se0z76jho8eh5zx/Amy%20Pedid-Art%20Director_2019%20resume.pdf?dl=0&fbclid=IwAR0nscBYTw3w8cMmsz9H0y2Hujxpr8BeFgriY15AtZFb2E2XwEmMryRDWv0",target:"_blank"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Resume"))))))}}]),t}(s.Component)},"./src/views/about/about.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/about/about.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/views/campaigns/caribou/Caribou.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CaribouContent=void 0;var r=A(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=A(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=A(n("./node_modules/babel-runtime/helpers/createClass.js")),a=A(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=A(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=A(s),c=A(n("./src/views/campaigns/caribou/caribou.scss")),d=n("./src/components/navigation/Breadcrumbs.js"),f=n("./node_modules/react-router-dom/es/index.js"),p=A(n("./src/assets/caribou/1cb.png")),m=A(n("./src/assets/caribou/2cb.png")),h=A(n("./src/assets/caribou/3cb.png")),b=A(n("./src/assets/caribou/4cb.png")),y=A(n("./src/assets/caribou/5cb.png")),g=A(n("./src/assets/caribou/6cb.png")),v=A(n("./src/assets/caribou/7cb.png"));function A(e){return e&&e.__esModule?e:{default:e}}t.CaribouContent=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.caribouContainer},u.default.createElement(_,null))}}]),t}(s.Component);var _=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){var e=u.default.createElement("center",null,u.default.createElement("iframe",{className:c.default.video,src:"https://www.youtube.com/embed/wKoGX4vJKcg",frameBorder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}));return u.default.createElement("div",{className:c.default.bgContainer},u.default.createElement("div",{className:c.default.contentBlock},u.default.createElement("img",{className:c.default.caribouBanner,src:p.default,alt:"Caribou Coffee"}),u.default.createElement("p",{className:c.default.blurb},"In a world where you can be easily fooled with ingredients we rewarded those who knew what is real and not real."),u.default.createElement("img",{className:c.default.caribouImage,src:m.default,alt:"Caribou Coffee"}),u.default.createElement("img",{className:c.default.caribouImage,src:h.default,alt:"Caribou Coffee"}),u.default.createElement("img",{className:c.default.caribouImage,src:b.default,alt:"Caribou Coffee"}),u.default.createElement("img",{className:c.default.caribouImage1,src:y.default,alt:"Caribou Coffee"}),e,u.default.createElement("img",{className:c.default.caribouImage2,src:g.default,alt:"Caribou Coffee"}),u.default.createElement("img",{className:c.default.caribouSite,src:v.default,alt:"Caribou Coffee"}),u.default.createElement(d.Breadcrumbs,null,u.default.createElement(d.Crumbles,null,u.default.createElement(f.Link,{to:"/tribe"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Tribe Hummus"))),u.default.createElement(f.Link,{to:"/walmart"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Walmart Museum")))))))}}]),t}(s.Component)},"./src/views/campaigns/caribou/caribou.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/caribou/caribou.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/views/campaigns/shoptology/Shoptology.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ShoptologyContent=void 0;var r=g(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=g(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=g(n("./node_modules/babel-runtime/helpers/createClass.js")),a=g(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=g(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=g(s),c=g(n("./src/views/campaigns/shoptology/shoptology.scss")),d=n("./src/components/navigation/Breadcrumbs.js"),f=n("./node_modules/react-router-dom/es/index.js"),p=g(n("./src/assets/shoptology/1shp.png")),m=g(n("./src/assets/shoptology/2shp.png")),h=g(n("./src/assets/shoptology/3shp.png")),b=g(n("./src/assets/shoptology/4shp.png")),y=g(n("./src/assets/shoptology/5shp.png"));function g(e){return e&&e.__esModule?e:{default:e}}t.ShoptologyContent=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.shoptologyContainer},u.default.createElement(v,null))}}]),t}(s.Component);var v=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.bgContainer},u.default.createElement("div",{className:c.default.contentBlock},u.default.createElement("img",{className:c.default.shoptologyBanner,src:p.default,alt:"Shoptology"}),u.default.createElement("img",{className:c.default.shoptologyImage,src:m.default,alt:"Shoptology"}),u.default.createElement("img",{className:c.default.shoptologyImage,src:h.default,alt:"Shoptology"}),u.default.createElement("img",{className:c.default.shoptologyImage,src:b.default,alt:"Shoptology"}),u.default.createElement("img",{className:c.default.shoptologyImage,src:y.default,alt:"Shoptology"}),u.default.createElement(d.Breadcrumbs,null,u.default.createElement(d.Crumbles,null,u.default.createElement(f.Link,{to:"/walmart"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Walmart Museum"))),u.default.createElement(f.Link,{to:"/about"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"About Me")))))))}}]),t}(s.Component)},"./src/views/campaigns/shoptology/shoptology.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/shoptology/shoptology.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/views/campaigns/tribe/Tribe.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TribeContent=void 0;var r=v(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=v(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=v(n("./node_modules/babel-runtime/helpers/createClass.js")),a=v(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=v(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=v(s),c=v(n("./src/views/campaigns/tribe/tribe.scss")),d=v(n("./src/assets/tribe/1th.png")),f=v(n("./src/assets/tribe/2th.png")),p=v(n("./src/assets/tribe/3th.png")),m=v(n("./src/assets/tribe/4th.png")),h=v(n("./src/assets/tribe/5th.png")),b=v(n("./src/assets/tribe/6th.png")),y=n("./src/components/navigation/Breadcrumbs.js"),g=n("./node_modules/react-router-dom/es/index.js");function v(e){return e&&e.__esModule?e:{default:e}}t.TribeContent=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.tribeContainer},u.default.createElement(A,null))}}]),t}(s.Component);var A=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.bgContainer},u.default.createElement("div",{className:c.default.contentBlock},u.default.createElement("img",{className:c.default.tribeBanner,src:d.default,alt:"Tribe Hummus Logo"}),u.default.createElement("p",{className:c.default.blurb},"We set out to make Tribe hummus the snack of choices for anyone wanting to try something new and delicious."),u.default.createElement("img",{className:c.default.tribeImage,src:f.default,alt:"Tribe Hummus Logo"}),u.default.createElement("img",{className:c.default.tribeImage,src:p.default,alt:"Tribe Hummus Logo"}),u.default.createElement("img",{className:c.default.tribeImageCart,src:m.default,alt:"Tribe Hummus Logo"}),u.default.createElement("img",{className:c.default.tribeSite,src:h.default,alt:"Tribe Hummus Logo"}),u.default.createElement("img",{className:c.default.tribeSite,src:b.default,alt:"Tribe Hummus Logo"}),u.default.createElement(y.Breadcrumbs,null,u.default.createElement(y.Crumbles,null,u.default.createElement(g.Link,{to:"/"},u.default.createElement(y.Crumble,null,u.default.createElement("h1",null,"Home"))),u.default.createElement(g.Link,{to:"/caribou"},u.default.createElement(y.Crumble,null,u.default.createElement("h1",null,"Caribou Coffee")))))))}}]),t}(s.Component)},"./src/views/campaigns/tribe/tribe.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/tribe/tribe.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/views/campaigns/walmart/Walmart.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WalmartContent=void 0;var r=y(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=y(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=y(n("./node_modules/babel-runtime/helpers/createClass.js")),a=y(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=y(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=y(s),c=y(n("./src/views/campaigns/walmart/walmart.scss")),d=n("./src/components/navigation/Breadcrumbs.js"),f=n("./node_modules/react-router-dom/es/index.js"),p=y(n("./src/assets/walmart/1wmm.png")),m=y(n("./src/assets/walmart/2wmm.png")),h=y(n("./src/assets/walmart/3wmm.png")),b=y(n("./src/assets/walmart/4wmm.png"));function y(e){return e&&e.__esModule?e:{default:e}}t.WalmartContent=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.walmartContainer},u.default.createElement(g,null))}}]),t}(s.Component);var g=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:c.default.bgContainer},u.default.createElement("div",{className:c.default.contentBlock},u.default.createElement("img",{className:c.default.wmmBanner,src:p.default,alt:"The Walmart Museaum"}),u.default.createElement("h2",{className:c.default.blurb},"A history over 60 years old needed a solution to tell it's story online."),u.default.createElement("img",{className:c.default.wmmImage,src:m.default,alt:"The Walmart Museaum"}),u.default.createElement("img",{className:c.default.wmmImage,src:h.default,alt:"The Walmart Museaum"}),u.default.createElement("h2",{className:c.default.blurb},"Span years with a simple scroll and find sparks of inspiration. Explore the depths of Walmart's story at: ",u.default.createElement("a",{className:c.default.wmLink,href:"http://www.walmartmuseum.com/timeline",target:"_blank"}," ","www.walmartmuseum.com/timeline")),u.default.createElement("img",{className:c.default.wmmSite,src:b.default,alt:"The Walmart Museaum"}),u.default.createElement(d.Breadcrumbs,null,u.default.createElement(d.Crumbles,null,u.default.createElement(f.Link,{to:"/caribou"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Caribou Coffee"))),u.default.createElement(f.Link,{to:"/shoptology"},u.default.createElement(d.Crumble,null,u.default.createElement("h1",null,"Graphic Design")))))))}}]),t}(s.Component)},"./src/views/campaigns/walmart/walmart.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/campaigns/walmart/walmart.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)},"./src/views/home/Home.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Home=void 0;var r=f(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=f(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=f(n("./node_modules/babel-runtime/helpers/createClass.js")),a=f(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),l=f(n("./node_modules/babel-runtime/helpers/inherits.js")),s=n("./node_modules/react/index.js"),u=f(s),c=n("./src/components/block/Block.js"),d=f(n("./src/views/home/home.scss"));function f(e){return e&&e.__esModule?e:{default:e}}t.Home=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:d.default.homeContainer},u.default.createElement(p,null))}}]),t}(s.Component);var p=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,l.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return u.default.createElement("div",{className:d.default.bgContainer},u.default.createElement("div",{className:d.default.blockRow},u.default.createElement(c.TribeBlock,null),u.default.createElement(c.CaribouBlock,null)),u.default.createElement("div",{className:d.default.blockRow},u.default.createElement(c.WalmartBlock,null),u.default.createElement(c.ShopBlock,null)),u.default.createElement("div",{className:d.default.blockRow},u.default.createElement(c.DisplayBlock,null),u.default.createElement(c.DisplayBlock,null)))}}]),t}(s.Component)},"./src/views/home/home.scss":function(e,t,n){var r=n("./node_modules/css-loader/index.js?!./node_modules/sass-loader/lib/loader.js!./src/views/home/home.scss");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vaW5kZXguc2Nzcz8yOTUzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2NyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hZGQtdG8tdW5zY29wYWJsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jdHguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZWZpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kb20tY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZW51bS1idWcta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0ta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2V4cG9ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZm9yLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGlkZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2h0bWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ludm9rZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS1pdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWNhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyYXRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19saWJyYXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbWV0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX21pY3JvdGFzay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX25ldy1wcm9taXNlLWNhcGFiaWxpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXBpZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1zYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wZXJmb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvbWlzZS1yZXNvbHZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC1rZXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdGFzay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL191aWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL191c2VyLWFnZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYucHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UudHJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vaW5kZXguc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9ibG9jay9ibG9jay5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZpZ2F0aW9uL2JyZWFkY3J1bWJzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL2Fib3V0L2Fib3V0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL2NhbXBhaWducy9jYXJpYm91L2Nhcmlib3Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3Nob3B0b2xvZ3kvc2hvcHRvbG9neS5zY3NzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9jYW1wYWlnbnMvdHJpYmUvdHJpYmUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3dhbG1hcnQvd2FsbWFydC5zY3NzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9ob21lL2hvbWUuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL3VybC9lc2NhcGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3Rvcnkvbm9kZV9tb2R1bGVzL3dhcm5pbmcvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pzb24ybXEvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZWRpYS9lc20vcmVhY3QtbWVkaWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvTWVtb3J5Um91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL05hdkxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Qcm9tcHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUHJvbXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvU3RhdGljUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9nZW5lcmF0ZVBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUtbW9kdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0cmluZy1jb252ZXJ0L2NhbWVsMmh5cGhlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2FzdHJvbm9teS5qcGciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzFjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzJjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzNjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzRjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzVjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzZjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9jYXJpYm91LzdjYi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9zaG9wdG9sb2d5LzFzaHAucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc2hvcHRvbG9neS8yc2hwLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3Nob3B0b2xvZ3kvM3NocC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9zaG9wdG9sb2d5LzRzaHAucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc2hvcHRvbG9neS81c2hwLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3RiLWNhcmlib3UucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvdGItaHVtbXVzLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3RiLXNocC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy90Yi13bS5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy90cmliZS8xdGgucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvdHJpYmUvMnRoLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3RyaWJlLzN0aC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy90cmliZS80dGgucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvdHJpYmUvNXRoLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3RyaWJlLzZ0aC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy93YWxtYXJ0LzF3bW0ucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvd2FsbWFydC8yd21tLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3dhbG1hcnQvM3dtbS5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy93YWxtYXJ0LzR3bW0ucG5nIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2Jsb2NrL0Jsb2NrLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2Jsb2NrL2Jsb2NrLnNjc3M/OGQ0ZCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9mb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuc2Nzcz81ZmZkIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24vQnJlYWRjcnVtYnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24vYnJlYWRjcnVtYnMuc2Nzcz9mZDg2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24vbmF2aWdhdGlvbi5zY3NzPzBlNzUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9hYm91dC9BYm91dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvYWJvdXQvYWJvdXQuc2Nzcz82ZWZkIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9jYW1wYWlnbnMvY2FyaWJvdS9DYXJpYm91LmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9jYW1wYWlnbnMvY2FyaWJvdS9jYXJpYm91LnNjc3M/NmU1NCIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3Nob3B0b2xvZ3kvU2hvcHRvbG9neS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3Nob3B0b2xvZ3kvc2hvcHRvbG9neS5zY3NzPzQ3MmUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL2NhbXBhaWducy90cmliZS9UcmliZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3RyaWJlL3RyaWJlLnNjc3M/NmZkMSIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3dhbG1hcnQvV2FsbWFydC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvY2FtcGFpZ25zL3dhbG1hcnQvd2FsbWFydC5zY3NzPzcxMzYiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL2hvbWUvSG9tZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvaG9tZS9ob21lLnNjc3M/MzMzYiJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNvbnRlbnQiLCJvcHRpb25zIiwiaG1yIiwidHJhbnNmb3JtIiwiaW5zZXJ0SW50byIsInVuZGVmaW5lZCIsImxvY2FscyIsImRlZmF1bHQiLCJvYmoiLCJfcHJvbWlzZSIsIl9wcm9taXNlMiIsImZuIiwiZ2VuIiwiYXBwbHkiLCJ0aGlzIiwiYXJndW1lbnRzIiwicmVzb2x2ZSIsInJlamVjdCIsInN0ZXAiLCJhcmciLCJpbmZvIiwiZXJyb3IiLCJkb25lIiwidGhlbiIsImVyciIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydHkiLCJfZGVmaW5lUHJvcGVydHkyIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3NldFByb3RvdHlwZU9mMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfY3JlYXRlMiIsIl90eXBlb2YzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJfdHlwZW9mMiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9pdGVyYXRvcjIiLCJfc3ltYm9sMiIsIl90eXBlb2YiLCIkT2JqZWN0IiwiUCIsIkQiLCJpdCIsImRlc2MiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiUHJvbWlzZSIsImYiLCJmb3JiaWRkZW5GaWVsZCIsImlzT2JqZWN0IiwidG9JT2JqZWN0IiwidG9MZW5ndGgiLCJ0b0Fic29sdXRlSW5kZXgiLCJJU19JTkNMVURFUyIsIiR0aGlzIiwiZWwiLCJmcm9tSW5kZXgiLCJPIiwiaW5kZXgiLCJjb2YiLCJUQUciLCJBUkciLCJUIiwiQiIsImUiLCJ0cnlHZXQiLCJjYWxsZWUiLCJ0b1N0cmluZyIsInNsaWNlIiwiY29yZSIsInZlcnNpb24iLCJfX2UiLCJhRnVuY3Rpb24iLCJ0aGF0IiwiYSIsImIiLCJkb2N1bWVudCIsImlzIiwiY3JlYXRlRWxlbWVudCIsInNwbGl0IiwiZ2V0S2V5cyIsImdPUFMiLCJwSUUiLCJyZXN1bHQiLCJnZXRTeW1ib2xzIiwic3ltYm9scyIsImlzRW51bSIsInB1c2giLCJnbG9iYWwiLCJjdHgiLCJoaWRlIiwiaGFzIiwiJGV4cG9ydCIsInR5cGUiLCJzb3VyY2UiLCJvd24iLCJvdXQiLCJJU19GT1JDRUQiLCJGIiwiSVNfR0xPQkFMIiwiRyIsIklTX1NUQVRJQyIsIlMiLCJJU19QUk9UTyIsIklTX0JJTkQiLCJJU19XUkFQIiwiVyIsImV4cFByb3RvIiwiQyIsIkZ1bmN0aW9uIiwidmlydHVhbCIsIlIiLCJVIiwiZXhlYyIsImlzQXJyYXlJdGVyIiwiYW5PYmplY3QiLCJnZXRJdGVyRm4iLCJCUkVBSyIsIlJFVFVSTiIsIml0ZXJhYmxlIiwiZW50cmllcyIsIklURVJBVE9SIiwiaXRlcmF0b3IiLCJpdGVyRm4iLCJuZXh0Iiwid2luZG93IiwiTWF0aCIsIl9fZyIsImRQIiwiY3JlYXRlRGVzYyIsImRvY3VtZW50RWxlbWVudCIsImFyZ3MiLCJ1biIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiSXRlcmF0b3JzIiwiQXJyYXlQcm90byIsIkFycmF5IiwiaXNBcnJheSIsInJldCIsInNldFRvU3RyaW5nVGFnIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJOQU1FIiwiTElCUkFSWSIsInJlZGVmaW5lIiwiJGl0ZXJDcmVhdGUiLCJCVUdHWSIsImtleXMiLCJyZXR1cm5UaGlzIiwiQmFzZSIsIkRFRkFVTFQiLCJJU19TRVQiLCJGT1JDRUQiLCJtZXRob2RzIiwiZ2V0TWV0aG9kIiwia2luZCIsInByb3RvIiwiREVGX1ZBTFVFUyIsIlZBTFVFU19CVUciLCIkbmF0aXZlIiwiJGRlZmF1bHQiLCIkZW50cmllcyIsIiRhbnlOYXRpdmUiLCJ2YWx1ZXMiLCJTQUZFX0NMT1NJTkciLCJyaXRlciIsImZyb20iLCJza2lwQ2xvc2luZyIsInNhZmUiLCJhcnIiLCJpdGVyIiwiTUVUQSIsInNldERlc2MiLCJpZCIsImlzRXh0ZW5zaWJsZSIsIkZSRUVaRSIsInByZXZlbnRFeHRlbnNpb25zIiwic2V0TWV0YSIsInciLCJtZXRhIiwiS0VZIiwiTkVFRCIsImZhc3RLZXkiLCJnZXRXZWFrIiwib25GcmVlemUiLCJtYWNyb3Rhc2siLCJzZXQiLCJPYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJXZWJLaXRNdXRhdGlvbk9ic2VydmVyIiwicHJvY2VzcyIsImlzTm9kZSIsImhlYWQiLCJsYXN0Iiwibm90aWZ5IiwiZmx1c2giLCJwYXJlbnQiLCJkb21haW4iLCJleGl0IiwiZW50ZXIiLCJuZXh0VGljayIsIm5hdmlnYXRvciIsInN0YW5kYWxvbmUiLCJwcm9taXNlIiwidG9nZ2xlIiwibm9kZSIsImNyZWF0ZVRleHROb2RlIiwib2JzZXJ2ZSIsImNoYXJhY3RlckRhdGEiLCJkYXRhIiwidGFzayIsIlByb21pc2VDYXBhYmlsaXR5IiwiJCRyZXNvbHZlIiwiJCRyZWplY3QiLCJkUHMiLCJlbnVtQnVnS2V5cyIsIklFX1BST1RPIiwiRW1wdHkiLCJjcmVhdGVEaWN0IiwiaWZyYW1lRG9jdW1lbnQiLCJpZnJhbWUiLCJzdHlsZSIsImRpc3BsYXkiLCJhcHBlbmRDaGlsZCIsInNyYyIsImNvbnRlbnRXaW5kb3ciLCJvcGVuIiwid3JpdGUiLCJsdCIsImNsb3NlIiwiUHJvcGVydGllcyIsIklFOF9ET01fREVGSU5FIiwidG9QcmltaXRpdmUiLCJBdHRyaWJ1dGVzIiwiZ09QRCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdPUE4iLCJ3aW5kb3dOYW1lcyIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRXaW5kb3dOYW1lcyIsIiRrZXlzIiwiaGlkZGVuS2V5cyIsImNvbmNhdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInRvT2JqZWN0IiwiT2JqZWN0UHJvdG8iLCJhcnJheUluZGV4T2YiLCJuYW1lcyIsImZhaWxzIiwiZXhwIiwidiIsIm5ld1Byb21pc2VDYXBhYmlsaXR5IiwieCIsInByb21pc2VDYXBhYmlsaXR5IiwiYml0bWFwIiwiY2hlY2siLCJ0ZXN0IiwiYnVnZ3kiLCJERVNDUklQVE9SUyIsIlNQRUNJRVMiLCJkZWYiLCJ0YWciLCJzdGF0Iiwic2hhcmVkIiwidWlkIiwic3RvcmUiLCJjb3B5cmlnaHQiLCJ0b0ludGVnZXIiLCJkZWZpbmVkIiwiVE9fU1RSSU5HIiwicG9zIiwiU3RyaW5nIiwiY2hhckNvZGVBdCIsImNoYXJBdCIsImRlZmVyIiwiY2hhbm5lbCIsInBvcnQiLCJpbnZva2UiLCJodG1sIiwiY2VsIiwic2V0VGFzayIsInNldEltbWVkaWF0ZSIsImNsZWFyVGFzayIsImNsZWFySW1tZWRpYXRlIiwiTWVzc2FnZUNoYW5uZWwiLCJEaXNwYXRjaCIsImNvdW50ZXIiLCJxdWV1ZSIsInJ1biIsImxpc3RlbmVyIiwiZXZlbnQiLCJub3ciLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwiaW1wb3J0U2NyaXB0cyIsInJlbW92ZUNoaWxkIiwic2V0VGltZW91dCIsImNsZWFyIiwibWF4IiwibWluIiwiY2VpbCIsImZsb29yIiwiaXNOYU4iLCJJT2JqZWN0IiwidmFsIiwidmFsdWVPZiIsInB4IiwicmFuZG9tIiwidXNlckFnZW50Iiwid2tzRXh0IiwiJFN5bWJvbCIsIlVTRV9TWU1CT0wiLCJjbGFzc29mIiwiZ2V0SXRlcmF0b3JNZXRob2QiLCJhZGRUb1Vuc2NvcGFibGVzIiwiaXRlcmF0ZWQiLCJfdCIsIl9pIiwiX2siLCJBcmd1bWVudHMiLCIkZ2V0UHJvdG90eXBlT2YiLCJJbnRlcm5hbCIsIm5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSIsIk93blByb21pc2VDYXBhYmlsaXR5IiwiV3JhcHBlciIsImFuSW5zdGFuY2UiLCJmb3JPZiIsInNwZWNpZXNDb25zdHJ1Y3RvciIsIm1pY3JvdGFzayIsIm5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlIiwicGVyZm9ybSIsInByb21pc2VSZXNvbHZlIiwidmVyc2lvbnMiLCJ2OCIsIiRQcm9taXNlIiwiZW1wdHkiLCJVU0VfTkFUSVZFIiwiRmFrZVByb21pc2UiLCJQcm9taXNlUmVqZWN0aW9uRXZlbnQiLCJpbmRleE9mIiwiaXNUaGVuYWJsZSIsImlzUmVqZWN0IiwiX24iLCJjaGFpbiIsIl9jIiwiX3YiLCJvayIsIl9zIiwicmVhY3Rpb24iLCJleGl0ZWQiLCJoYW5kbGVyIiwiZmFpbCIsIl9oIiwib25IYW5kbGVVbmhhbmRsZWQiLCJvblVuaGFuZGxlZCIsImNvbnNvbGUiLCJ1bmhhbmRsZWQiLCJpc1VuaGFuZGxlZCIsImVtaXQiLCJvbnVuaGFuZGxlZHJlamVjdGlvbiIsInJlYXNvbiIsIl9hIiwib25yZWplY3Rpb25oYW5kbGVkIiwiJHJlamVjdCIsIl9kIiwiX3ciLCIkcmVzb2x2ZSIsIndyYXBwZXIiLCJleGVjdXRvciIsIm9uRnVsZmlsbGVkIiwib25SZWplY3RlZCIsImNhdGNoIiwiY2FwYWJpbGl0eSIsImFsbCIsInJlbWFpbmluZyIsIiRpbmRleCIsImFscmVhZHlDYWxsZWQiLCJyYWNlIiwiJGF0IiwicG9pbnQiLCIkZmFpbHMiLCJ3a3MiLCJ3a3NEZWZpbmUiLCJlbnVtS2V5cyIsIl9jcmVhdGUiLCJnT1BORXh0IiwiJEdPUEQiLCIkRFAiLCIkSlNPTiIsIkpTT04iLCJfc3RyaW5naWZ5Iiwic3RyaW5naWZ5IiwiSElEREVOIiwiVE9fUFJJTUlUSVZFIiwiU3ltYm9sUmVnaXN0cnkiLCJBbGxTeW1ib2xzIiwiT1BTeW1ib2xzIiwiUU9iamVjdCIsInNldHRlciIsImZpbmRDaGlsZCIsInNldFN5bWJvbERlc2MiLCJwcm90b0Rlc2MiLCJ3cmFwIiwic3ltIiwiaXNTeW1ib2wiLCIkZGVmaW5lUHJvcGVydHkiLCIkZGVmaW5lUHJvcGVydGllcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkUiLCIkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiJGdldE93blByb3BlcnR5TmFtZXMiLCIkZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiSVNfT1AiLCIkc2V0IiwiZXM2U3ltYm9scyIsImoiLCJ3ZWxsS25vd25TeW1ib2xzIiwiayIsImZvciIsImtleUZvciIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsInJlcGxhY2VyIiwiJHJlcGxhY2VyIiwiZmluYWxseSIsIm9uRmluYWxseSIsImlzRnVuY3Rpb24iLCJ0cnkiLCJjYWxsYmFja2ZuIiwiVE9fU1RSSU5HX1RBRyIsIkRPTUl0ZXJhYmxlcyIsIkNvbGxlY3Rpb24iLCJzb3VyY2VzIiwibWFwcGluZ3MiLCJmaWxlIiwic291cmNlc0NvbnRlbnQiLCJzb3VyY2VSb290Iiwic2l0ZVdyYXBwZXIiLCJlc2NhcGUiLCJmbGV4IiwiYmxvY2siLCJob3ZlckJsb2NrIiwid21ibG9jayIsImNhcmlibG9jayIsInRyaWJlYmxvY2siLCJzaHBibG9jayIsImNvbCIsInJvdyIsImZvb3RlciIsInNvY2lhbFJvdyIsInNvY2lhbCIsImJyZWFkY3J1bWJzIiwiY3J1bWJsZXMiLCJjcnVtYmxlIiwibmF2aWdhdGlvbkNvbnRhaW5lciIsIm5hdkxpc3QiLCJuYXZMaXN0TW9iaWxlIiwibmF2Q29weSIsIm5hdkxpc3RJdGVtIiwiYXJyb3dVcCIsImFycm93VXAxIiwiYWJvdXRDb250YWluZXIiLCJhYm91dENvbnRlbnQiLCJibHVyYiIsImhlYWRlciIsImNhcmlib3VDb250YWluZXIiLCJjb250ZW50QmxvY2siLCJ2aWRlbyIsImNhcmlib3VCYW5uZXIiLCJjYXJpYm91SW1hZ2UiLCJjYXJpYm91SW1hZ2UxIiwiY2FyaWJvdUltYWdlMiIsImNhcmlib3VTaXRlIiwiZmFkZWluIiwiY2FyaWJvdUxpbmsiLCJzaG9wdG9sb2d5Q29udGFpbmVyIiwic2hvcHRvbG9neUJhbm5lciIsInNob3B0b2xvZ3lJbWFnZSIsInRyaWJlQ29udGFpbmVyIiwidHJpYmVCYW5uZXIiLCJ0cmliZUltYWdlIiwidHJpYmVJbWFnZUNhcnQiLCJ0cmliZVNpdGUiLCJ0cmliZUxpbmsiLCJ3YWxtYXJ0Q29udGFpbmVyIiwid21tQmFubmVyIiwid21tSW1hZ2UiLCJ3bW1TaXRlIiwid21MaW5rIiwiaG9tZUNvbnRhaW5lciIsImJsb2NrUm93IiwidXNlU291cmNlTWFwIiwibGlzdCIsIm1hcCIsIml0ZW0iLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInNvdXJjZVVSTHMiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwidXJsIiwicmVwbGFjZSIsImNvbmRpdGlvbiIsImZvcm1hdCIsIkVycm9yIiwiYXJnSW5kZXgiLCJmcmFtZXNUb1BvcCIsImNhbWVsMmh5cGhlbiIsIm9iajJtcSIsIm1xIiwiZmVhdHVyZXMiLCJmb3JFYWNoIiwiZmVhdHVyZSIsImlzRGltZW5zaW9uIiwicXVlcnkiLCJxIiwicHJvcElzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRvIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwib2Zmc2V0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJ0b2tlbiIsInNlZ21lbnQiLCJhdHRhY2hLZXlzIiwicmUiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiZyIsImgiLCJiYSIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJvbkVycm9yIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInVhIiwidmEiLCJ3YSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJwYXJlbnROb2RlIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJ0b0xvd2VyQ2FzZSIsIlRhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWEiLCJWYSIsIldhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhhIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsInRleHRDb250ZW50IiwiZmIiLCJnYiIsInkiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImliIiwiZXZlbnRQb29sIiwicG9wIiwiamIiLCJkZXN0cnVjdG9yIiwiaGIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsImRvY3VtZW50TW9kZSIsInBiIiwicWIiLCJyYiIsInNiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInRiIiwidWIiLCJrZXlDb2RlIiwidmIiLCJkZXRhaWwiLCJ3YiIsInpiIiwibG9jYWxlIiwid2hpY2giLCJ4YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInliIiwiQWIiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ3ZWVrIiwiTWIiLCJub2RlTmFtZSIsIk5iIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJPYiIsInNldEF0dHJpYnV0ZSIsIlBiIiwiUmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlFiIiwiU2IiLCJjaGVja2VkIiwiVGIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJjdXJyZW50IiwiVWIiLCJ6IiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiZGlzcGxheU5hbWUiLCIkJHR5cGVvZiIsInJlbmRlciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiamMiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImtjIiwibGMiLCJtYyIsIm5jIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInJjIiwic2MiLCJ0YyIsInBjIiwicWMiLCJvYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwidWMiLCJ2YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwid2MiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkJjIiwiY2hhbmdlIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsImRldGFjaEV2ZW50IiwiS2MiLCJMYyIsImF0dGFjaEV2ZW50IiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiUWMiLCJ2aWV3IiwiUmMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiU2MiLCJnZXRNb2RpZmllclN0YXRlIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJaYyIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIiRjIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJhZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiYmQiLCJjZCIsImRkIiwiZWQiLCJlZmZlY3RUYWciLCJmZCIsImhkIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJwZCIsImRhdGFUcmFuc2ZlciIsInFkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInJkIiwic2QiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInRkIiwidWQiLCJ2ZCIsIndkIiwiaXNJbnRlcmFjdGl2ZSIsInhkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwieWQiLCJ6ZCIsIkFkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJCZCIsIkNkIiwiRGQiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJib2R5IiwiS2QiLCJmaXJzdENoaWxkIiwiTGQiLCJuZXh0U2libGluZyIsIk5kIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlJkIiwiU2QiLCJzZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJvblNlbGVjdCIsIiRkIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsIlpkIiwiYWUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImJlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJjZSIsImRlIiwiZWUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiZmUiLCJtYXRobWwiLCJzdmciLCJnZSIsImhlIiwiaWUiLCJqZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJrZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImxlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIm1lIiwibmUiLCJ0cmltIiwib2UiLCJzZXRQcm9wZXJ0eSIsInN1YnN0cmluZyIsInBlIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJxZSIsInNlIiwiYmx1ciIsInRlIiwidWUiLCJ2ZSIsIndlIiwiYXV0b0ZvY3VzIiwieGUiLCJfX2h0bWwiLCJ5ZSIsInplIiwiY2xlYXJUaW1lb3V0IiwiQWUiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiQmUiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkRlIiwiRWUiLCJTZXQiLCJGZSIsIkdlIiwiSGUiLCJIIiwiSSIsIkllIiwiSmUiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJKIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJLZSIsIkxlIiwiTWUiLCJOZSIsImdldENoaWxkQ29udGV4dCIsIk9lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlVlIiwicmVmIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiSyIsIlZlIiwiaXNSZWFjdENvbXBvbmVudCIsIlhlIiwiWWUiLCJaZSIsIiRlIiwiYWYiLCJiZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiY2YiLCJkaWRFcnJvciIsImVhcmxpZXN0UGVuZGluZ1RpbWUiLCJsYXRlc3RQZW5kaW5nVGltZSIsImRmIiwiZmYiLCJsYXRlc3RQaW5nZWRUaW1lIiwiZWFybGllc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0U3VzcGVuZGVkVGltZSIsImdmIiwibmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT24iLCJMIiwiZGVmYXVsdFByb3BzIiwiamYiLCJDb21wb25lbnQiLCJyZWZzIiwia2YiLCJiYXNlU3RhdGUiLCJ0ZiIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJsZiIsIm5mIiwibWYiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJvZiIsInBmIiwicWYiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwicmYiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJzZiIsInVmIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJ2ZiIsImNvbnRleHRUeXBlIiwiTSIsInN0YXRlIiwidXBkYXRlciIsIndmIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwieGYiLCJjb250ZXh0IiwieWYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsIkEiLCJ1IiwiZGVsZXRlIiwiRGYiLCJFZiIsIkZmIiwiTiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlEiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJiYXNlVXBkYXRlIiwibmciLCJvZyIsInBnIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJxZyIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJyZyIsImRlc3Ryb3kiLCJkZXBzIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJSZWFjdEN1cnJlbnRPd25lciIsIkhnIiwiSWciLCJKZyIsIktnIiwiY29tcGFyZSIsIkxnIiwiTWciLCJOZyIsIk9nIiwiUGciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJRZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsIlJnIiwicGVuZGluZ0NvbnRleHQiLCJTZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIlRnIiwiVWciLCJfY3RvciIsImhmIiwiV2UiLCJoeWRyYXRlIiwiaGlkZGVuIiwiX2NvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiX2N1cnJlbnRWYWx1ZSIsIlpnIiwiJGciLCJhaCIsImJoIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJjaCIsImRoIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwic3RhY2siLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwib25DbGljayIsIm9uY2xpY2siLCJwaCIsIldlYWtTZXQiLCJxaCIsInJoIiwic2giLCJ0aCIsInZoIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJ3aCIsInhoIiwieWgiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiemgiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwiQ2UiLCJ1aCIsImhpIiwiWGgiLCJhZGQiLCJCaCIsIldlYWtNYXAiLCJDaCIsIkRoIiwiRWgiLCJjb21wb25lbnREaWRDYXRjaCIsIkZoIiwiY29tcG9uZW50U3RhY2siLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwiViIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlgiLCJZaCIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiZmluaXNoZWRXb3JrIiwiJGgiLCJhaSIsImNyZWF0ZUVsZW1lbnROUyIsImJpIiwiY2kiLCJkaSIsIm1heER1cmF0aW9uIiwicGluZ0NhY2hlIiwiZWkiLCJmaSIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiZ2kiLCJpaSIsImppIiwia2kiLCJsaSIsIlkiLCJtaSIsIm5pIiwib2kiLCJaIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiY29tbWl0IiwidW5tb3VudCIsImNyZWF0ZUJhdGNoIiwiVmkiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzIiwiZmx1c2hTeW5jIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiVGUiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiV2kiLCJYaSIsImNoZWNrRENFIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIk1lZGlhUXVlcnlMaXN0IiwidGFyZ2V0V2luZG93IiwiX3RoaXMiLCJuYXRpdmVNZWRpYVF1ZXJ5TGlzdCIsIm1hdGNoTWVkaWEiLCJhY3RpdmUiLCJjYW5jZWxsYWJsZUxpc3RlbmVyIiwiYWRkTGlzdGVuZXIiLCJjYW5jZWwiLCJyZW1vdmVMaXN0ZW5lciIsInJlYWN0X21lZGlhX01lZGlhIiwiX1JlYWN0JENvbXBvbmVudCIsIk1lZGlhIiwiX2xlbiIsIl9rZXkiLCJkZWZhdWx0TWF0Y2hlcyIsIm1lZGlhUXVlcnlMaXN0Iiwic2V0U3RhdGUiLCJvbkNoYW5nZSIsIl9wcm90byIsImJyb3dzZXJfZGVmYXVsdCIsImpzb24ybXFfZGVmYXVsdCIsInVwZGF0ZU1hdGNoZXMiLCJfdGhpcyRwcm9wcyIsInJlYWN0X2RlZmF1bHQiLCJvbmx5IiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsInNwbGljZU9uZSIsInJlc29sdmVfcGF0aG5hbWUiLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiYVR5cGUiLCJhVmFsdWUiLCJiVmFsdWUiLCJhS2V5cyIsImJLZXlzIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJoYXNCYXNlbmFtZSIsInN0cmlwQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsIl9leHRlbmRzIiwiTG9jYXRpb25VdGlsc19jcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJMb2NhdGlvblV0aWxzX2xvY2F0aW9uc0FyZUVxdWFsIiwiZXNfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwiZmlsdGVyIiwibm90aWZ5TGlzdGVuZXJzIiwiY2FuVXNlRE9NIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldENvbmZpcm1hdGlvbiIsIm1lc3NhZ2UiLCJjb25maXJtIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfdHlwZW9mIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfZXh0ZW5kcyIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJlc19jcmVhdGVCcm93c2VySGlzdG9yeSIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJyZXZlcnRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJkZWx0YSIsImdvIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsImhyZWYiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsImNyZWF0ZUhhc2hIaXN0b3J5X2V4dGVuZHMiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImVzX2NyZWF0ZUhhc2hIaXN0b3J5IiwiY2FuR29XaXRob3V0UmVsb2FkIiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY3JlYXRlTWVtb3J5SGlzdG9yeV90eXBlb2YiLCJjcmVhdGVNZW1vcnlIaXN0b3J5X2V4dGVuZHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwiZXNfY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJzcGxpY2UiLCJjYW5HbyIsIlJvdXRlcl9leHRlbmRzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSb3V0ZXJfUm91dGVyIiwiUm91dGVyIiwiX3RlbXAiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb21wdXRlTWF0Y2giLCJfaW5oZXJpdHMiLCJyb3V0ZXIiLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3RoaXMyIiwiX3Byb3BzIiwiY291bnQiLCJuZXh0UHJvcHMiLCJ3YXJuaW5nX2RlZmF1bHQiLCJwcm9wVHlwZXMiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJlc19Sb3V0ZXIiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJIYXNoUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJIYXNoUm91dGVyX0hhc2hSb3V0ZXIiLCJIYXNoUm91dGVyIiwiSGFzaFJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIkhhc2hSb3V0ZXJfaW5oZXJpdHMiLCJlc19IYXNoUm91dGVyIiwiTGlua19leHRlbmRzIiwiTGlua19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiaXNNb2RpZmllZEV2ZW50IiwiTGlua19MaW5rIiwiTGluayIsIkxpbmtfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVDbGljayIsIkxpbmtfaW5oZXJpdHMiLCJpbm5lclJlZiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImVzX0xpbmsiLCJNZW1vcnlSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIk1lbW9yeVJvdXRlcl9NZW1vcnlSb3V0ZXIiLCJNZW1vcnlSb3V0ZXIiLCJNZW1vcnlSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJNZW1vcnlSb3V0ZXJfaW5oZXJpdHMiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX01lbW9yeVJvdXRlciIsInBhdHRlcm5DYWNoZSIsImNhY2hlQ291bnQiLCJlc19tYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJjYWNoZSIsImNvbXBpbGVkUGF0dGVybiIsInBhdGhfdG9fcmVnZXhwX2RlZmF1bHQiLCJtYXRjaFBhdGhfY29tcGlsZVBhdGgiLCJyZWR1Y2UiLCJtZW1vIiwiUm91dGVfZXh0ZW5kcyIsIlJvdXRlX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSb3V0ZV9pc0VtcHR5Q2hpbGRyZW4iLCJSb3V0ZV9Sb3V0ZSIsIlJvdXRlIiwiUm91dGVfY2xhc3NDYWxsQ2hlY2siLCJSb3V0ZV9pbmhlcml0cyIsImNvbXB1dGVkTWF0Y2giLCJjb21wb25lbnQiLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJlc19Sb3V0ZSIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJOYXZMaW5rX2V4dGVuZHMiLCJOYXZMaW5rX3R5cGVvZiIsIk5hdkxpbmtfTmF2TGluayIsImFjdGl2ZUNsYXNzTmFtZSIsImNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiZ2V0SXNBY3RpdmUiLCJhcmlhQ3VycmVudCIsInJlc3QiLCJOYXZMaW5rX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXNjYXBlZFBhdGgiLCJfcmVmMiIsImFyaWEtY3VycmVudCIsImVzX05hdkxpbmsiLCJQcm9tcHRfUHJvbXB0IiwiUHJvbXB0IiwiUHJvbXB0X2NsYXNzQ2FsbENoZWNrIiwiUHJvbXB0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJQcm9tcHRfaW5oZXJpdHMiLCJlbmFibGUiLCJkaXNhYmxlIiwid2hlbiIsInJlYWN0X3JvdXRlcl9kb21fZXNfUHJvbXB0IiwiZ2VuZXJhdGVQYXRoX3BhdHRlcm5DYWNoZSIsImdlbmVyYXRlUGF0aF9jYWNoZUNvdW50IiwiZXNfZ2VuZXJhdGVQYXRoIiwiY29tcGlsZWRHZW5lcmF0b3IiLCJnZW5lcmF0ZVBhdGhfY29tcGlsZUdlbmVyYXRvciIsImdlbmVyYXRvciIsIlJlZGlyZWN0X2V4dGVuZHMiLCJSZWRpcmVjdF9SZWRpcmVjdCIsIlJlZGlyZWN0IiwiUmVkaXJlY3RfY2xhc3NDYWxsQ2hlY2siLCJSZWRpcmVjdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUmVkaXJlY3RfaW5oZXJpdHMiLCJpc1N0YXRpYyIsInByZXZQcm9wcyIsInByZXZUbyIsIm5leHRUbyIsImNvbXB1dGVUbyIsInJlYWN0X3JvdXRlcl9kb21fZXNfUmVkaXJlY3QiLCJTdGF0aWNSb3V0ZXJfZXh0ZW5kcyIsIlN0YXRpY1JvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3RhdGljUm91dGVyX2FkZExlYWRpbmdTbGFzaCIsImFkZEJhc2VuYW1lIiwiU3RhdGljUm91dGVyX3N0cmlwQmFzZW5hbWUiLCJTdGF0aWNSb3V0ZXJfY3JlYXRlVVJMIiwiU3RhdGljUm91dGVyX3N0YXRpY0hhbmRsZXIiLCJtZXRob2ROYW1lIiwibm9vcCIsIlN0YXRpY1JvdXRlcl9TdGF0aWNSb3V0ZXIiLCJTdGF0aWNSb3V0ZXIiLCJTdGF0aWNSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVQdXNoIiwiaGFuZGxlUmVwbGFjZSIsIl90aGlzJHByb3BzMiIsImhhbmRsZUxpc3RlbiIsImhhbmRsZUJsb2NrIiwiU3RhdGljUm91dGVyX2luaGVyaXRzIiwiU3RhdGljUm91dGVyX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwicmVhY3Rfcm91dGVyX2RvbV9lc19TdGF0aWNSb3V0ZXIiLCJTd2l0Y2hfU3dpdGNoIiwiU3dpdGNoIiwiU3dpdGNoX2NsYXNzQ2FsbENoZWNrIiwiU3dpdGNoX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJTd2l0Y2hfaW5oZXJpdHMiLCJpc1ZhbGlkRWxlbWVudCIsIl9lbGVtZW50JHByb3BzIiwicGF0aFByb3AiLCJjbG9uZUVsZW1lbnQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsInJlYWN0X3JvdXRlcl9kb21fZXNfZ2VuZXJhdGVQYXRoIiwicmVhY3Rfcm91dGVyX2RvbV9lc19tYXRjaFBhdGgiLCJ3aXRoUm91dGVyX2V4dGVuZHMiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX3dpdGhSb3V0ZXIiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJ3aXRoUm91dGVyX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwicm91dGVDb21wb25lbnRQcm9wcyIsIldyYXBwZWRDb21wb25lbnQiLCJob2lzdF9ub25fcmVhY3Rfc3RhdGljc19janNfZGVmYXVsdCIsIlJFQUNUX1NUQVRJQ1MiLCJnZXREZWZhdWx0UHJvcHMiLCJtaXhpbnMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiYXJpdHkiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImNhIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImtleVByZWZpeCIsIj0iLCI6IiwidG9BcnJheSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiZm9yd2FyZFJlZiIsImxhenkiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUZhY3RvcnkiLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiaGFkUnVudGltZSIsInJlZ2VuZXJhdG9yUnVudGltZSIsIm9sZFJ1bnRpbWUiLCJPcCIsImhhc093biIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsImluTW9kdWxlIiwicnVudGltZSIsIkdlblN0YXRlU3VzcGVuZGVkU3RhcnQiLCJHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkIiwiR2VuU3RhdGVFeGVjdXRpbmciLCJHZW5TdGF0ZUNvbXBsZXRlZCIsIkNvbnRpbnVlU2VudGluZWwiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkdlbmVyYXRvciIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJtYXJrIiwiYXdyYXAiLCJfX2F3YWl0IiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiQXN5bmNJdGVyYXRvciIsImFzeW5jIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJ0cnlMb2NzTGlzdCIsInJldmVyc2UiLCJDb250ZXh0IiwicmVzZXQiLCJza2lwVGVtcFJlc2V0IiwicHJldiIsInNlbnQiLCJfc2VudCIsImRlbGVnYXRlIiwibWV0aG9kIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJzdG9wIiwicm9vdFJlY29yZCIsImNvbXBsZXRpb24iLCJydmFsIiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJyZWNvcmQiLCJ0cnlMb2MiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhYnJ1cHQiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImFmdGVyTG9jIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlc3VsdE5hbWUiLCJuZXh0TG9jIiwicHJvdG9HZW5lcmF0b3IiLCJfaW52b2tlIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInRyeUNhdGNoIiwibWFrZUludm9rZU1ldGhvZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwidW53cmFwcGVkIiwicHVzaFRyeUVudHJ5IiwibG9jcyIsIml0ZXJhdG9yTWV0aG9kIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwiYXRvYiIsImdldEVsZW1lbnQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJpZHgiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJhdHRycyIsIm5vbmNlIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsInVwZGF0ZSIsInJlbW92ZSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJ3YXJuaW5nIiwiX3JlYWN0IiwiX3JlYWN0Um91dGVyRG9tIiwiX0hvbWUiLCJfTmF2aWdhdGlvbiIsIl9XYWxtYXJ0IiwiX1RyaWJlIiwiX0Fib3V0IiwiX0Nhcmlib3UiLCJfU2hvcHRvbG9neSIsIk5vTWF0Y2giLCJfcmVhY3QyIiwiQXBwIiwibmFrZWQiLCJOYXZpZ2F0aW9uIiwiSG9tZSIsIldhbG1hcnRDb250ZW50IiwiVHJpYmVDb250ZW50IiwiQ2FyaWJvdUNvbnRlbnQiLCJTaG9wdG9sb2d5Q29udGVudCIsIkFib3V0IiwiX0Zvb3RlcjIiLCJEaXNwbGF5QmxvY2siLCJfY2xhc3NDYWxsQ2hlY2szIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zIiwiX2dldFByb3RvdHlwZU9mMiIsImlzSG92ZXJpbmciLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJnZXRFbGVtZW50QnlJZCIsInNjcm9sbEludG9WaWV3IiwiY2FtcGlkIiwiZGVzYzEiLCJkZXNjMiIsIldhbG1hcnRCbG9jayIsIkNhcmlib3VCbG9jayIsIlRyaWJlQmxvY2siLCJTaG9wQmxvY2siLCJGb290ZXIiLCJzb2NpYWxMaW5rIiwiQnJlYWRjcnVtYnMiLCJDcnVtYmxlIiwiQ3J1bWJsZXMiLCJ1cmxzIiwiTW9iaWxlTmF2IiwibmF2TWVudU9wZW4iLCJvcGVuTWVudSIsImNsb3NlTWVudSIsIl9yZWFjdE1lZGlhMiIsIm1heFdpZHRoIiwiQXJyb3dPcGVuIiwiQXJyb3dDbG9zZWQiLCJkb3dubG9hZCIsImFycm93Q29udGFpbmVyIiwibmF2TGlzdEl0ZW1NIiwidGFyZ2V0Tm9kZSIsIl9jYWxsZWUiLCJfcmVnZW5lcmF0b3IyIiwiY2xlYXJUYXJnZXROb2RlIiwiX3JlYWN0RG9tIiwiX0FwcDIiLCJpbml0aWFsaXplQ2xpZW50IiwiX0JyZWFkY3J1bWJzIiwiQWJvdXRDb250ZW50IiwiQ29udGVudENvbnRhaW5lciIsInZpZGVvRW1iZWQiLCJmcmFtZUJvcmRlciIsImFsbG93IiwiYWxsb3dGdWxsU2NyZWVuIiwiYmdDb250YWluZXIiLCJjYjEiLCJhbHQiLCJjYjIiLCJjYjMiLCJjYjQiLCJjYjUiLCJjYjYiLCJjYjciLCJzaG9wMSIsInNob3AyIiwic2hvcDMiLCJzaG9wNCIsInNob3A1IiwidHJiMSIsInRyYjIiLCJ0cmIzIiwidHJiNCIsInRyYjUiLCJ0cmI2Iiwid21tMSIsIndtbTIiLCJ3bW0zIiwid21tNCIsIl9CbG9jayIsIkJsb2NrR3JpZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVB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Y0FBQytsRSxFQUFBM0QsYUFBRCxNQUNBdkIsRUFBQWxtRSxRQUFBcUYsY0FBQytsRSxFQUFBeEQsVUFBRCxPQUVGMUIsRUFBQWxtRSxRQUFBcUYsY0FBQSxPQUFLcXZELFVBQVd3TixVQUFPL2lELFVBQ3JCK21ELEVBQUFsbUUsUUFBQXFGLGNBQUMrbEUsRUFBQXZFLGFBQUQsTUFDQVgsRUFBQWxtRSxRQUFBcUYsY0FBQytsRSxFQUFBdkUsYUFBRCxlQWRjOTNCLDJEQ25CeEIsSUFBQXR2QyxFQUFjcEMsRUFBUSwyR0FFdEIsaUJBQUFvQyxNQUFBLEVBQTRDakMsRUFBQUMsRUFBU2dDLEVBQUEsTUFPckQsSUFBQUMsRUFBQSxDQUFlQyxLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBQyxHQUVhekMsRUFBUSwrQ0FBUkEsQ0FBOERvQyxFQUFBQyxHQUUzRUQsRUFBQU0sU0FBQXZDLEVBQUFELFFBQUFrQyxFQUFBTSIsImZpbGUiOiJpbmRleF9idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9wdWJsaWMvXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2VcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvclwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3Byb21pc2UgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9wcm9taXNlXCIpO1xuXG52YXIgX3Byb21pc2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvbWlzZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBnZW4gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgZnVuY3Rpb24gc3RlcChrZXksIGFyZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBfcHJvbWlzZTIuZGVmYXVsdC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgc3RlcChcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIHN0ZXAoXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdGVwKFwibmV4dFwiKTtcbiAgICB9KTtcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2RlZmluZVByb3BlcnR5ID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiKTtcblxudmFyIF9kZWZpbmVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWZpbmVQcm9wZXJ0eSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAoMCwgX2RlZmluZVByb3BlcnR5Mi5kZWZhdWx0KSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9O1xufSgpOyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3NldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIik7XG5cbnZhciBfc2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2V0UHJvdG90eXBlT2YpO1xuXG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGVcIik7XG5cbnZhciBfY3JlYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZSk7XG5cbnZhciBfdHlwZW9mMiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyAodHlwZW9mIHN1cGVyQ2xhc3MgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogKDAsIF90eXBlb2YzLmRlZmF1bHQpKHN1cGVyQ2xhc3MpKSk7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSAoMCwgX2NyZWF0ZTIuZGVmYXVsdCkoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZjIuZGVmYXVsdCA/ICgwLCBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3R5cGVvZjIgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc2VsZiwgY2FsbCkge1xuICBpZiAoIXNlbGYpIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gY2FsbCAmJiAoKHR5cGVvZiBjYWxsID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShjYWxsKSkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaXRlcmF0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3JcIik7XG5cbnZhciBfaXRlcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXRlcmF0b3IpO1xuXG52YXIgX3N5bWJvbCA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3N5bWJvbFwiKTtcblxudmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBfaXRlcmF0b3IyLmRlZmF1bHQgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlKFAsIEQpIHtcbiAgcmV0dXJuICRPYmplY3QuY3JlYXRlKFAsIEQpO1xufTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYykge1xuICByZXR1cm4gJE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKTtcbn07XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5zZXRQcm90b3R5cGVPZjtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM3LnByb21pc2UudHJ5Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvX2NvcmUnKS5Qcm9taXNlO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TeW1ib2w7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL193a3MtZXh0JykuZignaXRlcmF0b3InKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIENvbnN0cnVjdG9yLCBuYW1lLCBmb3JiaWRkZW5GaWVsZCkge1xuICBpZiAoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IobmFtZSArICc6IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICB9IHJldHVybiBpdDtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsIi8vIGdldHRpbmcgdGFnIGZyb20gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG4vLyBFUzMgd3JvbmcgaGVyZVxudmFyIEFSRyA9IGNvZihmdW5jdGlvbiAoKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTywgVCwgQjtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKFQgPSB0cnlHZXQoTyA9IE9iamVjdChpdCksIFRBRykpID09ICdzdHJpbmcnID8gVFxuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQVJHID8gY29mKE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKEIgPSBjb2YoTykpID09ICdPYmplY3QnICYmIHR5cGVvZiBPLmNhbGxlZSA9PSAnZnVuY3Rpb24nID8gJ0FyZ3VtZW50cycgOiBCO1xufTtcbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuNScgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ID09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuIiwiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcbnZhciBCUkVBSyA9IHt9O1xudmFyIFJFVFVSTiA9IHt9O1xudmFyIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYWJsZSwgZW50cmllcywgZm4sIHRoYXQsIElURVJBVE9SKSB7XG4gIHZhciBpdGVyRm4gPSBJVEVSQVRPUiA/IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXJhYmxlOyB9IDogZ2V0SXRlckZuKGl0ZXJhYmxlKTtcbiAgdmFyIGYgPSBjdHgoZm4sIHRoYXQsIGVudHJpZXMgPyAyIDogMSk7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBsZW5ndGgsIHN0ZXAsIGl0ZXJhdG9yLCByZXN1bHQ7XG4gIGlmICh0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdGVyYWJsZSArICcgaXMgbm90IGl0ZXJhYmxlIScpO1xuICAvLyBmYXN0IGNhc2UgZm9yIGFycmF5cyB3aXRoIGRlZmF1bHQgaXRlcmF0b3JcbiAgaWYgKGlzQXJyYXlJdGVyKGl0ZXJGbikpIGZvciAobGVuZ3RoID0gdG9MZW5ndGgoaXRlcmFibGUubGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICByZXN1bHQgPSBlbnRyaWVzID8gZihhbk9iamVjdChzdGVwID0gaXRlcmFibGVbaW5kZXhdKVswXSwgc3RlcFsxXSkgOiBmKGl0ZXJhYmxlW2luZGV4XSk7XG4gICAgaWYgKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pIHJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoaXRlcmFibGUpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7KSB7XG4gICAgcmVzdWx0ID0gY2FsbChpdGVyYXRvciwgZiwgc3RlcC52YWx1ZSwgZW50cmllcyk7XG4gICAgaWYgKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pIHJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5leHBvcnRzLkJSRUFLID0gQlJFQUs7XG5leHBvcnRzLlJFVFVSTiA9IFJFVFVSTjtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChpdCwga2V5KTtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwibW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdkaXYnKSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsIi8vIGZhc3QgYXBwbHksIGh0dHA6Ly9qc3BlcmYubG5raXQuY29tL2Zhc3QtYXBwbHkvNVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIGFyZ3MsIHRoYXQpIHtcbiAgdmFyIHVuID0gdGhhdCA9PT0gdW5kZWZpbmVkO1xuICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgY2FzZSAwOiByZXR1cm4gdW4gPyBmbigpXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQpO1xuICAgIGNhc2UgMTogcmV0dXJuIHVuID8gZm4oYXJnc1swXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgIGNhc2UgNDogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gIH0gcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3MpO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG4iLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZW50cmllcyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICAvLyA3LjQuNiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIGFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcblxuLy8gMjUuMS4yLjEuMSAlSXRlcmF0b3JQcm90b3R5cGUlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2hpZGUnKShJdGVyYXRvclByb3RvdHlwZSwgcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyksIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCkge1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHsgbmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KSB9KTtcbiAgc2V0VG9TdHJpbmdUYWcoQ29uc3RydWN0b3IsIE5BTUUgKyAnIEl0ZXJhdG9yJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkb25lLCB2YWx1ZSkge1xuICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZSB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge307XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHRydWU7XG4iLCJ2YXIgTUVUQSA9IHJlcXVpcmUoJy4vX3VpZCcpKCdtZXRhJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBzZXREZXNjID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBpZCA9IDA7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZSB8fCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBGUkVFWkUgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7XG59KTtcbnZhciBzZXRNZXRhID0gZnVuY3Rpb24gKGl0KSB7XG4gIHNldERlc2MoaXQsIE1FVEEsIHsgdmFsdWU6IHtcbiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSURcbiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IH0pO1xufTtcbnZhciBmYXN0S2V5ID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyA/ICdTJyA6ICdQJykgKyBpdDtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiAnRic7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuICdFJztcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gb2JqZWN0IElEXG4gIH0gcmV0dXJuIGl0W01FVEFdLmk7XG59O1xudmFyIGdldFdlYWsgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuIHRydWU7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBoYXNoIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gcmV0dXJuIGl0W01FVEFdLnc7XG59O1xuLy8gYWRkIG1ldGFkYXRhIG9uIGZyZWV6ZS1mYW1pbHkgbWV0aG9kcyBjYWxsaW5nXG52YXIgb25GcmVlemUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKEZSRUVaRSAmJiBtZXRhLk5FRUQgJiYgaXNFeHRlbnNpYmxlKGl0KSAmJiAhaGFzKGl0LCBNRVRBKSkgc2V0TWV0YShpdCk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgbWV0YSA9IG1vZHVsZS5leHBvcnRzID0ge1xuICBLRVk6IE1FVEEsXG4gIE5FRUQ6IGZhbHNlLFxuICBmYXN0S2V5OiBmYXN0S2V5LFxuICBnZXRXZWFrOiBnZXRXZWFrLFxuICBvbkZyZWV6ZTogb25GcmVlemVcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBPYnNlcnZlciA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBQcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhlYWQsIGxhc3QsIG5vdGlmeTtcblxuICB2YXIgZmx1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBhcmVudCwgZm47XG4gICAgaWYgKGlzTm9kZSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKSBwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlIChoZWFkKSB7XG4gICAgICBmbiA9IGhlYWQuZm47XG4gICAgICBoZWFkID0gaGVhZC5uZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGhlYWQpIG5vdGlmeSgpO1xuICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIE5vZGUuanNcbiAgaWYgKGlzTm9kZSkge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICAgIH07XG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlciwgZXhjZXB0IGlPUyBTYWZhcmkgLSBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMzM5XG4gIH0gZWxzZSBpZiAoT2JzZXJ2ZXIgJiYgIShnbG9iYWwubmF2aWdhdG9yICYmIGdsb2JhbC5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSkpIHtcbiAgICB2YXIgdG9nZ2xlID0gdHJ1ZTtcbiAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwgeyBjaGFyYWN0ZXJEYXRhOiB0cnVlIH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZSA9ICF0b2dnbGU7XG4gICAgfTtcbiAgLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2VcbiAgfSBlbHNlIGlmIChQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSkge1xuICAgIC8vIFByb21pc2UucmVzb2x2ZSB3aXRob3V0IGFuIGFyZ3VtZW50IHRocm93cyBhbiBlcnJvciBpbiBMRyBXZWJPUyAyXG4gICAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIGZvciBvdGhlciBlbnZpcm9ubWVudHMgLSBtYWNyb3Rhc2sgYmFzZWQgb246XG4gIC8vIC0gc2V0SW1tZWRpYXRlXG4gIC8vIC0gTWVzc2FnZUNoYW5uZWxcbiAgLy8gLSB3aW5kb3cucG9zdE1lc3NhZ1xuICAvLyAtIG9ucmVhZHlzdGF0ZWNoYW5nZVxuICAvLyAtIHNldFRpbWVvdXRcbiAgfSBlbHNlIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpXG4gICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChmbikge1xuICAgIHZhciB0YXNrID0geyBmbjogZm4sIG5leHQ6IHVuZGVmaW5lZCB9O1xuICAgIGlmIChsYXN0KSBsYXN0Lm5leHQgPSB0YXNrO1xuICAgIGlmICghaGVhZCkge1xuICAgICAgaGVhZCA9IHRhc2s7XG4gICAgICBub3RpZnkoKTtcbiAgICB9IGxhc3QgPSB0YXNrO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI1LjQuMS41IE5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xuXG5mdW5jdGlvbiBQcm9taXNlQ2FwYWJpbGl0eShDKSB7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uICgkJHJlc29sdmUsICQkcmVqZWN0KSB7XG4gICAgaWYgKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleXMgPSBnZXRLZXlzKFByb3BlcnRpZXMpO1xuICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIFA7XG4gIHdoaWxlIChsZW5ndGggPiBpKSBkUC5mKE8sIFAgPSBrZXlzW2krK10sIFByb3BlcnRpZXNbUF0pO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuIiwiLy8gMTkuMS4yLjcgLyAxNS4yLjMuNCBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpLmNvbmNhdCgnbGVuZ3RoJywgJ3Byb3RvdHlwZScpO1xuXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGhpZGRlbktleXMpO1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIvLyAxOS4xLjIuOSAvIDE1LjIuMy4yIE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiAoTykge1xuICBPID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXMoTywgSUVfUFJPVE8pKSByZXR1cm4gT1tJRV9QUk9UT107XG4gIGlmICh0eXBlb2YgTy5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmIE8gaW5zdGFuY2VvZiBPLmNvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcbiIsInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLy8gMTkuMS4yLjE0IC8gMTUuMi4zLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTykge1xuICByZXR1cm4gJGtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcbiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHsgZTogZmFsc2UsIHY6IGV4ZWMoKSB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHsgZTogdHJ1ZSwgdjogZSB9O1xuICB9XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHtcbiAgICBpZiAoc2FmZSAmJiB0YXJnZXRba2V5XSkgdGFyZ2V0W2tleV0gPSBzcmNba2V5XTtcbiAgICBlbHNlIGhpZGUodGFyZ2V0LCBrZXksIHNyY1trZXldKTtcbiAgfSByZXR1cm4gdGFyZ2V0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faGlkZScpO1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSkge1xuICB2YXIgQyA9IHR5cGVvZiBjb3JlW0tFWV0gPT0gJ2Z1bmN0aW9uJyA/IGNvcmVbS0VZXSA6IGdsb2JhbFtLRVldO1xuICBpZiAoREVTQ1JJUFRPUlMgJiYgQyAmJiAhQ1tTUEVDSUVTXSkgZFAuZihDLCBTUEVDSUVTLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07XG4iLCJ2YXIgZGVmID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIHRhZywgc3RhdCkge1xuICBpZiAoaXQgJiYgIWhhcyhpdCA9IHN0YXQgPyBpdCA6IGl0LnByb3RvdHlwZSwgVEFHKSkgZGVmKGl0LCBUQUcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCB2YWx1ZTogdGFnIH0pO1xufTtcbiIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIiwidmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXyc7XG52YXIgc3RvcmUgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoge30pO1xufSkoJ3ZlcnNpb25zJywgW10pLnB1c2goe1xuICB2ZXJzaW9uOiBjb3JlLnZlcnNpb24sXG4gIG1vZGU6IHJlcXVpcmUoJy4vX2xpYnJhcnknKSA/ICdwdXJlJyA6ICdnbG9iYWwnLFxuICBjb3B5cmlnaHQ6ICfCqSAyMDE5IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpJ1xufSk7XG4iLCIvLyA3LjMuMjAgU3BlY2llc0NvbnN0cnVjdG9yKE8sIGRlZmF1bHRDb25zdHJ1Y3RvcilcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIEQpIHtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvcjtcbiAgdmFyIFM7XG4gIHJldHVybiBDID09PSB1bmRlZmluZWQgfHwgKFMgPSBhbk9iamVjdChDKVtTUEVDSUVTXSkgPT0gdW5kZWZpbmVkID8gRCA6IGFGdW5jdGlvbihTKTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIiwidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY2VsID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBzZXRUYXNrID0gZ2xvYmFsLnNldEltbWVkaWF0ZTtcbnZhciBjbGVhclRhc2sgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGU7XG52YXIgTWVzc2FnZUNoYW5uZWwgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWw7XG52YXIgRGlzcGF0Y2ggPSBnbG9iYWwuRGlzcGF0Y2g7XG52YXIgY291bnRlciA9IDA7XG52YXIgcXVldWUgPSB7fTtcbnZhciBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbnZhciBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpZCA9ICt0aGlzO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gIGlmIChxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmICghc2V0VGFzayB8fCAhY2xlYXJUYXNrKSB7XG4gIHNldFRhc2sgPSBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZm4pIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIHZhciBpID0gMTtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcXVldWVbKytjb3VudGVyXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChyZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2VzcycpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIFNwaGVyZSAoSlMgZ2FtZSBlbmdpbmUpIERpc3BhdGNoIEFQSVxuICB9IGVsc2UgaWYgKERpc3BhdGNoICYmIERpc3BhdGNoLm5vdykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBEaXNwYXRjaC5ub3coY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwpIHtcbiAgICBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgcG9ydCA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgdHlwZW9mIHBvc3RNZXNzYWdlID09ICdmdW5jdGlvbicgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShpZCArICcnLCAnKicpO1xuICAgIH07XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0JykpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgpIHtcbiAgaW5kZXggPSB0b0ludGVnZXIoaW5kZXgpO1xuICByZXR1cm4gaW5kZXggPCAwID8gbWF4KGluZGV4ICsgbGVuZ3RoLCAwKSA6IG1pbihpbmRleCwgbGVuZ3RoKTtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbmF2aWdhdG9yID0gZ2xvYmFsLm5hdmlnYXRvcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCAnJztcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTtcbiAgaWYgKG5hbWUuY2hhckF0KDApICE9ICdfJyAmJiAhKG5hbWUgaW4gJFN5bWJvbCkpIGRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHsgdmFsdWU6IHdrc0V4dC5mKG5hbWUpIH0pO1xufTtcbiIsImV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX3drcycpO1xuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwidmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29yZScpLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCAhPSB1bmRlZmluZWQpIHJldHVybiBpdFtJVEVSQVRPUl1cbiAgICB8fCBpdFsnQEBpdGVyYXRvciddXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIi8vIDE5LjEuMi45IE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgJGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldFByb3RvdHlwZU9mJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvdG90eXBlT2YoaXQpIHtcbiAgICByZXR1cm4gJGdldFByb3RvdHlwZU9mKHRvT2JqZWN0KGl0KSk7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IHNldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciB0YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuL19wZXJmb3JtJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG52YXIgUFJPTUlTRSA9ICdQcm9taXNlJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciB2ZXJzaW9ucyA9IHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucztcbnZhciB2OCA9IHZlcnNpb25zICYmIHZlcnNpb25zLnY4IHx8ICcnO1xudmFyICRQcm9taXNlID0gZ2xvYmFsW1BST01JU0VdO1xudmFyIGlzTm9kZSA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xudmFyIGVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIEludGVybmFsLCBuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIE93blByb21pc2VDYXBhYmlsaXR5LCBXcmFwcGVyO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZjtcblxudmFyIFVTRV9OQVRJVkUgPSAhIWZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICAvLyBjb3JyZWN0IHN1YmNsYXNzaW5nIHdpdGggQEBzcGVjaWVzIHN1cHBvcnRcbiAgICB2YXIgcHJvbWlzZSA9ICRQcm9taXNlLnJlc29sdmUoMSk7XG4gICAgdmFyIEZha2VQcm9taXNlID0gKHByb21pc2UuY29uc3RydWN0b3IgPSB7fSlbcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKV0gPSBmdW5jdGlvbiAoZXhlYykge1xuICAgICAgZXhlYyhlbXB0eSwgZW1wdHkpO1xuICAgIH07XG4gICAgLy8gdW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICAgIHJldHVybiAoaXNOb2RlIHx8IHR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQgPT0gJ2Z1bmN0aW9uJylcbiAgICAgICYmIHByb21pc2UudGhlbihlbXB0eSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZVxuICAgICAgLy8gdjggNi42IChOb2RlIDEwIGFuZCBDaHJvbWUgNjYpIGhhdmUgYSBidWcgd2l0aCByZXNvbHZpbmcgY3VzdG9tIHRoZW5hYmxlc1xuICAgICAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9ODMwNTY1XG4gICAgICAvLyB3ZSBjYW4ndCBkZXRlY3QgaXQgc3luY2hyb25vdXNseSwgc28ganVzdCBjaGVjayB2ZXJzaW9uc1xuICAgICAgJiYgdjguaW5kZXhPZignNi42JykgIT09IDBcbiAgICAgICYmIHVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUvNjYnKSA9PT0gLTE7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufSgpO1xuXG4vLyBoZWxwZXJzXG52YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgdGhlbjtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiB0eXBlb2YgKHRoZW4gPSBpdC50aGVuKSA9PSAnZnVuY3Rpb24nID8gdGhlbiA6IGZhbHNlO1xufTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbiAocHJvbWlzZSwgaXNSZWplY3QpIHtcbiAgaWYgKHByb21pc2UuX24pIHJldHVybjtcbiAgcHJvbWlzZS5fbiA9IHRydWU7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2M7XG4gIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgb2sgPSBwcm9taXNlLl9zID09IDE7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBydW4gPSBmdW5jdGlvbiAocmVhY3Rpb24pIHtcbiAgICAgIHZhciBoYW5kbGVyID0gb2sgPyByZWFjdGlvbi5vayA6IHJlYWN0aW9uLmZhaWw7XG4gICAgICB2YXIgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmU7XG4gICAgICB2YXIgcmVqZWN0ID0gcmVhY3Rpb24ucmVqZWN0O1xuICAgICAgdmFyIGRvbWFpbiA9IHJlYWN0aW9uLmRvbWFpbjtcbiAgICAgIHZhciByZXN1bHQsIHRoZW4sIGV4aXRlZDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChoYW5kbGVyKSB7XG4gICAgICAgICAgaWYgKCFvaykge1xuICAgICAgICAgICAgaWYgKHByb21pc2UuX2ggPT0gMikgb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgICAgICAgICBwcm9taXNlLl9oID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHRydWUpIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGRvbWFpbikgZG9tYWluLmVudGVyKCk7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kbGVyKHZhbHVlKTsgLy8gbWF5IHRocm93XG4gICAgICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICAgIGRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgICAgIGV4aXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChyZXN1bHQgPT09IHJlYWN0aW9uLnByb21pc2UpIHtcbiAgICAgICAgICAgIHJlamVjdChUeXBlRXJyb3IoJ1Byb21pc2UtY2hhaW4gY3ljbGUnKSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgICAgICB0aGVuLmNhbGwocmVzdWx0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSByZWplY3QodmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZG9tYWluICYmICFleGl0ZWQpIGRvbWFpbi5leGl0KCk7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlIChjaGFpbi5sZW5ndGggPiBpKSBydW4oY2hhaW5baSsrXSk7IC8vIHZhcmlhYmxlIGxlbmd0aCAtIGNhbid0IHVzZSBmb3JFYWNoXG4gICAgcHJvbWlzZS5fYyA9IFtdO1xuICAgIHByb21pc2UuX24gPSBmYWxzZTtcbiAgICBpZiAoaXNSZWplY3QgJiYgIXByb21pc2UuX2gpIG9uVW5oYW5kbGVkKHByb21pc2UpO1xuICB9KTtcbn07XG52YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgdW5oYW5kbGVkID0gaXNVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgdmFyIHJlc3VsdCwgaGFuZGxlciwgY29uc29sZTtcbiAgICBpZiAodW5oYW5kbGVkKSB7XG4gICAgICByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGlzTm9kZSkge1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub251bmhhbmRsZWRyZWplY3Rpb24pIHtcbiAgICAgICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiB2YWx1ZSB9KTtcbiAgICAgICAgfSBlbHNlIGlmICgoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBwcm9taXNlLl9oID0gaXNOb2RlIHx8IGlzVW5oYW5kbGVkKHByb21pc2UpID8gMiA6IDE7XG4gICAgfSBwcm9taXNlLl9hID0gdW5kZWZpbmVkO1xuICAgIGlmICh1bmhhbmRsZWQgJiYgcmVzdWx0LmUpIHRocm93IHJlc3VsdC52O1xuICB9KTtcbn07XG52YXIgaXNVbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICByZXR1cm4gcHJvbWlzZS5faCAhPT0gMSAmJiAocHJvbWlzZS5fYSB8fCBwcm9taXNlLl9jKS5sZW5ndGggPT09IDA7XG59O1xudmFyIG9uSGFuZGxlVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYW5kbGVyO1xuICAgIGlmIChpc05vZGUpIHtcbiAgICAgIHByb2Nlc3MuZW1pdCgncmVqZWN0aW9uSGFuZGxlZCcsIHByb21pc2UpO1xuICAgIH0gZWxzZSBpZiAoaGFuZGxlciA9IGdsb2JhbC5vbnJlamVjdGlvbmhhbmRsZWQpIHtcbiAgICAgIGhhbmRsZXIoeyBwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHByb21pc2UuX3YgfSk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgJHJlamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICBwcm9taXNlLl9zID0gMjtcbiAgaWYgKCFwcm9taXNlLl9hKSBwcm9taXNlLl9hID0gcHJvbWlzZS5fYy5zbGljZSgpO1xuICBub3RpZnkocHJvbWlzZSwgdHJ1ZSk7XG59O1xudmFyICRyZXNvbHZlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHZhciBwcm9taXNlID0gdGhpcztcbiAgdmFyIHRoZW47XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgdHJ5IHtcbiAgICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHRocm93IFR5cGVFcnJvcihcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO1xuICAgIGlmICh0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3cmFwcGVyID0geyBfdzogcHJvbWlzZSwgX2Q6IGZhbHNlIH07IC8vIHdyYXBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGN0eCgkcmVzb2x2ZSwgd3JhcHBlciwgMSksIGN0eCgkcmVqZWN0LCB3cmFwcGVyLCAxKSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAkcmVqZWN0LmNhbGwod3JhcHBlciwgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9taXNlLl92ID0gdmFsdWU7XG4gICAgICBwcm9taXNlLl9zID0gMTtcbiAgICAgIG5vdGlmeShwcm9taXNlLCBmYWxzZSk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgJHJlamVjdC5jYWxsKHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9LCBlKTsgLy8gd3JhcFxuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gICRQcm9taXNlID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJFByb21pc2UsIFBST01JU0UsICdfaCcpO1xuICAgIGFGdW5jdGlvbihleGVjdXRvcik7XG4gICAgSW50ZXJuYWwuY2FsbCh0aGlzKTtcbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IoY3R4KCRyZXNvbHZlLCB0aGlzLCAxKSwgY3R4KCRyZWplY3QsIHRoaXMsIDEpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICRyZWplY3QuY2FsbCh0aGlzLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zXG4gICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9uc1xuICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGVcbiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmVcbiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlXG4gICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZFxuICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5XG4gIH07XG4gIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwge1xuICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgICAgdmFyIHJlYWN0aW9uID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsICRQcm9taXNlKSk7XG4gICAgICByZWFjdGlvbi5vayA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgICAgcmVhY3Rpb24uZmFpbCA9IHR5cGVvZiBvblJlamVjdGVkID09ICdmdW5jdGlvbicgJiYgb25SZWplY3RlZDtcbiAgICAgIHJlYWN0aW9uLmRvbWFpbiA9IGlzTm9kZSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fYy5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9hKSB0aGlzLl9hLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYgKHRoaXMuX3MpIG5vdGlmeSh0aGlzLCBmYWxzZSk7XG4gICAgICByZXR1cm4gcmVhY3Rpb24ucHJvbWlzZTtcbiAgICB9LFxuICAgIC8vIDI1LjQuNS4xIFByb21pc2UucHJvdG90eXBlLmNhdGNoKG9uUmVqZWN0ZWQpXG4gICAgJ2NhdGNoJzogZnVuY3Rpb24gKG9uUmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnRoZW4odW5kZWZpbmVkLCBvblJlamVjdGVkKTtcbiAgICB9XG4gIH0pO1xuICBPd25Qcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBJbnRlcm5hbCgpO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gICAgdGhpcy5yZXNvbHZlID0gY3R4KCRyZXNvbHZlLCBwcm9taXNlLCAxKTtcbiAgICB0aGlzLnJlamVjdCA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTtcbiAgfTtcbiAgbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKEMpIHtcbiAgICByZXR1cm4gQyA9PT0gJFByb21pc2UgfHwgQyA9PT0gV3JhcHBlclxuICAgICAgPyBuZXcgT3duUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgIDogbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFByb21pc2U6ICRQcm9taXNlIH0pO1xucmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKSgkUHJvbWlzZSwgUFJPTUlTRSk7XG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKFBST01JU0UpO1xuV3JhcHBlciA9IHJlcXVpcmUoJy4vX2NvcmUnKVtQUk9NSVNFXTtcblxuLy8gc3RhdGljc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNSBQcm9taXNlLnJlamVjdChyKVxuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKSB7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKTtcbiAgICB2YXIgJCRyZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICAkJHJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKExJQlJBUlkgfHwgIVVTRV9OQVRJVkUpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC42IFByb21pc2UucmVzb2x2ZSh4KVxuICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKHgpIHtcbiAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoTElCUkFSWSAmJiB0aGlzID09PSBXcmFwcGVyID8gJFByb21pc2UgOiB0aGlzLCB4KTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoVVNFX05BVElWRSAmJiByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKSB7XG4gICAgdmFyIEMgPSB0aGlzO1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQyk7XG4gICAgdmFyIHJlc29sdmUgPSBjYXBhYmlsaXR5LnJlc29sdmU7XG4gICAgdmFyIHJlamVjdCA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICAgICAgdmFyICRpbmRleCA9IGluZGV4Kys7XG4gICAgICAgIHZhciBhbHJlYWR5Q2FsbGVkID0gZmFsc2U7XG4gICAgICAgIHZhbHVlcy5wdXNoKHVuZGVmaW5lZCk7XG4gICAgICAgIHJlbWFpbmluZysrO1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBpZiAoYWxyZWFkeUNhbGxlZCkgcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgPSB0cnVlO1xuICAgICAgICAgIHZhbHVlc1skaW5kZXhdID0gdmFsdWU7XG4gICAgICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgICAtLXJlbWFpbmluZyB8fCByZXNvbHZlKHZhbHVlcyk7XG4gICAgfSk7XG4gICAgaWYgKHJlc3VsdC5lKSByZWplY3QocmVzdWx0LnYpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH0sXG4gIC8vIDI1LjQuNC40IFByb21pc2UucmFjZShpdGVyYWJsZSlcbiAgcmFjZTogZnVuY3Rpb24gcmFjZShpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIEMucmVzb2x2ZShwcm9taXNlKS50aGVuKGNhcGFiaWxpdHkucmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gRUNNQVNjcmlwdCA2IHN5bWJvbHMgc2hpbVxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIE1FVEEgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZO1xudmFyICRmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciB3a3NEZWZpbmUgPSByZXF1aXJlKCcuL193a3MtZGVmaW5lJyk7XG52YXIgZW51bUtleXMgPSByZXF1aXJlKCcuL19lbnVtLWtleXMnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBfY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGdPUE5FeHQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKTtcbnZhciAkR09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUEQgPSAkR09QRC5mO1xudmFyIGRQID0gJERQLmY7XG52YXIgZ09QTiA9IGdPUE5FeHQuZjtcbnZhciAkU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciAkSlNPTiA9IGdsb2JhbC5KU09OO1xudmFyIF9zdHJpbmdpZnkgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgSElEREVOID0gd2tzKCdfaGlkZGVuJyk7XG52YXIgVE9fUFJJTUlUSVZFID0gd2tzKCd0b1ByaW1pdGl2ZScpO1xudmFyIGlzRW51bSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKTtcbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT1BTeW1ib2xzID0gc2hhcmVkKCdvcC1zeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3RbUFJPVE9UWVBFXTtcbnZhciBVU0VfTkFUSVZFID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcbnZhciBRT2JqZWN0ID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIF9jcmVhdGUoZFAoe30sICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7IHZhbHVlOiA3IH0pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24gKGl0LCBrZXksIEQpIHtcbiAgdmFyIHByb3RvRGVzYyA9IGdPUEQoT2JqZWN0UHJvdG8sIGtleSk7XG4gIGlmIChwcm90b0Rlc2MpIGRlbGV0ZSBPYmplY3RQcm90b1trZXldO1xuICBkUChpdCwga2V5LCBEKTtcbiAgaWYgKHByb3RvRGVzYyAmJiBpdCAhPT0gT2JqZWN0UHJvdG8pIGRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24gKHRhZykge1xuICB2YXIgc3ltID0gQWxsU3ltYm9sc1t0YWddID0gX2NyZWF0ZSgkU3ltYm9sW1BST1RPVFlQRV0pO1xuICBzeW0uX2sgPSB0YWc7XG4gIHJldHVybiBzeW07XG59O1xuXG52YXIgaXNTeW1ib2wgPSBVU0VfTkFUSVZFICYmIHR5cGVvZiAkU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCkge1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvKSAkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSkpIHtcbiAgICBpZiAoIUQuZW51bWVyYWJsZSkge1xuICAgICAgaWYgKCFoYXMoaXQsIEhJRERFTikpIGRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSBpdFtISURERU5dW2tleV0gPSBmYWxzZTtcbiAgICAgIEQgPSBfY3JlYXRlKEQsIHsgZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSkgfSk7XG4gICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTtcbiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7XG59O1xudmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCkge1xuICBhbk9iamVjdChpdCk7XG4gIHZhciBrZXlzID0gZW51bUtleXMoUCA9IHRvSU9iamVjdChQKSk7XG4gIHZhciBpID0gMDtcbiAgdmFyIGwgPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGwgPiBpKSAkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKSB7XG4gIHJldHVybiBQID09PSB1bmRlZmluZWQgPyBfY3JlYXRlKGl0KSA6ICRkZWZpbmVQcm9wZXJ0aWVzKF9jcmVhdGUoaXQpLCBQKTtcbn07XG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoa2V5KSB7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gRSB8fCAhaGFzKHRoaXMsIGtleSkgfHwgIWhhcyhBbGxTeW1ib2xzLCBrZXkpIHx8IGhhcyh0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtrZXldID8gRSA6IHRydWU7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICBpdCA9IHRvSU9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybjtcbiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpO1xuICBpZiAoRCAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSBELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHZhciBuYW1lcyA9IGdPUE4odG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmICghaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgJGdldE93blByb3BlcnR5U3ltYm9scyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICB2YXIgSVNfT1AgPSBpdCA9PT0gT2JqZWN0UHJvdG87XG4gIHZhciBuYW1lcyA9IGdPUE4oSVNfT1AgPyBPUFN5bWJvbHMgOiB0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSkgcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pXG5pZiAoIVVTRV9OQVRJVkUpIHtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICBpZiAodGhpcyBpbnN0YW5jZW9mICRTeW1ib2wpIHRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8pICRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXModGhpcywgSElEREVOKSAmJiBoYXModGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmIChERVNDUklQVE9SUyAmJiBzZXR0ZXIpIHNldFN5bWJvbERlc2MoT2JqZWN0UHJvdG8sIHRhZywgeyBjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldCB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcpO1xuICB9O1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLl9rO1xuICB9KTtcblxuICAkR09QRC5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgJERQLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZiA9IGdPUE5FeHQuZiA9ICRnZXRPd25Qcm9wZXJ0eU5hbWVzO1xuICByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZiA9ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKS5mID0gJGdldE93blByb3BlcnR5U3ltYm9scztcblxuICBpZiAoREVTQ1JJUFRPUlMgJiYgIXJlcXVpcmUoJy4vX2xpYnJhcnknKSkge1xuICAgIHJlZGVmaW5lKE9iamVjdFByb3RvLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHRydWUpO1xuICB9XG5cbiAgd2tzRXh0LmYgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiB3cmFwKHdrcyhuYW1lKSk7XG4gIH07XG59XG5cbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIHsgU3ltYm9sOiAkU3ltYm9sIH0pO1xuXG5mb3IgKHZhciBlczZTeW1ib2xzID0gKFxuICAvLyAxOS40LjIuMiwgMTkuNC4yLjMsIDE5LjQuMi40LCAxOS40LjIuNiwgMTkuNC4yLjgsIDE5LjQuMi45LCAxOS40LjIuMTAsIDE5LjQuMi4xMSwgMTkuNC4yLjEyLCAxOS40LjIuMTMsIDE5LjQuMi4xNFxuICAnaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMnXG4pLnNwbGl0KCcsJyksIGogPSAwOyBlczZTeW1ib2xzLmxlbmd0aCA+IGo7KXdrcyhlczZTeW1ib2xzW2orK10pO1xuXG5mb3IgKHZhciB3ZWxsS25vd25TeW1ib2xzID0gJGtleXMod2tzLnN0b3JlKSwgayA9IDA7IHdlbGxLbm93blN5bWJvbHMubGVuZ3RoID4gazspIHdrc0RlZmluZSh3ZWxsS25vd25TeW1ib2xzW2srK10pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnU3ltYm9sJywge1xuICAvLyAxOS40LjIuMSBTeW1ib2wuZm9yKGtleSlcbiAgJ2Zvcic6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gaGFzKFN5bWJvbFJlZ2lzdHJ5LCBrZXkgKz0gJycpXG4gICAgICA/IFN5bWJvbFJlZ2lzdHJ5W2tleV1cbiAgICAgIDogU3ltYm9sUmVnaXN0cnlba2V5XSA9ICRTeW1ib2woa2V5KTtcbiAgfSxcbiAgLy8gMTkuNC4yLjUgU3ltYm9sLmtleUZvcihzeW0pXG4gIGtleUZvcjogZnVuY3Rpb24ga2V5Rm9yKHN5bSkge1xuICAgIGlmICghaXNTeW1ib2woc3ltKSkgdGhyb3cgVHlwZUVycm9yKHN5bSArICcgaXMgbm90IGEgc3ltYm9sIScpO1xuICAgIGZvciAodmFyIGtleSBpbiBTeW1ib2xSZWdpc3RyeSkgaWYgKFN5bWJvbFJlZ2lzdHJ5W2tleV0gPT09IHN5bSkgcmV0dXJuIGtleTtcbiAgfSxcbiAgdXNlU2V0dGVyOiBmdW5jdGlvbiAoKSB7IHNldHRlciA9IHRydWU7IH0sXG4gIHVzZVNpbXBsZTogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSBmYWxzZTsgfVxufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdPYmplY3QnLCB7XG4gIC8vIDE5LjEuMi4yIE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiAgY3JlYXRlOiAkY3JlYXRlLFxuICAvLyAxOS4xLjIuNCBPYmplY3QuZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcylcbiAgZGVmaW5lUHJvcGVydHk6ICRkZWZpbmVQcm9wZXJ0eSxcbiAgLy8gMTkuMS4yLjMgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcylcbiAgZGVmaW5lUHJvcGVydGllczogJGRlZmluZVByb3BlcnRpZXMsXG4gIC8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLFxuICAvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxuICBnZXRPd25Qcm9wZXJ0eU5hbWVzOiAkZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgLy8gMTkuMS4yLjggT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhPKVxuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHNcbn0pO1xuXG4vLyAyNC4zLjIgSlNPTi5zdHJpbmdpZnkodmFsdWUgWywgcmVwbGFjZXIgWywgc3BhY2VdXSlcbiRKU09OICYmICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCFVU0VfTkFUSVZFIHx8ICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBTID0gJFN5bWJvbCgpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGxcbiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHNcbiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHsgYTogUyB9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpIHtcbiAgICB2YXIgYXJncyA9IFtpdF07XG4gICAgdmFyIGkgPSAxO1xuICAgIHZhciByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICAkcmVwbGFjZXIgPSByZXBsYWNlciA9IGFyZ3NbMV07XG4gICAgaWYgKCFpc09iamVjdChyZXBsYWNlcikgJiYgaXQgPT09IHVuZGVmaW5lZCB8fCBpc1N5bWJvbChpdCkpIHJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJlcGxhY2VyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgJHJlcGxhY2VyID09ICdmdW5jdGlvbicpIHZhbHVlID0gJHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XG4gICAgICBpZiAoIWlzU3ltYm9sKHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTtcbiAgfVxufSk7XG5cbi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludClcbiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXByb21pc2UtZmluYWxseVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ1Byb21pc2UnLCB7ICdmaW5hbGx5JzogZnVuY3Rpb24gKG9uRmluYWxseSkge1xuICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCBjb3JlLlByb21pc2UgfHwgZ2xvYmFsLlByb21pc2UpO1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiBvbkZpbmFsbHkgPT0gJ2Z1bmN0aW9uJztcbiAgcmV0dXJuIHRoaXMudGhlbihcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKHgpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHJldHVybiB4OyB9KTtcbiAgICB9IDogb25GaW5hbGx5LFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgdGhyb3cgZTsgfSk7XG4gICAgfSA6IG9uRmluYWxseVxuICApO1xufSB9KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXByb21pc2UtdHJ5XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuL19wZXJmb3JtJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUHJvbWlzZScsIHsgJ3RyeSc6IGZ1bmN0aW9uIChjYWxsYmFja2ZuKSB7XG4gIHZhciBwcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5LmYodGhpcyk7XG4gIHZhciByZXN1bHQgPSBwZXJmb3JtKGNhbGxiYWNrZm4pO1xuICAocmVzdWx0LmUgPyBwcm9taXNlQ2FwYWJpbGl0eS5yZWplY3QgOiBwcm9taXNlQ2FwYWJpbGl0eS5yZXNvbHZlKShyZXN1bHQudik7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufSB9KTtcbiIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnYXN5bmNJdGVyYXRvcicpO1xuIiwicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdvYnNlcnZhYmxlJyk7XG4iLCJyZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgVE9fU1RSSU5HX1RBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG52YXIgRE9NSXRlcmFibGVzID0gKCdDU1NSdWxlTGlzdCxDU1NTdHlsZURlY2xhcmF0aW9uLENTU1ZhbHVlTGlzdCxDbGllbnRSZWN0TGlzdCxET01SZWN0TGlzdCxET01TdHJpbmdMaXN0LCcgK1xuICAnRE9NVG9rZW5MaXN0LERhdGFUcmFuc2Zlckl0ZW1MaXN0LEZpbGVMaXN0LEhUTUxBbGxDb2xsZWN0aW9uLEhUTUxDb2xsZWN0aW9uLEhUTUxGb3JtRWxlbWVudCxIVE1MU2VsZWN0RWxlbWVudCwnICtcbiAgJ01lZGlhTGlzdCxNaW1lVHlwZUFycmF5LE5hbWVkTm9kZU1hcCxOb2RlTGlzdCxQYWludFJlcXVlc3RMaXN0LFBsdWdpbixQbHVnaW5BcnJheSxTVkdMZW5ndGhMaXN0LFNWR051bWJlckxpc3QsJyArXG4gICdTVkdQYXRoU2VnTGlzdCxTVkdQb2ludExpc3QsU1ZHU3RyaW5nTGlzdCxTVkdUcmFuc2Zvcm1MaXN0LFNvdXJjZUJ1ZmZlckxpc3QsU3R5bGVTaGVldExpc3QsVGV4dFRyYWNrQ3VlTGlzdCwnICtcbiAgJ1RleHRUcmFja0xpc3QsVG91Y2hMaXN0Jykuc3BsaXQoJywnKTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCBET01JdGVyYWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgdmFyIE5BTUUgPSBET01JdGVyYWJsZXNbaV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICBpZiAocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgSXRlcmF0b3JzW05BTUVdID0gSXRlcmF0b3JzLkFycmF5O1xufVxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwOyB9XFxuXFxuaHRtbCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XFxuXFxuYm9keSB7XFxuICBmb250LXNpemU6IDEwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtZmFtaWx5OiAnQmFybG93IENvbmRlbnNlZCcsIHNhbnMtc2VyaWY7XFxuICBvdmVyZmxvdy14OiBoaWRkZW47IH1cXG5cXG4uc2l0ZVdyYXBwZXJfMmRQUUw3dHZKbzNUWmtWeHcyVVhpIHtcXG4gIG1hcmdpbjogMnJlbTsgfVxcblxcbmE6bGluaywgYTphY3RpdmUsIGE6dmlzaXRlZCB7XFxuICBjb2xvcjogIzAwMDsgfVxcblxcbmE6aG92ZXIge1xcbiAgY29sb3I6ICMwMDk1ZTc7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiQzovVXNlcnMvUm9uL0Rlc2t0b3AvcHJvcHJvamVjdHMvYW15c2l0ZS9jbGllbnQvaW5kZXguc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFVBQVU7RUFDVixXQUFXLEVBQUU7O0FBRWY7RUFDRSx1QkFBdUIsRUFBRTs7QUFFM0I7RUFDRSxnQkFBZ0I7RUFDaEIsd0JBQXdCO0VBQ3hCLDRDQUE0QztFQUM1QyxtQkFBbUIsRUFBRTs7QUFFdkI7RUFDRSxhQUFhLEVBQUU7O0FBRWpCO0VBQ0UsWUFBWSxFQUFFOztBQUVoQjtFQUNFLGVBQWUsRUFBRVwiLFwiZmlsZVwiOlwiaW5kZXguc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7IH1cXG5cXG5odG1sIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cXG5cXG5ib2R5IHtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZm9udC1mYW1pbHk6ICdCYXJsb3cgQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcXG4gIG92ZXJmbG93LXg6IGhpZGRlbjsgfVxcblxcbi5zaXRlV3JhcHBlciB7XFxuICBtYXJnaW46IDJyZW07IH1cXG5cXG5hOmxpbmssIGE6YWN0aXZlLCBhOnZpc2l0ZWQge1xcbiAgY29sb3I6ICMwMDA7IH1cXG5cXG5hOmhvdmVyIHtcXG4gIGNvbG9yOiAjMDA5NWU3OyB9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNpdGVXcmFwcGVyXCI6IFwic2l0ZVdyYXBwZXJfMmRQUUw3dHZKbzNUWmtWeHcyVVhpXCJcbn07IiwidmFyIGVzY2FwZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qc1wiKTtcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZmxleF8zVHdpT1FaUHBHWTJMVEZvSFV4RXAyLCAuYmxvY2tfSWpZc29YMnBNTVRCZUgxTDU1UHhpLCAuaG92ZXJCbG9ja18yckpmQkFWR2tCZTF0clFEeUZsNjhZLCAud21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWEsIC5jYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NSwgLnRyaWJlYmxvY2tfMTNhRnMtNFVPRmQ3MXdYeEZfYW05ZSwgLnNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wTywgLmJsb2NrX0lqWXNvWDJwTU1UQmVIMUw1NVB4aSBoMSwgLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSBoMSwgLndtYmxvY2tfVzBxS19xcEgwbmNpOXgydS1TZS1hIGgxLCAuY2FyaWJsb2NrXzJPVDhxYXdIUVU1SUxZc1FZNEUydDUgaDEsIC50cmliZWJsb2NrXzEzYUZzLTRVT0ZkNzF3WHhGX2FtOWUgaDEsIC5zaHBibG9ja19jUjQ4dTJhTzhPVEl1NUpkN09vcE8gaDEsIC5ibG9ja19Jallzb1gycE1NVEJlSDFMNTVQeGkgaDIsIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFkgaDIsIC53bWJsb2NrX1cwcUtfcXBIMG5jaTl4MnUtU2UtYSBoMiwgLmNhcmlibG9ja18yT1Q4cWF3SFFVNUlMWXNRWTRFMnQ1IGgyLCAudHJpYmVibG9ja18xM2FGcy00VU9GZDcxd1h4Rl9hbTllIGgyLCAuc2hwYmxvY2tfY1I0OHUyYU84T1RJdTVKZDdPb3BPIGgyIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sX3FlMU1PdTlqZVh1QVdkdjduLUFDeCB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvd18xa2dlVXNKWEpYN0NqVGpYU3U2c3NYIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cXG5cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxcblxcbi5ibG9ja19Jallzb1gycE1NVEJlSDFMNTVQeGksIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFksIC53bWJsb2NrX1cwcUtfcXBIMG5jaTl4MnUtU2UtYSwgLmNhcmlibG9ja18yT1Q4cWF3SFFVNUlMWXNRWTRFMnQ1LCAudHJpYmVibG9ja18xM2FGcy00VU9GZDcxd1h4Rl9hbTllLCAuc2hwYmxvY2tfY1I0OHUyYU84T1RJdTVKZDdPb3BPIHtcXG4gIHdpZHRoOiA1MDBweDtcXG4gIGhlaWdodDogNTAwcHg7XFxuICBtYXgtd2lkdGg6IDUwMHB4O1xcbiAgbWFyZ2luLWxlZnQ6IDJyZW07XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg4ODg4O1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi8uLi9hc3NldHMvYXN0cm9ub215LmpwZ1wiKSkgKyBcIik7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XFxuICAuYmxvY2tfSWpZc29YMnBNTVRCZUgxTDU1UHhpIGgxLCAuaG92ZXJCbG9ja18yckpmQkFWR2tCZTF0clFEeUZsNjhZIGgxLCAud21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWEgaDEsIC5jYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NSBoMSwgLnRyaWJlYmxvY2tfMTNhRnMtNFVPRmQ3MXdYeEZfYW05ZSBoMSwgLnNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wTyBoMSwgLmJsb2NrX0lqWXNvWDJwTU1UQmVIMUw1NVB4aSBoMiwgLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSBoMiwgLndtYmxvY2tfVzBxS19xcEgwbmNpOXgydS1TZS1hIGgyLCAuY2FyaWJsb2NrXzJPVDhxYXdIUVU1SUxZc1FZNEUydDUgaDIsIC50cmliZWJsb2NrXzEzYUZzLTRVT0ZkNzF3WHhGX2FtOWUgaDIsIC5zaHBibG9ja19jUjQ4dTJhTzhPVEl1NUpkN09vcE8gaDIge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luOiAwIGF1dG87IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMTUwcHgpIHtcXG4gICAgLmJsb2NrX0lqWXNvWDJwTU1UQmVIMUw1NVB4aSwgLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSwgLndtYmxvY2tfVzBxS19xcEgwbmNpOXgydS1TZS1hLCAuY2FyaWJsb2NrXzJPVDhxYXdIUVU1SUxZc1FZNEUydDUsIC50cmliZWJsb2NrXzEzYUZzLTRVT0ZkNzF3WHhGX2FtOWUsIC5zaHBibG9ja19jUjQ4dTJhTzhPVEl1NUpkN09vcE8ge1xcbiAgICAgIHdpZHRoOiA0MjVweDtcXG4gICAgICBoZWlnaHQ6IDQyNXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5NDVweCkge1xcbiAgICAuYmxvY2tfSWpZc29YMnBNTVRCZUgxTDU1UHhpLCAuaG92ZXJCbG9ja18yckpmQkFWR2tCZTF0clFEeUZsNjhZLCAud21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWEsIC5jYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NSwgLnRyaWJlYmxvY2tfMTNhRnMtNFVPRmQ3MXdYeEZfYW05ZSwgLnNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wTyB7XFxuICAgICAgd2lkdGg6IDM3MHB4O1xcbiAgICAgIGhlaWdodDogMzcwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XFxuICAgIC5ibG9ja19Jallzb1gycE1NVEJlSDFMNTVQeGksIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFksIC53bWJsb2NrX1cwcUtfcXBIMG5jaTl4MnUtU2UtYSwgLmNhcmlibG9ja18yT1Q4cWF3SFFVNUlMWXNRWTRFMnQ1LCAudHJpYmVibG9ja18xM2FGcy00VU9GZDcxd1h4Rl9hbTllLCAuc2hwYmxvY2tfY1I0OHUyYU84T1RJdTVKZDdPb3BPIHtcXG4gICAgICB3aWR0aDogMzIwcHg7XFxuICAgICAgaGVpZ2h0OiAzMjBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcXG4gICAgLmJsb2NrX0lqWXNvWDJwTU1UQmVIMUw1NVB4aSwgLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSwgLndtYmxvY2tfVzBxS19xcEgwbmNpOXgydS1TZS1hLCAuY2FyaWJsb2NrXzJPVDhxYXdIUVU1SUxZc1FZNEUydDUsIC50cmliZWJsb2NrXzEzYUZzLTRVT0ZkNzF3WHhGX2FtOWUsIC5zaHBibG9ja19jUjQ4dTJhTzhPVEl1NUpkN09vcE8ge1xcbiAgICAgIHdpZHRoOiAzMTBweDtcXG4gICAgICBoZWlnaHQ6IDMxMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmxvY2tfSWpZc29YMnBNTVRCZUgxTDU1UHhpLCAuaG92ZXJCbG9ja18yckpmQkFWR2tCZTF0clFEeUZsNjhZLCAud21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWEsIC5jYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NSwgLnRyaWJlYmxvY2tfMTNhRnMtNFVPRmQ3MXdYeEZfYW05ZSwgLnNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wTyB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMzAwcHg7XFxuICAgICAgbWFyZ2luOiAycmVtIGF1dG87IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQyNXB4KSB7XFxuICAgIC5ibG9ja19Jallzb1gycE1NVEJlSDFMNTVQeGksIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFksIC53bWJsb2NrX1cwcUtfcXBIMG5jaTl4MnUtU2UtYSwgLmNhcmlibG9ja18yT1Q4cWF3SFFVNUlMWXNRWTRFMnQ1LCAudHJpYmVibG9ja18xM2FGcy00VU9GZDcxd1h4Rl9hbTllLCAuc2hwYmxvY2tfY1I0OHUyYU84T1RJdTVKZDdPb3BPIHtcXG4gICAgICB3aWR0aDogMjIwcHg7XFxuICAgICAgaGVpZ2h0OiAyMjBweDsgfSB9XFxuXFxuLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIG1hcmdpbi1sZWZ0OiAwO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgZm9udC1zaXplOiAxLjZyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFkgaDIge1xcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xcbiAgICBjb2xvcjogIzAwOTVlNzsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5ob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFkge1xcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNDI1cHgpIHtcXG4gICAgLmhvdmVyQmxvY2tfMnJKZkJBVkdrQmUxdHJRRHlGbDY4WSB7XFxuICAgICAgZm9udC1zaXplOiAxLjJyZW07XFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cXG5cXG4ud21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWEge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi8uLi9hc3NldHMvdGItd20ucG5nXCIpKSArIFwiKTsgfVxcblxcbi5jYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4uLy4uL2Fzc2V0cy90Yi1jYXJpYm91LnBuZ1wiKSkgKyBcIik7IH1cXG5cXG4udHJpYmVibG9ja18xM2FGcy00VU9GZDcxd1h4Rl9hbTllIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi4vLi4vYXNzZXRzL3RiLWh1bW11cy5wbmdcIikpICsgXCIpOyB9XFxuXFxuLnNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wTyB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4uLy4uL2Fzc2V0cy90Yi1zaHAucG5nXCIpKSArIFwiKTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb24vRGVza3RvcC9wcm9wcm9qZWN0cy9hbXlzaXRlL2NsaWVudC9zcmMvY29tcG9uZW50cy9ibG9jay9ibG9jay5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsY0FBYyxFQUFFOztBQUVsQjtFQUNFLHVCQUF1QixFQUFFOztBQUUzQjtFQUNFLG9CQUFvQixFQUFFOztBQUV4QjtFQUNFLHNCQUFzQixFQUFFOztBQUUxQjtFQUNFLGFBQWE7RUFDYixjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQixnREFBb0Q7RUFDcEQsdUJBQXVCLEVBQUU7RUFDekI7SUFDRSx3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsb0JBQW9CO0lBQ3BCLGVBQWUsRUFBRTtFQUNuQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTtFQUN0QjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYztNQUNkLGtCQUFrQixFQUFFLEVBQUU7RUFDMUI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSx1QkFBdUI7RUFDdkIsdUJBQXVCO0VBQ3ZCLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUU7RUFDckI7SUFDRSxpQkFBaUI7SUFDakIsZUFBZSxFQUFFO0VBQ25CO0lBQ0U7TUFDRSxrQkFBa0I7TUFDbEIsbUJBQW1CLEVBQUUsRUFBRTtFQUMzQjtJQUNFO01BQ0Usa0JBQWtCO01BQ2xCLG1CQUFtQixFQUFFLEVBQUU7O0FBRTdCO0VBQ0UsZ0RBQWdELEVBQUU7O0FBRXBEO0VBQ0UsZ0RBQXFELEVBQUU7O0FBRXpEO0VBQ0UsZ0RBQW9ELEVBQUU7O0FBRXhEO0VBQ0UsZ0RBQWlELEVBQUVcIixcImZpbGVcIjpcImJsb2NrLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZsZXgsIC5ibG9jaywgLmhvdmVyQmxvY2ssIC53bWJsb2NrLCAuY2FyaWJsb2NrLCAudHJpYmVibG9jaywgLnNocGJsb2NrLCAuYmxvY2sgaDEsIC5ob3ZlckJsb2NrIGgxLCAud21ibG9jayBoMSwgLmNhcmlibG9jayBoMSwgLnRyaWJlYmxvY2sgaDEsIC5zaHBibG9jayBoMSwgLmJsb2NrIGgyLCAuaG92ZXJCbG9jayBoMiwgLndtYmxvY2sgaDIsIC5jYXJpYmxvY2sgaDIsIC50cmliZWJsb2NrIGgyLCAuc2hwYmxvY2sgaDIge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2wge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbmEge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XFxuXFxuLmJsb2NrLCAuaG92ZXJCbG9jaywgLndtYmxvY2ssIC5jYXJpYmxvY2ssIC50cmliZWJsb2NrLCAuc2hwYmxvY2sge1xcbiAgd2lkdGg6IDUwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDtcXG4gIG1heC13aWR0aDogNTAwcHg7XFxuICBtYXJnaW4tbGVmdDogMnJlbTtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM4ODg4ODg7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4uLy4uL2Fzc2V0cy9hc3Ryb25vbXkuanBnXFxcIik7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XFxuICAuYmxvY2sgaDEsIC5ob3ZlckJsb2NrIGgxLCAud21ibG9jayBoMSwgLmNhcmlibG9jayBoMSwgLnRyaWJlYmxvY2sgaDEsIC5zaHBibG9jayBoMSwgLmJsb2NrIGgyLCAuaG92ZXJCbG9jayBoMiwgLndtYmxvY2sgaDIsIC5jYXJpYmxvY2sgaDIsIC50cmliZWJsb2NrIGgyLCAuc2hwYmxvY2sgaDIge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luOiAwIGF1dG87IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMTUwcHgpIHtcXG4gICAgLmJsb2NrLCAuaG92ZXJCbG9jaywgLndtYmxvY2ssIC5jYXJpYmxvY2ssIC50cmliZWJsb2NrLCAuc2hwYmxvY2sge1xcbiAgICAgIHdpZHRoOiA0MjVweDtcXG4gICAgICBoZWlnaHQ6IDQyNXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5NDVweCkge1xcbiAgICAuYmxvY2ssIC5ob3ZlckJsb2NrLCAud21ibG9jaywgLmNhcmlibG9jaywgLnRyaWJlYmxvY2ssIC5zaHBibG9jayB7XFxuICAgICAgd2lkdGg6IDM3MHB4O1xcbiAgICAgIGhlaWdodDogMzcwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XFxuICAgIC5ibG9jaywgLmhvdmVyQmxvY2ssIC53bWJsb2NrLCAuY2FyaWJsb2NrLCAudHJpYmVibG9jaywgLnNocGJsb2NrIHtcXG4gICAgICB3aWR0aDogMzIwcHg7XFxuICAgICAgaGVpZ2h0OiAzMjBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcXG4gICAgLmJsb2NrLCAuaG92ZXJCbG9jaywgLndtYmxvY2ssIC5jYXJpYmxvY2ssIC50cmliZWJsb2NrLCAuc2hwYmxvY2sge1xcbiAgICAgIHdpZHRoOiAzMTBweDtcXG4gICAgICBoZWlnaHQ6IDMxMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmxvY2ssIC5ob3ZlckJsb2NrLCAud21ibG9jaywgLmNhcmlibG9jaywgLnRyaWJlYmxvY2ssIC5zaHBibG9jayB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMzAwcHg7XFxuICAgICAgbWFyZ2luOiAycmVtIGF1dG87IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQyNXB4KSB7XFxuICAgIC5ibG9jaywgLmhvdmVyQmxvY2ssIC53bWJsb2NrLCAuY2FyaWJsb2NrLCAudHJpYmVibG9jaywgLnNocGJsb2NrIHtcXG4gICAgICB3aWR0aDogMjIwcHg7XFxuICAgICAgaGVpZ2h0OiAyMjBweDsgfSB9XFxuXFxuLmhvdmVyQmxvY2sge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBtYXJnaW4tbGVmdDogMDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMS42cmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuICAuaG92ZXJCbG9jayBoMiB7XFxuICAgIG1hcmdpbi10b3A6IDFyZW07XFxuICAgIGNvbG9yOiAjMDA5NWU3OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmhvdmVyQmxvY2sge1xcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNDI1cHgpIHtcXG4gICAgLmhvdmVyQmxvY2sge1xcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XFxuXFxuLndtYmxvY2sge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuLi8uLi9hc3NldHMvdGItd20ucG5nXFxcIik7IH1cXG5cXG4uY2FyaWJsb2NrIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi4vLi4vYXNzZXRzL3RiLWNhcmlib3UucG5nXFxcIik7IH1cXG5cXG4udHJpYmVibG9jayB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4uLy4uL2Fzc2V0cy90Yi1odW1tdXMucG5nXFxcIik7IH1cXG5cXG4uc2hwYmxvY2sge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuLi8uLi9hc3NldHMvdGItc2hwLnBuZ1xcXCIpOyB9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImZsZXhcIjogXCJmbGV4XzNUd2lPUVpQcEdZMkxURm9IVXhFcDJcIixcblx0XCJibG9ja1wiOiBcImJsb2NrX0lqWXNvWDJwTU1UQmVIMUw1NVB4aVwiLFxuXHRcImhvdmVyQmxvY2tcIjogXCJob3ZlckJsb2NrXzJySmZCQVZHa0JlMXRyUUR5Rmw2OFlcIixcblx0XCJ3bWJsb2NrXCI6IFwid21ibG9ja19XMHFLX3FwSDBuY2k5eDJ1LVNlLWFcIixcblx0XCJjYXJpYmxvY2tcIjogXCJjYXJpYmxvY2tfMk9UOHFhd0hRVTVJTFlzUVk0RTJ0NVwiLFxuXHRcInRyaWJlYmxvY2tcIjogXCJ0cmliZWJsb2NrXzEzYUZzLTRVT0ZkNzF3WHhGX2FtOWVcIixcblx0XCJzaHBibG9ja1wiOiBcInNocGJsb2NrX2NSNDh1MmFPOE9USXU1SmQ3T29wT1wiLFxuXHRcImNvbFwiOiBcImNvbF9xZTFNT3U5amVYdUFXZHY3bi1BQ3hcIixcblx0XCJyb3dcIjogXCJyb3dfMWtnZVVzSlhKWDdDalRqWFN1NnNzWFwiXG59OyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZm9vdGVyXzFjRlZZR3lybjY1US16NEIyYmhyU0Ige1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTVlNztcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxuICB3aWR0aDogMTAwdnc7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xcbiAgICAuZm9vdGVyXzFjRlZZR3lybjY1US16NEIyYmhyU0Ige1xcbiAgICAgIG1hcmdpbi10b3A6IDQuNXJlbTsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjQ5cHgpIHtcXG4gICAgLmZvb3Rlcl8xY0ZWWUd5cm42NVEtejRCMmJoclNCIHtcXG4gICAgICBtYXJnaW4tdG9wOiA1LjU1cmVtOyB9IH1cXG4gIC5mb290ZXJfMWNGVllHeXJuNjVRLXo0QjJiaHJTQiBoMiB7XFxuICAgIGZvbnQtc2l6ZTogMS42cmVtOyB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xcbiAgICAgIC5mb290ZXJfMWNGVllHeXJuNjVRLXo0QjJiaHJTQiBoMiB7XFxuICAgICAgICBmb250LXNpemU6IDEuM3JlbTsgfSB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xcbiAgICAgIC5mb290ZXJfMWNGVllHeXJuNjVRLXo0QjJiaHJTQiBoMiB7XFxuICAgICAgICBmb250LXNpemU6IDFyZW07IH0gfVxcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcXG4gICAgICAuZm9vdGVyXzFjRlZZR3lybjY1US16NEIyYmhyU0IgaDIge1xcbiAgICAgICAgZm9udC1zaXplOiAuOHJlbTsgfSB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNDBweCkge1xcbiAgICAgIC5mb290ZXJfMWNGVllHeXJuNjVRLXo0QjJiaHJTQiBoMiB7XFxuICAgICAgICBmb250LXNpemU6IC42cmVtOyB9IH1cXG4gIC5mb290ZXJfMWNGVllHeXJuNjVRLXo0QjJiaHJTQiBhIHtcXG4gICAgY29sb3I6IHdoaXRlOyB9XFxuICAuZm9vdGVyXzFjRlZZR3lybjY1US16NEIyYmhyU0IgLnNvY2lhbFJvd18zVVU2SGgzOEgzdnYta0E0NDE2SlZEIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24tY29udGVudDogZmxleC1lbmQ7IH1cXG4gICAgLmZvb3Rlcl8xY0ZWWUd5cm42NVEtejRCMmJoclNCIC5zb2NpYWxSb3dfM1VVNkhoMzhIM3Z2LWtBNDQxNkpWRCAuc29jaWFsXzJrX2NHQmRSWnZMSVZWYTUxMVNyZ0kgOmxhc3QtY2hpbGQge1xcbiAgICAgIG1hcmdpbi1yaWdodDogMnJlbTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb24vRGVza3RvcC9wcm9wcm9qZWN0cy9hbXlzaXRlL2NsaWVudC9zcmMvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsY0FBYztFQUNkLDBCQUEwQixFQUFFO0VBQzVCO0lBQ0U7TUFDRSxtQkFBbUIsRUFBRSxFQUFFO0VBQzNCO0lBQ0U7TUFDRSxvQkFBb0IsRUFBRSxFQUFFO0VBQzVCO0lBQ0Usa0JBQWtCLEVBQUU7SUFDcEI7TUFDRTtRQUNFLGtCQUFrQixFQUFFLEVBQUU7SUFDMUI7TUFDRTtRQUNFLGdCQUFnQixFQUFFLEVBQUU7SUFDeEI7TUFDRTtRQUNFLGlCQUFpQixFQUFFLEVBQUU7SUFDekI7TUFDRTtRQUNFLGlCQUFpQixFQUFFLEVBQUU7RUFDM0I7SUFDRSxhQUFhLEVBQUU7RUFDakI7SUFDRSxjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLHdCQUF3QixFQUFFO0lBQzFCO01BQ0UsbUJBQW1CLEVBQUVcIixcImZpbGVcIjpcImZvb3Rlci5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mb290ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTVlNztcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxuICB3aWR0aDogMTAwdnc7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xcbiAgICAuZm9vdGVyIHtcXG4gICAgICBtYXJnaW4tdG9wOiA0LjVyZW07IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDY0OXB4KSB7XFxuICAgIC5mb290ZXIge1xcbiAgICAgIG1hcmdpbi10b3A6IDUuNTVyZW07IH0gfVxcbiAgLmZvb3RlciBoMiB7XFxuICAgIGZvbnQtc2l6ZTogMS42cmVtOyB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xcbiAgICAgIC5mb290ZXIgaDIge1xcbiAgICAgICAgZm9udC1zaXplOiAxLjNyZW07IH0gfVxcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcXG4gICAgICAuZm9vdGVyIGgyIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfSB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xcbiAgICAgIC5mb290ZXIgaDIge1xcbiAgICAgICAgZm9udC1zaXplOiAuOHJlbTsgfSB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNDBweCkge1xcbiAgICAgIC5mb290ZXIgaDIge1xcbiAgICAgICAgZm9udC1zaXplOiAuNnJlbTsgfSB9XFxuICAuZm9vdGVyIGEge1xcbiAgICBjb2xvcjogd2hpdGU7IH1cXG4gIC5mb290ZXIgLnNvY2lhbFJvdyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kOyB9XFxuICAgIC5mb290ZXIgLnNvY2lhbFJvdyAuc29jaWFsIDpsYXN0LWNoaWxkIHtcXG4gICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07IH1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiZm9vdGVyXCI6IFwiZm9vdGVyXzFjRlZZR3lybjY1US16NEIyYmhyU0JcIixcblx0XCJzb2NpYWxSb3dcIjogXCJzb2NpYWxSb3dfM1VVNkhoMzhIM3Z2LWtBNDQxNkpWRFwiLFxuXHRcInNvY2lhbFwiOiBcInNvY2lhbF8ya19jR0JkUlp2TElWVmE1MTFTcmdJXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4X2J6ZEV1T0tCLV95ejVOUFFDaFVXeiwgLmJyZWFkY3J1bWJzXzJkZEdpeU1Dd3U1dnc2OEM3R1lMNEMsIC5jcnVtYmxlc18xOXA5YzhvTF9CY2R3clY5ZzY2SlQ0IHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sX0xSbnM1QmlZVmhGZk11UjMzU0xYSSB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvd18yUDVONEhsYVM4QnpEZEhhN2lkSjdTLCAuY3J1bWJsZXNfMTlwOWM4b0xfQmNkd3JWOWc2NkpUNCB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuLmJyZWFkY3J1bWJzXzJkZEdpeU1Dd3U1dnc2OEM3R1lMNEMge1xcbiAgd2lkdGg6IDEwMCU7IH1cXG5cXG4uY3J1bWJsZXNfMTlwOWM4b0xfQmNkd3JWOWc2NkpUNCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxcblxcbi5jcnVtYmxlXzFwb1ZLREhIdDJSRnF4Zm1QOExYbmQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7IH1cXG4gIC5jcnVtYmxlXzFwb1ZLREhIdDJSRnF4Zm1QOExYbmQgaDEge1xcbiAgICBwYWRkaW5nOiAxcmVtOyB9XFxuICAuY3J1bWJsZV8xcG9WS0RISHQyUkZxeGZtUDhMWG5kIDpob3ZlciwgLmNydW1ibGVfMXBvVktESEh0MlJGcXhmbVA4TFhuZCA6OmJlZm9yZSwgLmNydW1ibGVfMXBvVktESEh0MlJGcXhmbVA4TFhuZCA6OmFmdGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTVlNztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiAyJTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb24vRGVza3RvcC9wcm9wcm9qZWN0cy9hbXlzaXRlL2NsaWVudC9zcmMvY29tcG9uZW50cy9uYXZpZ2F0aW9uL2JyZWFkY3J1bWJzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjLEVBQUU7O0FBRWxCO0VBQ0UsdUJBQXVCLEVBQUU7O0FBRTNCO0VBQ0Usb0JBQW9CLEVBQUU7O0FBRXhCO0VBQ0UsWUFBWSxFQUFFOztBQUVoQjtFQUNFLFlBQVk7RUFDWiwrQkFBK0IsRUFBRTs7QUFFbkM7RUFDRSxZQUFZO0VBQ1osbUJBQW1CLEVBQUU7RUFDckI7SUFDRSxjQUFjLEVBQUU7RUFDbEI7SUFDRSwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLGtCQUFrQixFQUFFXCIsXCJmaWxlXCI6XCJicmVhZGNydW1icy5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mbGV4LCAuYnJlYWRjcnVtYnMsIC5jcnVtYmxlcyB7XFxuICBkaXNwbGF5OiBmbGV4OyB9XFxuXFxuLmNvbCB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvdywgLmNydW1ibGVzIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cXG5cXG4uYnJlYWRjcnVtYnMge1xcbiAgd2lkdGg6IDEwMCU7IH1cXG5cXG4uY3J1bWJsZXMge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cXG5cXG4uY3J1bWJsZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjsgfVxcbiAgLmNydW1ibGUgaDEge1xcbiAgICBwYWRkaW5nOiAxcmVtOyB9XFxuICAuY3J1bWJsZSA6aG92ZXIsIC5jcnVtYmxlIDo6YmVmb3JlLCAuY3J1bWJsZSA6OmFmdGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTVlNztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiAyJTsgfVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJmbGV4XCI6IFwiZmxleF9iemRFdU9LQi1feXo1TlBRQ2hVV3pcIixcblx0XCJicmVhZGNydW1ic1wiOiBcImJyZWFkY3J1bWJzXzJkZEdpeU1Dd3U1dnc2OEM3R1lMNENcIixcblx0XCJjcnVtYmxlc1wiOiBcImNydW1ibGVzXzE5cDljOG9MX0JjZHdyVjlnNjZKVDRcIixcblx0XCJjb2xcIjogXCJjb2xfTFJuczVCaVlWaEZmTXVSMzNTTFhJXCIsXG5cdFwicm93XCI6IFwicm93XzJQNU40SGxhUzhCekRkSGE3aWRKN1NcIixcblx0XCJjcnVtYmxlXCI6IFwiY3J1bWJsZV8xcG9WS0RISHQyUkZxeGZtUDhMWG5kXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4XzNMT2txZHJuOEl6TVdQYjJXWkgzcW8sIC5uYXZpZ2F0aW9uQ29udGFpbmVyXzN2ZDd2OHZaczYwcjNDV3BxR1RfZ3YsIC5uYXZMaXN0XzVpR1lIU0xHY3A3ZkFjU19EcFE0bywgLm5hdkxpc3RNb2JpbGVfU2NCX2Z0bGdRME1vYkNybVVMRUFlIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sXzFsZVlGSUN1WHh3WlY3alMyN3ZsWEkge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3dfZ3BRZlFfLXJQNkg3Qzd0NmxabmN3LCAubmF2TGlzdF81aUdZSFNMR2NwN2ZBY1NfRHBRNG8sIC5uYXZMaXN0TW9iaWxlX1NjQl9mdGxnUTBNb2JDcm1VTEVBZSB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuLm5hdmlnYXRpb25Db250YWluZXJfM3ZkN3Y4dlpzNjByM0NXcHFHVF9ndiB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgfVxcbiAgQG1lZGlhIChtaW4td2lkdGg6IDE5MTlweCkge1xcbiAgICAubmF2aWdhdGlvbkNvbnRhaW5lcl8zdmQ3djh2WnM2MHIzQ1dwcUdUX2d2IHtcXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgICAvKiBJRSBFREdFIEZJWCAqLyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHtcXG4gICAgLm5hdmlnYXRpb25Db250YWluZXJfM3ZkN3Y4dlpzNjByM0NXcHFHVF9ndiB7XFxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgICAgLyogSUUgRURHRSBGSVggKi8gfSB9XFxuXFxuLm5hdkNvcHlfM2JnNVdBN2YyVnVSYjZncU1leVZ3eiB7XFxuICBmb250LXNpemU6IDJyZW07XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XFxuXFxuLm5hdkxpc3RfNWlHWUhTTEdjcDdmQWNTX0RwUTRvLCAubmF2TGlzdE1vYmlsZV9TY0JfZnRsZ1EwTW9iQ3JtVUxFQWUge1xcbiAgZm9udC1zaXplOiAxLjRyZW07XFxuICBjb2xvcjogIzAwOTVlNztcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxcblxcbi5uYXZMaXN0TW9iaWxlX1NjQl9mdGxnUTBNb2JDcm1VTEVBZSB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xcbiAgei1pbmRleDogMjtcXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xcbiAgbGluZS1oZWlnaHQ6IDEuNjsgfVxcblxcbi5uYXZMaXN0SXRlbV8zSXRZMDltRmhHclJKVzRPX2hadzhZIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cXG4gIC5uYXZMaXN0SXRlbV8zSXRZMDltRmhHclJKVzRPX2hadzhZOm50aC1jaGlsZCgyKSB7XFxuICAgIG1hcmdpbjogMCA0LjVyZW07IH1cXG4gIC5uYXZMaXN0SXRlbV8zSXRZMDltRmhHclJKVzRPX2hadzhZOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgIGNvbG9yOiAjMDA5NWU3OyB9XFxuICAgIC5uYXZMaXN0SXRlbV8zSXRZMDltRmhHclJKVzRPX2hadzhZOmhvdmVyIDp2aXNpdGVkIHtcXG4gICAgICBjb2xvcjogIzAwOTVlNzsgfVxcblxcbi5hcnJvd1VwX2lzQlRzM05LS1lLb1dhS3VJT295UiwgLmFycm93VXAxX2ZnY1lHWkdPQnFfY3Y4NFMzeUZTZSB7XFxuICB3aWR0aDogMDtcXG4gIGhlaWdodDogMDtcXG4gIGJvcmRlci1sZWZ0OiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyLXJpZ2h0OiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyLWJvdHRvbTogMTVweCBzb2xpZCBsaWdodGNvcmFsOyB9XFxuXFxuLmFycm93VXAxX2ZnY1lHWkdPQnFfY3Y4NFMzeUZTZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAwMDk1ZTc7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiQzovVXNlcnMvUm9uL0Rlc2t0b3AvcHJvcHJvamVjdHMvYW15c2l0ZS9jbGllbnQvc3JjL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjLEVBQUU7O0FBRWxCO0VBQ0UsdUJBQXVCLEVBQUU7O0FBRTNCO0VBQ0Usb0JBQW9CLEVBQUU7O0FBRXhCO0VBQ0UsOEJBQThCLEVBQUU7RUFDaEM7SUFDRTtNQUNFLDhCQUE4QjtNQUM5QixpQkFBaUIsRUFBRSxFQUFFO0VBQ3pCO0lBQ0U7TUFDRSw4QkFBOEI7TUFDOUIsaUJBQWlCLEVBQUUsRUFBRTs7QUFFM0I7RUFDRSxnQkFBZ0I7RUFDaEIsMEJBQTBCLEVBQUU7O0FBRTlCO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixzQkFBc0IsRUFBRTs7QUFFMUI7RUFDRSx1QkFBdUI7RUFDdkIsc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsaUJBQWlCLEVBQUU7O0FBRXJCO0VBQ0UsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixhQUFhO0VBQ2Isd0JBQXdCLEVBQUU7RUFDMUI7SUFDRSxpQkFBaUIsRUFBRTtFQUNyQjtJQUNFLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZUFBZSxFQUFFO0lBQ2pCO01BQ0UsZUFBZSxFQUFFOztBQUV2QjtFQUNFLFNBQVM7RUFDVCxVQUFVO0VBQ1Ysb0NBQW9DO0VBQ3BDLHFDQUFxQztFQUNyQyxxQ0FBcUMsRUFBRTs7QUFFekM7RUFDRSx5QkFBeUIsRUFBRVwiLFwiZmlsZVwiOlwibmF2aWdhdGlvbi5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mbGV4LCAubmF2aWdhdGlvbkNvbnRhaW5lciwgLm5hdkxpc3QsIC5uYXZMaXN0TW9iaWxlIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cXG5cXG4ucm93LCAubmF2TGlzdCwgLm5hdkxpc3RNb2JpbGUge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbi5uYXZpZ2F0aW9uQ29udGFpbmVyIHtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOyB9XFxuICBAbWVkaWEgKG1pbi13aWR0aDogMTkxOXB4KSB7XFxuICAgIC5uYXZpZ2F0aW9uQ29udGFpbmVyIHtcXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgICAvKiBJRSBFREdFIEZJWCAqLyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHtcXG4gICAgLm5hdmlnYXRpb25Db250YWluZXIge1xcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICAgIC8qIElFIEVER0UgRklYICovIH0gfVxcblxcbi5uYXZDb3B5IHtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cXG5cXG4ubmF2TGlzdCwgLm5hdkxpc3RNb2JpbGUge1xcbiAgZm9udC1zaXplOiAxLjRyZW07XFxuICBjb2xvcjogIzAwOTVlNztcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxcblxcbi5uYXZMaXN0TW9iaWxlIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XFxuICB6LWluZGV4OiAyO1xcbiAgZm9udC1zaXplOiAxLjhyZW07XFxuICBsaW5lLWhlaWdodDogMS42OyB9XFxuXFxuLm5hdkxpc3RJdGVtIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cXG4gIC5uYXZMaXN0SXRlbTpudGgtY2hpbGQoMikge1xcbiAgICBtYXJnaW46IDAgNC41cmVtOyB9XFxuICAubmF2TGlzdEl0ZW06aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gICAgY29sb3I6ICMwMDk1ZTc7IH1cXG4gICAgLm5hdkxpc3RJdGVtOmhvdmVyIDp2aXNpdGVkIHtcXG4gICAgICBjb2xvcjogIzAwOTVlNzsgfVxcblxcbi5hcnJvd1VwLCAuYXJyb3dVcDEge1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICBib3JkZXItbGVmdDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1yaWdodDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1ib3R0b206IDE1cHggc29saWQgbGlnaHRjb3JhbDsgfVxcblxcbi5hcnJvd1VwMSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAwMDk1ZTc7IH1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiZmxleFwiOiBcImZsZXhfM0xPa3Fkcm44SXpNV1BiMldaSDNxb1wiLFxuXHRcIm5hdmlnYXRpb25Db250YWluZXJcIjogXCJuYXZpZ2F0aW9uQ29udGFpbmVyXzN2ZDd2OHZaczYwcjNDV3BxR1RfZ3ZcIixcblx0XCJuYXZMaXN0XCI6IFwibmF2TGlzdF81aUdZSFNMR2NwN2ZBY1NfRHBRNG9cIixcblx0XCJuYXZMaXN0TW9iaWxlXCI6IFwibmF2TGlzdE1vYmlsZV9TY0JfZnRsZ1EwTW9iQ3JtVUxFQWVcIixcblx0XCJjb2xcIjogXCJjb2xfMWxlWUZJQ3VYeHdaVjdqUzI3dmxYSVwiLFxuXHRcInJvd1wiOiBcInJvd19ncFFmUV8tclA2SDdDN3Q2bFpuY3dcIixcblx0XCJuYXZDb3B5XCI6IFwibmF2Q29weV8zYmc1V0E3ZjJWdVJiNmdxTWV5Vnd6XCIsXG5cdFwibmF2TGlzdEl0ZW1cIjogXCJuYXZMaXN0SXRlbV8zSXRZMDltRmhHclJKVzRPX2hadzhZXCIsXG5cdFwiYXJyb3dVcFwiOiBcImFycm93VXBfaXNCVHMzTktLWUtvV2FLdUlPb3lSXCIsXG5cdFwiYXJyb3dVcDFcIjogXCJhcnJvd1VwMV9mZ2NZR1pHT0JxX2N2ODRTM3lGU2VcIlxufTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmFib3V0Q29udGFpbmVyX0VZZ0doa0htOUdQZFROT19rc202OCB7XFxuICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XFxuICBtYXJnaW46IDJyZW0gYXV0byAwIGF1dG87XFxuICBkaXNwbGF5OiBmbGV4OyB9XFxuXFxuLmFib3V0Q29udGVudF8xMDBLcG1aSGhTaVNLbkpyMC12YlZHIHtcXG4gIG1hcmdpbi10b3A6IDJyZW07IH1cXG5cXG4uYmx1cmJfMlNPNFRLdlVzSC1OY083QjkyLUpmbyB7XFxuICBmb250LXNpemU6IDEuN3JlbTtcXG4gIG1hcmdpbjogMCA3cmVtOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcXG4gICAgLmJsdXJiXzJTTzRUS3ZVc0gtTmNPN0I5Mi1KZm8ge1xcbiAgICAgIG1hcmdpbjogMCA1cmVtOyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmx1cmJfMlNPNFRLdlVzSC1OY083QjkyLUpmbyB7XFxuICAgICAgbWFyZ2luOiAwIDJyZW07IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQyNXB4KSB7XFxuICAgIC5ibHVyYl8yU080VEt2VXNILU5jTzdCOTItSmZvIHtcXG4gICAgICBtYXJnaW46IDAgLjVyZW07IH0gfVxcblxcbi5oZWFkZXJfM2R4anVoelVDNmZ3dk1pWTFVamJabCB7XFxuICBjb2xvcjogI2U0OTA1YjtcXG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogN3JlbTtcXG4gIG1hcmdpbi1ib3R0b206IDNyZW07IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuaGVhZGVyXzNkeGp1aHpVQzZmd3ZNaVkxVWpiWmwge1xcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07IH0gfVxcblxcbi5zb2NpYWxSb3dfMlJGTXpZNWJEX1FEcDdZZWVpVGE2bCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiA1cmVtIDA7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuc29jaWFsUm93XzJSRk16WTViRF9RRHA3WWVlaVRhNmwge1xcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxcblxcbi5zb2NpYWxfMWpFZHIzSUNDLTJLUUdpV2VwM0c5ZCB7XFxuICBmb250LXNpemU6IDNyZW07IH1cXG4gIC5zb2NpYWxfMWpFZHIzSUNDLTJLUUdpV2VwM0c5ZCBpIHtcXG4gICAgY29sb3I6ICMwMDk1ZTc7XFxuICAgIHBhZGRpbmc6IDFyZW07IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuc29jaWFsXzFqRWRyM0lDQy0yS1FHaVdlcDNHOWQge1xcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkM6L1VzZXJzL1Jvbi9EZXNrdG9wL3Byb3Byb2plY3RzL2FteXNpdGUvY2xpZW50L3NyYy92aWV3cy9hYm91dC9hYm91dC5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsY0FBYyxFQUFFOztBQUVsQjtFQUNFLGlCQUFpQixFQUFFOztBQUVyQjtFQUNFLGtCQUFrQjtFQUNsQixlQUFlLEVBQUU7RUFDakI7SUFDRTtNQUNFLGVBQWUsRUFBRSxFQUFFO0VBQ3ZCO0lBQ0U7TUFDRSxlQUFlLEVBQUUsRUFBRTtFQUN2QjtJQUNFO01BQ0UsZ0JBQWdCLEVBQUUsRUFBRTs7QUFFMUI7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsb0JBQW9CLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGlCQUFpQixFQUFFLEVBQUU7O0FBRTNCO0VBQ0UsY0FBYztFQUNkLG9CQUFvQjtFQUNwQix3QkFBd0I7RUFDeEIsZUFBZSxFQUFFO0VBQ2pCO0lBQ0U7TUFDRSx1QkFBdUIsRUFBRSxFQUFFOztBQUVqQztFQUNFLGdCQUFnQixFQUFFO0VBQ2xCO0lBQ0UsZUFBZTtJQUNmLGNBQWMsRUFBRTtFQUNsQjtJQUNFO01BQ0UsbUJBQW1CLEVBQUUsRUFBRVwiLFwiZmlsZVwiOlwiYWJvdXQuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYWJvdXRDb250YWluZXIge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvO1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5hYm91dENvbnRlbnQge1xcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxcblxcbi5ibHVyYiB7XFxuICBmb250LXNpemU6IDEuN3JlbTtcXG4gIG1hcmdpbjogMCA3cmVtOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcXG4gICAgLmJsdXJiIHtcXG4gICAgICBtYXJnaW46IDAgNXJlbTsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmJsdXJiIHtcXG4gICAgICBtYXJnaW46IDAgMnJlbTsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNDI1cHgpIHtcXG4gICAgLmJsdXJiIHtcXG4gICAgICBtYXJnaW46IDAgLjVyZW07IH0gfVxcblxcbi5oZWFkZXIge1xcbiAgY29sb3I6ICNlNDkwNWI7XFxuICBmb250LXNpemU6IDMuMnJlbTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDdyZW07XFxuICBtYXJnaW4tYm90dG9tOiAzcmVtOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmhlYWRlciB7XFxuICAgICAgbWFyZ2luLXRvcDogMnJlbTsgfSB9XFxuXFxuLnNvY2lhbFJvdyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiA1cmVtIDA7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuc29jaWFsUm93IHtcXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cXG5cXG4uc29jaWFsIHtcXG4gIGZvbnQtc2l6ZTogM3JlbTsgfVxcbiAgLnNvY2lhbCBpIHtcXG4gICAgY29sb3I6ICMwMDk1ZTc7XFxuICAgIHBhZGRpbmc6IDFyZW07IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuc29jaWFsIHtcXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJhYm91dENvbnRhaW5lclwiOiBcImFib3V0Q29udGFpbmVyX0VZZ0doa0htOUdQZFROT19rc202OFwiLFxuXHRcImFib3V0Q29udGVudFwiOiBcImFib3V0Q29udGVudF8xMDBLcG1aSGhTaVNLbkpyMC12YlZHXCIsXG5cdFwiYmx1cmJcIjogXCJibHVyYl8yU080VEt2VXNILU5jTzdCOTItSmZvXCIsXG5cdFwiaGVhZGVyXCI6IFwiaGVhZGVyXzNkeGp1aHpVQzZmd3ZNaVkxVWpiWmxcIixcblx0XCJzb2NpYWxSb3dcIjogXCJzb2NpYWxSb3dfMlJGTXpZNWJEX1FEcDdZZWVpVGE2bFwiLFxuXHRcInNvY2lhbFwiOiBcInNvY2lhbF8xakVkcjNJQ0MtMktRR2lXZXAzRzlkXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4XzIwLVk0d01zOE5Ob3pkZGxjbk85SGsge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2xfM2VnZXZVaFlfeHNDY1NvRUs4NXJ0OSB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvd18xeDM0MGw5b0dpZHljeWdKb3NWZGtNIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cXG5cXG5Aa2V5ZnJhbWVzIGZhZGVpbl8zLXdsUkRTOUUzQ2dOYk9GTzFXbjliIHtcXG4gIGZyb20ge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuICB0byB7XFxuICAgIG9wYWNpdHk6IDE7IH0gfVxcblxcbi5jYXJpYm91Q29udGFpbmVyXzM1RU16N3d3b3NFTjlmTUtlTXJ6SUsge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvOyB9XFxuXFxuLmNvbnRlbnRCbG9ja18xU3pnQ3hxZW5GNkRQWkJpRjJRMjREIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxcblxcbi52aWRlb19NU2dNY0Y2TTNkdlpPZmZiT1dCQ18ge1xcbiAgd2lkdGg6IDgwMHB4O1xcbiAgaGVpZ2h0OiA2MDBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc5OXB4KSB7XFxuICAgIC52aWRlb19NU2dNY0Y2TTNkdlpPZmZiT1dCQ18ge1xcbiAgICAgIHdpZHRoOiA2MDBweDtcXG4gICAgICBoZWlnaHQ6IDQwMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAudmlkZW9fTVNnTWNGNk0zZHZaT2ZmYk9XQkNfIHtcXG4gICAgICB3aWR0aDogNDAwcHg7XFxuICAgICAgaGVpZ2h0OiAyMDBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNDI1cHgpIHtcXG4gICAgLnZpZGVvX01TZ01jRjZNM2R2Wk9mZmJPV0JDXyB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMjAwcHg7IH0gfVxcblxcbi5jYXJpYm91QmFubmVyX19JMVB5T1hmc3VKemp5R2dmZHNUNixcXG4uY2FyaWJvdUltYWdlXzNUdkhBYkJZM3ZfaDIwRVZCa1ItT2QsXFxuLmNhcmlib3VJbWFnZTFfM2F6Q0hxZEZhaDN6UlBxRTJ4SnJiMSxcXG4uY2FyaWJvdUltYWdlMl8yOWt4ZUJ5THVBYVNsMkNDLUJWQW90LFxcbi5jYXJpYm91U2l0ZV8yU09LS3NoWlhvMHp0Tl8yakM1eTFTIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIG1hcmdpbjogNHJlbSAwO1xcbiAgYW5pbWF0aW9uOiBmYWRlaW5fMy13bFJEUzlFM0NnTmJPRk8xV245YiAyczsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5jYXJpYm91QmFubmVyX19JMVB5T1hmc3VKemp5R2dmZHNUNixcXG4gICAgLmNhcmlib3VJbWFnZV8zVHZIQWJCWTN2X2gyMEVWQmtSLU9kLFxcbiAgICAuY2FyaWJvdUltYWdlMV8zYXpDSHFkRmFoM3pSUHFFMnhKcmIxLFxcbiAgICAuY2FyaWJvdUltYWdlMl8yOWt4ZUJ5THVBYVNsMkNDLUJWQW90LFxcbiAgICAuY2FyaWJvdVNpdGVfMlNPS0tzaFpYbzB6dE5fMmpDNXkxUyB7XFxuICAgICAgbWFyZ2luOiAycmVtIDA7IH0gfVxcblxcbi5jYXJpYm91QmFubmVyX19JMVB5T1hmc3VKemp5R2dmZHNUNiB7XFxuICB3aWR0aDogMzgwcHg7XFxuICBoZWlnaHQ6IDE2MHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmNhcmlib3VCYW5uZXJfX0kxUHlPWGZzdUp6anlHZ2Zkc1Q2IHtcXG4gICAgICB3aWR0aDogMjUwcHg7XFxuICAgICAgaGVpZ2h0OiAxMDBweDsgfSB9XFxuXFxuLmNhcmlib3VJbWFnZV8zVHZIQWJCWTN2X2gyMEVWQmtSLU9kIHtcXG4gIHdpZHRoOiA5MDBweDtcXG4gIGhlaWdodDogODAwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5MDFweCkge1xcbiAgICAuY2FyaWJvdUltYWdlXzNUdkhBYkJZM3ZfaDIwRVZCa1ItT2Qge1xcbiAgICAgIHdpZHRoOiA1MDBweDtcXG4gICAgICBoZWlnaHQ6IDQ0NXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuY2FyaWJvdUltYWdlXzNUdkhBYkJZM3ZfaDIwRVZCa1ItT2Qge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDI2MHB4OyB9IH1cXG5cXG4uY2FyaWJvdUltYWdlMV8zYXpDSHFkRmFoM3pSUHFFMnhKcmIxIHtcXG4gIHdpZHRoOiA5MDBweDtcXG4gIGhlaWdodDogMzYwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5MDFweCkge1xcbiAgICAuY2FyaWJvdUltYWdlMV8zYXpDSHFkRmFoM3pSUHFFMnhKcmIxIHtcXG4gICAgICB3aWR0aDogNTAwcHg7XFxuICAgICAgaGVpZ2h0OiAyMDBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmNhcmlib3VJbWFnZTFfM2F6Q0hxZEZhaDN6UlBxRTJ4SnJiMSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTIwcHg7IH0gfVxcblxcbi5jYXJpYm91SW1hZ2UyXzI5a3hlQnlMdUFhU2wyQ0MtQlZBb3Qge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA4NTBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC5jYXJpYm91SW1hZ2UyXzI5a3hlQnlMdUFhU2wyQ0MtQlZBb3Qge1xcbiAgICAgIHdpZHRoOiA1MDBweDtcXG4gICAgICBoZWlnaHQ6IDIwMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuY2FyaWJvdUltYWdlMl8yOWt4ZUJ5THVBYVNsMkNDLUJWQW90IHtcXG4gICAgICB3aWR0aDogMzAwcHg7XFxuICAgICAgaGVpZ2h0OiAyODBweDsgfSB9XFxuXFxuLmNhcmlib3VTaXRlXzJTT0tLc2haWG8wenROXzJqQzV5MVMge1xcbiAgd2lkdGg6IDExMDBweDtcXG4gIGhlaWdodDogNjAwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcXG4gICAgLmNhcmlib3VTaXRlXzJTT0tLc2haWG8wenROXzJqQzV5MVMge1xcbiAgICAgIHdpZHRoOiA3MDBweDtcXG4gICAgICBoZWlnaHQ6IDM4MHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuY2FyaWJvdVNpdGVfMlNPS0tzaFpYbzB6dE5fMmpDNXkxUyB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTYwcHg7IH0gfVxcblxcbi5ibHVyYl8xQXp1SXRUejhwV1JDZDItUWZWaWhPIHtcXG4gIGZvbnQtc2l6ZTogMi4xMjVyZW07XFxuICBtYXJnaW46IDhyZW0gNXJlbTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5ibHVyYl8xQXp1SXRUejhwV1JDZDItUWZWaWhPIHtcXG4gICAgICBmb250LXNpemU6IDEuMjI1cmVtO1xcbiAgICAgIG1hcmdpbjogNXJlbSA1cmVtOyB9IH1cXG5cXG4uY2FyaWJvdUxpbmtfMWU5SHV5d2czR1J6OE81YkE2Q05GcyB7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBjb2xvcjogIzAwOTVlNzsgfVxcbiAgLmNhcmlib3VMaW5rXzFlOUh1eXdnM0dSejhPNWJBNkNORnM6dmlzaXRlZCB7XFxuICAgIGNvbG9yOiAjMDA5NWU3OyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkM6L1VzZXJzL1Jvbi9EZXNrdG9wL3Byb3Byb2plY3RzL2FteXNpdGUvY2xpZW50L3NyYy92aWV3cy9jYW1wYWlnbnMvY2FyaWJvdS9jYXJpYm91LnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjLEVBQUU7O0FBRWxCO0VBQ0UsdUJBQXVCLEVBQUU7O0FBRTNCO0VBQ0Usb0JBQW9CLEVBQUU7O0FBRXhCO0VBQ0U7SUFDRSxXQUFXLEVBQUU7RUFDZjtJQUNFLFdBQVcsRUFBRSxFQUFFOztBQUVuQjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIseUJBQXlCLEVBQUU7O0FBRTdCO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsaUJBQWlCLEVBQUU7O0FBRXJCO0VBQ0UsYUFBYTtFQUNiLGNBQWM7RUFDZCxtQkFBbUIsRUFBRTtFQUNyQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7Ozs7O0VBS0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiw0Q0FBcUIsRUFBRTtFQUN2QjtJQUNFOzs7OztNQUtFLGVBQWUsRUFBRSxFQUFFOztBQUV6QjtFQUNFLGFBQWE7RUFDYixjQUFjLEVBQUU7RUFDaEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSxhQUFhO0VBQ2IsY0FBYyxFQUFFO0VBQ2hCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSxhQUFhO0VBQ2IsY0FBYyxFQUFFO0VBQ2hCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSxhQUFhO0VBQ2IsY0FBYyxFQUFFO0VBQ2hCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSxjQUFjO0VBQ2QsY0FBYyxFQUFFO0VBQ2hCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7RUFDdEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTs7QUFFeEI7RUFDRSxvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLG1CQUFtQixFQUFFO0VBQ3JCO0lBQ0U7TUFDRSxvQkFBb0I7TUFDcEIsa0JBQWtCLEVBQUUsRUFBRTs7QUFFNUI7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZSxFQUFFO0VBQ2pCO0lBQ0UsZUFBZSxFQUFFXCIsXCJmaWxlXCI6XCJjYXJpYm91LnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZsZXgge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2wge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbkBrZXlmcmFtZXMgZmFkZWluIHtcXG4gIGZyb20ge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuICB0byB7XFxuICAgIG9wYWNpdHk6IDE7IH0gfVxcblxcbi5jYXJpYm91Q29udGFpbmVyIHtcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxuICBtYXgtd2lkdGg6IDEyMDBweDtcXG4gIG1hcmdpbjogMnJlbSBhdXRvIDAgYXV0bzsgfVxcblxcbi5jb250ZW50QmxvY2sge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBtYXJnaW4tdG9wOiAycmVtOyB9XFxuXFxuLnZpZGVvIHtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIGhlaWdodDogNjAwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3OTlweCkge1xcbiAgICAudmlkZW8ge1xcbiAgICAgIHdpZHRoOiA2MDBweDtcXG4gICAgICBoZWlnaHQ6IDQwMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAudmlkZW8ge1xcbiAgICAgIHdpZHRoOiA0MDBweDtcXG4gICAgICBoZWlnaHQ6IDIwMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0MjVweCkge1xcbiAgICAudmlkZW8ge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDIwMHB4OyB9IH1cXG5cXG4uY2FyaWJvdUJhbm5lcixcXG4uY2FyaWJvdUltYWdlLFxcbi5jYXJpYm91SW1hZ2UxLFxcbi5jYXJpYm91SW1hZ2UyLFxcbi5jYXJpYm91U2l0ZSB7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICBtYXJnaW46IDRyZW0gMDtcXG4gIGFuaW1hdGlvbjogZmFkZWluIDJzOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmNhcmlib3VCYW5uZXIsXFxuICAgIC5jYXJpYm91SW1hZ2UsXFxuICAgIC5jYXJpYm91SW1hZ2UxLFxcbiAgICAuY2FyaWJvdUltYWdlMixcXG4gICAgLmNhcmlib3VTaXRlIHtcXG4gICAgICBtYXJnaW46IDJyZW0gMDsgfSB9XFxuXFxuLmNhcmlib3VCYW5uZXIge1xcbiAgd2lkdGg6IDM4MHB4O1xcbiAgaGVpZ2h0OiAxNjBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5jYXJpYm91QmFubmVyIHtcXG4gICAgICB3aWR0aDogMjUwcHg7XFxuICAgICAgaGVpZ2h0OiAxMDBweDsgfSB9XFxuXFxuLmNhcmlib3VJbWFnZSB7XFxuICB3aWR0aDogOTAwcHg7XFxuICBoZWlnaHQ6IDgwMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogOTAxcHgpIHtcXG4gICAgLmNhcmlib3VJbWFnZSB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNDQ1cHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5jYXJpYm91SW1hZ2Uge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDI2MHB4OyB9IH1cXG5cXG4uY2FyaWJvdUltYWdlMSB7XFxuICB3aWR0aDogOTAwcHg7XFxuICBoZWlnaHQ6IDM2MHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogOTAxcHgpIHtcXG4gICAgLmNhcmlib3VJbWFnZTEge1xcbiAgICAgIHdpZHRoOiA1MDBweDtcXG4gICAgICBoZWlnaHQ6IDIwMHB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuY2FyaWJvdUltYWdlMSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTIwcHg7IH0gfVxcblxcbi5jYXJpYm91SW1hZ2UyIHtcXG4gIHdpZHRoOiA5MDBweDtcXG4gIGhlaWdodDogODUwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5MDBweCkge1xcbiAgICAuY2FyaWJvdUltYWdlMiB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogMjAwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5jYXJpYm91SW1hZ2UyIHtcXG4gICAgICB3aWR0aDogMzAwcHg7XFxuICAgICAgaGVpZ2h0OiAyODBweDsgfSB9XFxuXFxuLmNhcmlib3VTaXRlIHtcXG4gIHdpZHRoOiAxMTAwcHg7XFxuICBoZWlnaHQ6IDYwMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XFxuICAgIC5jYXJpYm91U2l0ZSB7XFxuICAgICAgd2lkdGg6IDcwMHB4O1xcbiAgICAgIGhlaWdodDogMzgwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5jYXJpYm91U2l0ZSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTYwcHg7IH0gfVxcblxcbi5ibHVyYiB7XFxuICBmb250LXNpemU6IDIuMTI1cmVtO1xcbiAgbWFyZ2luOiA4cmVtIDVyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmx1cmIge1xcbiAgICAgIGZvbnQtc2l6ZTogMS4yMjVyZW07XFxuICAgICAgbWFyZ2luOiA1cmVtIDVyZW07IH0gfVxcblxcbi5jYXJpYm91TGluayB7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBjb2xvcjogIzAwOTVlNzsgfVxcbiAgLmNhcmlib3VMaW5rOnZpc2l0ZWQge1xcbiAgICBjb2xvcjogIzAwOTVlNzsgfVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJmbGV4XCI6IFwiZmxleF8yMC1ZNHdNczhOTm96ZGRsY25POUhrXCIsXG5cdFwiY29sXCI6IFwiY29sXzNlZ2V2VWhZX3hzQ2NTb0VLODVydDlcIixcblx0XCJyb3dcIjogXCJyb3dfMXgzNDBsOW9HaWR5Y3lnSm9zVmRrTVwiLFxuXHRcImNhcmlib3VDb250YWluZXJcIjogXCJjYXJpYm91Q29udGFpbmVyXzM1RU16N3d3b3NFTjlmTUtlTXJ6SUtcIixcblx0XCJjb250ZW50QmxvY2tcIjogXCJjb250ZW50QmxvY2tfMVN6Z0N4cWVuRjZEUFpCaUYyUTI0RFwiLFxuXHRcInZpZGVvXCI6IFwidmlkZW9fTVNnTWNGNk0zZHZaT2ZmYk9XQkNfXCIsXG5cdFwiY2FyaWJvdUJhbm5lclwiOiBcImNhcmlib3VCYW5uZXJfX0kxUHlPWGZzdUp6anlHZ2Zkc1Q2XCIsXG5cdFwiY2FyaWJvdUltYWdlXCI6IFwiY2FyaWJvdUltYWdlXzNUdkhBYkJZM3ZfaDIwRVZCa1ItT2RcIixcblx0XCJjYXJpYm91SW1hZ2UxXCI6IFwiY2FyaWJvdUltYWdlMV8zYXpDSHFkRmFoM3pSUHFFMnhKcmIxXCIsXG5cdFwiY2FyaWJvdUltYWdlMlwiOiBcImNhcmlib3VJbWFnZTJfMjlreGVCeUx1QWFTbDJDQy1CVkFvdFwiLFxuXHRcImNhcmlib3VTaXRlXCI6IFwiY2FyaWJvdVNpdGVfMlNPS0tzaFpYbzB6dE5fMmpDNXkxU1wiLFxuXHRcImZhZGVpblwiOiBcImZhZGVpbl8zLXdsUkRTOUUzQ2dOYk9GTzFXbjliXCIsXG5cdFwiYmx1cmJcIjogXCJibHVyYl8xQXp1SXRUejhwV1JDZDItUWZWaWhPXCIsXG5cdFwiY2FyaWJvdUxpbmtcIjogXCJjYXJpYm91TGlua18xZTlIdXl3ZzNHUno4TzViQTZDTkZzXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4XzNOaEpfeXplU1dpZjFzU0Zfb2hxcTgge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2xfMk5jQ2dPV09odzJZSmRjZE5LNXJmcSB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvd18zbXVPN0didlo4M3RtMzF2WC1nZG5hIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cXG5cXG5Aa2V5ZnJhbWVzIGZhZGVpbl8zclVTXzZrelA5VDZOWm9tNzBIN1JrIHtcXG4gIGZyb20ge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuICB0byB7XFxuICAgIG9wYWNpdHk6IDE7IH0gfVxcblxcbi5zaG9wdG9sb2d5Q29udGFpbmVyXzJNM3dGWWtEWFAwcTR1dDJWd2tDbDAge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvOyB9XFxuXFxuLmNvbnRlbnRCbG9ja19INnRIOWRPenBabnFVNVo2SlJXT24ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBtYXJnaW4tdG9wOiAycmVtOyB9XFxuXFxuLnNob3B0b2xvZ3lCYW5uZXJfM2xnRlZQaW1Pb3dtSTNXYlpHaFJPcSxcXG4uc2hvcHRvbG9neUltYWdlXzFXakdpdW5vWlRlTlM0R1lXZ0pSNnoge1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgbWFyZ2luOiA0cmVtIDA7XFxuICBhbmltYXRpb246IGZhZGVpbl8zclVTXzZrelA5VDZOWm9tNzBIN1JrIDJzOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnNob3B0b2xvZ3lCYW5uZXJfM2xnRlZQaW1Pb3dtSTNXYlpHaFJPcSxcXG4gICAgLnNob3B0b2xvZ3lJbWFnZV8xV2pHaXVub1pUZU5TNEdZV2dKUjZ6IHtcXG4gICAgICBtYXJnaW46IDJyZW0gMDsgfSB9XFxuXFxuLnNob3B0b2xvZ3lCYW5uZXJfM2xnRlZQaW1Pb3dtSTNXYlpHaFJPcSB7XFxuICB3aWR0aDogNjAwcHg7XFxuICBoZWlnaHQ6IDYwMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gICAgLnNob3B0b2xvZ3lCYW5uZXJfM2xnRlZQaW1Pb3dtSTNXYlpHaFJPcSB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNTAwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5zaG9wdG9sb2d5QmFubmVyXzNsZ0ZWUGltT293bUkzV2JaR2hST3Ege1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDMwMHB4OyB9IH1cXG5cXG4uc2hvcHRvbG9neUltYWdlXzFXakdpdW5vWlRlTlM0R1lXZ0pSNnoge1xcbiAgd2lkdGg6IDYwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC5zaG9wdG9sb2d5SW1hZ2VfMVdqR2l1bm9aVGVOUzRHWVdnSlI2eiB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNDE1cHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5zaG9wdG9sb2d5SW1hZ2VfMVdqR2l1bm9aVGVOUzRHWVdnSlI2eiB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMjUwcHg7IH0gfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb24vRGVza3RvcC9wcm9wcm9qZWN0cy9hbXlzaXRlL2NsaWVudC9zcmMvdmlld3MvY2FtcGFpZ25zL3Nob3B0b2xvZ3kvc2hvcHRvbG9neS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsY0FBYyxFQUFFOztBQUVsQjtFQUNFLHVCQUF1QixFQUFFOztBQUUzQjtFQUNFLG9CQUFvQixFQUFFOztBQUV4QjtFQUNFO0lBQ0UsV0FBVyxFQUFFO0VBQ2Y7SUFDRSxXQUFXLEVBQUUsRUFBRTs7QUFFbkI7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFFOztBQUU3QjtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLHdCQUF3QjtFQUN4QixzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGlCQUFpQixFQUFFOztBQUVyQjs7RUFFRSxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLDRDQUFxQixFQUFFO0VBQ3ZCO0lBQ0U7O01BRUUsZUFBZSxFQUFFLEVBQUU7O0FBRXpCO0VBQ0UsYUFBYTtFQUNiLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7O0FBRXhCO0VBQ0UsYUFBYTtFQUNiLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUVcIixcImZpbGVcIjpcInNob3B0b2xvZ3kuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZmxleCB7XFxuICBkaXNwbGF5OiBmbGV4OyB9XFxuXFxuLmNvbCB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvdyB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuQGtleWZyYW1lcyBmYWRlaW4ge1xcbiAgZnJvbSB7XFxuICAgIG9wYWNpdHk6IDA7IH1cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMTsgfSB9XFxuXFxuLnNob3B0b2xvZ3lDb250YWluZXIge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvOyB9XFxuXFxuLmNvbnRlbnRCbG9jayB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG1hcmdpbi10b3A6IDJyZW07IH1cXG5cXG4uc2hvcHRvbG9neUJhbm5lcixcXG4uc2hvcHRvbG9neUltYWdlIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIG1hcmdpbjogNHJlbSAwO1xcbiAgYW5pbWF0aW9uOiBmYWRlaW4gMnM7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuc2hvcHRvbG9neUJhbm5lcixcXG4gICAgLnNob3B0b2xvZ3lJbWFnZSB7XFxuICAgICAgbWFyZ2luOiAycmVtIDA7IH0gfVxcblxcbi5zaG9wdG9sb2d5QmFubmVyIHtcXG4gIHdpZHRoOiA2MDBweDtcXG4gIGhlaWdodDogNjAwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5MDBweCkge1xcbiAgICAuc2hvcHRvbG9neUJhbm5lciB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNTAwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5zaG9wdG9sb2d5QmFubmVyIHtcXG4gICAgICB3aWR0aDogMzAwcHg7XFxuICAgICAgaGVpZ2h0OiAzMDBweDsgfSB9XFxuXFxuLnNob3B0b2xvZ3lJbWFnZSB7XFxuICB3aWR0aDogNjAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gICAgLnNob3B0b2xvZ3lJbWFnZSB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNDE1cHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC5zaG9wdG9sb2d5SW1hZ2Uge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDI1MHB4OyB9IH1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiZmxleFwiOiBcImZsZXhfM05oSl95emVTV2lmMXNTRl9vaHFxOFwiLFxuXHRcImNvbFwiOiBcImNvbF8yTmNDZ09XT2h3MllKZGNkTks1cmZxXCIsXG5cdFwicm93XCI6IFwicm93XzNtdU83R2J2WjgzdG0zMXZYLWdkbmFcIixcblx0XCJzaG9wdG9sb2d5Q29udGFpbmVyXCI6IFwic2hvcHRvbG9neUNvbnRhaW5lcl8yTTN3RllrRFhQMHE0dXQyVndrQ2wwXCIsXG5cdFwiY29udGVudEJsb2NrXCI6IFwiY29udGVudEJsb2NrX0g2dEg5ZE96cFpucVU1WjZKUldPblwiLFxuXHRcInNob3B0b2xvZ3lCYW5uZXJcIjogXCJzaG9wdG9sb2d5QmFubmVyXzNsZ0ZWUGltT293bUkzV2JaR2hST3FcIixcblx0XCJzaG9wdG9sb2d5SW1hZ2VcIjogXCJzaG9wdG9sb2d5SW1hZ2VfMVdqR2l1bm9aVGVOUzRHWVdnSlI2elwiLFxuXHRcImZhZGVpblwiOiBcImZhZGVpbl8zclVTXzZrelA5VDZOWm9tNzBIN1JrXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4XzJlWUNWSHVGOUpFY0EzM202bk1jMmgge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2xfWVpnN0Z0djA2U21TeWNqTHhQTWhyIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cXG5cXG4ucm93XzI4OEdQbHVNZEoxTmlCejNBTURkQ2oge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbkBrZXlmcmFtZXMgZmFkZWluXzNsY3VFTXllOEpWa2Q2eTl1OVBibjcge1xcbiAgZnJvbSB7XFxuICAgIG9wYWNpdHk6IDA7IH1cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMTsgfSB9XFxuXFxuLnRyaWJlQ29udGFpbmVyXzM0N0wwbklTcVRIbWZUUkNuQzExMUMge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvOyB9XFxuXFxuLmNvbnRlbnRCbG9ja18zUk1yN1NVZERWeEdRVGVYREw2VHZJIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxcblxcbi50cmliZUJhbm5lcl8zR0hINnQ1ZVFkNmRLa0ZqbXBveEstLCAudHJpYmVJbWFnZV8yVlNTa1hSUHFnMDJkdFhkUklVZzhzLCAudHJpYmVJbWFnZUNhcnRfM2UzaWZ4TUx1aFpQVG9SaFRFV0M2VCwgLnRyaWJlU2l0ZV8zcWpQNlFCQlpDSWtUQXVqc19ySm1sIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIG1hcmdpbjogNHJlbSAwO1xcbiAgYW5pbWF0aW9uOiBmYWRlaW5fM2xjdUVNeWU4SlZrZDZ5OXU5UGJuNyAyczsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC50cmliZUJhbm5lcl8zR0hINnQ1ZVFkNmRLa0ZqbXBveEstLCAudHJpYmVJbWFnZV8yVlNTa1hSUHFnMDJkdFhkUklVZzhzLCAudHJpYmVJbWFnZUNhcnRfM2UzaWZ4TUx1aFpQVG9SaFRFV0M2VCwgLnRyaWJlU2l0ZV8zcWpQNlFCQlpDSWtUQXVqc19ySm1sIHtcXG4gICAgICBtYXJnaW46IDJyZW0gMDsgfSB9XFxuXFxuLnRyaWJlU2l0ZV8zcWpQNlFCQlpDSWtUQXVqc19ySm1sIHtcXG4gIHdpZHRoOiAxMTAwcHg7XFxuICBoZWlnaHQ6IDYwMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XFxuICAgIC50cmliZVNpdGVfM3FqUDZRQkJaQ0lrVEF1anNfckptbCB7XFxuICAgICAgd2lkdGg6IDcwMHB4O1xcbiAgICAgIGhlaWdodDogMzgwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC50cmliZVNpdGVfM3FqUDZRQkJaQ0lrVEF1anNfckptbCB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTY1cHg7IH0gfVxcblxcbi50cmliZUJhbm5lcl8zR0hINnQ1ZVFkNmRLa0ZqbXBveEstIHtcXG4gIHdpZHRoOiAzODBweDtcXG4gIGhlaWdodDogMTYwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAudHJpYmVCYW5uZXJfM0dISDZ0NWVRZDZkS2tGam1wb3hLLSB7XFxuICAgICAgd2lkdGg6IDI1MHB4O1xcbiAgICAgIGhlaWdodDogMTAwcHg7IH0gfVxcblxcbi50cmliZUltYWdlXzJWU1NrWFJQcWcwMmR0WGRSSVVnOHMge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC50cmliZUltYWdlXzJWU1NrWFJQcWcwMmR0WGRSSVVnOHMge1xcbiAgICAgIHdpZHRoOiA1MDBweDtcXG4gICAgICBoZWlnaHQ6IDI3NXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAudHJpYmVJbWFnZV8yVlNTa1hSUHFnMDJkdFhkUklVZzhzIHtcXG4gICAgICB3aWR0aDogMzAwcHg7XFxuICAgICAgaGVpZ2h0OiAxNjVweDsgfSB9XFxuXFxuLnRyaWJlSW1hZ2VDYXJ0XzNlM2lmeE1MdWhaUFRvUmhURVdDNlQge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA4NTBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC50cmliZUltYWdlQ2FydF8zZTNpZnhNTHVoWlBUb1JoVEVXQzZUIHtcXG4gICAgICB3aWR0aDogNTAwcHg7XFxuICAgICAgaGVpZ2h0OiA0NzBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnRyaWJlSW1hZ2VDYXJ0XzNlM2lmeE1MdWhaUFRvUmhURVdDNlQge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDI4MHB4OyB9IH1cXG5cXG4uYmx1cmJfM0pfWm1USmxrY1pBcmtCcXpsdDZGQiB7XFxuICBmb250LXNpemU6IDIuMTI1cmVtO1xcbiAgbWFyZ2luOiA4cmVtIDVyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmx1cmJfM0pfWm1USmxrY1pBcmtCcXpsdDZGQiB7XFxuICAgICAgZm9udC1zaXplOiAxLjIyNXJlbTtcXG4gICAgICBtYXJnaW46IDVyZW0gNXJlbTsgfSB9XFxuXFxuLnRyaWJlTGlua19XVUdUSFYxeHZUYU5KTngyTktOYkIge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY29sb3I6ICMwMDk1ZTc7IH1cXG4gIC50cmliZUxpbmtfV1VHVEhWMXh2VGFOSk54Mk5LTmJCOnZpc2l0ZWQge1xcbiAgICBjb2xvcjogIzAwOTVlNzsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb24vRGVza3RvcC9wcm9wcm9qZWN0cy9hbXlzaXRlL2NsaWVudC9zcmMvdmlld3MvY2FtcGFpZ25zL3RyaWJlL3RyaWJlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjLEVBQUU7O0FBRWxCO0VBQ0UsdUJBQXVCLEVBQUU7O0FBRTNCO0VBQ0Usb0JBQW9CLEVBQUU7O0FBRXhCO0VBQ0U7SUFDRSxXQUFXLEVBQUU7RUFDZjtJQUNFLFdBQVcsRUFBRSxFQUFFOztBQUVuQjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIseUJBQXlCLEVBQUU7O0FBRTdCO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsaUJBQWlCLEVBQUU7O0FBRXJCO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiw0Q0FBcUIsRUFBRTtFQUN2QjtJQUNFO01BQ0UsZUFBZSxFQUFFLEVBQUU7O0FBRXpCO0VBQ0UsY0FBYztFQUNkLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7O0FBRXhCO0VBQ0UsYUFBYTtFQUNiLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFOztBQUV4QjtFQUNFLGFBQWE7RUFDYixjQUFjLEVBQUU7RUFDaEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTtFQUN0QjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFOztBQUV4QjtFQUNFLGFBQWE7RUFDYixjQUFjLEVBQUU7RUFDaEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTtFQUN0QjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFOztBQUV4QjtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUU7RUFDckI7SUFDRTtNQUNFLG9CQUFvQjtNQUNwQixrQkFBa0IsRUFBRSxFQUFFOztBQUU1QjtFQUNFLHNCQUFzQjtFQUN0QixlQUFlLEVBQUU7RUFDakI7SUFDRSxlQUFlLEVBQUVcIixcImZpbGVcIjpcInRyaWJlLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZsZXgge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2wge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbkBrZXlmcmFtZXMgZmFkZWluIHtcXG4gIGZyb20ge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuICB0byB7XFxuICAgIG9wYWNpdHk6IDE7IH0gfVxcblxcbi50cmliZUNvbnRhaW5lciB7XFxuICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XFxuICBtYXJnaW46IDJyZW0gYXV0byAwIGF1dG87IH1cXG5cXG4uY29udGVudEJsb2NrIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxcblxcbi50cmliZUJhbm5lciwgLnRyaWJlSW1hZ2UsIC50cmliZUltYWdlQ2FydCwgLnRyaWJlU2l0ZSB7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICBtYXJnaW46IDRyZW0gMDtcXG4gIGFuaW1hdGlvbjogZmFkZWluIDJzOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnRyaWJlQmFubmVyLCAudHJpYmVJbWFnZSwgLnRyaWJlSW1hZ2VDYXJ0LCAudHJpYmVTaXRlIHtcXG4gICAgICBtYXJnaW46IDJyZW0gMDsgfSB9XFxuXFxuLnRyaWJlU2l0ZSB7XFxuICB3aWR0aDogMTEwMHB4O1xcbiAgaGVpZ2h0OiA2MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xcbiAgICAudHJpYmVTaXRlIHtcXG4gICAgICB3aWR0aDogNzAwcHg7XFxuICAgICAgaGVpZ2h0OiAzODBweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnRyaWJlU2l0ZSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTY1cHg7IH0gfVxcblxcbi50cmliZUJhbm5lciB7XFxuICB3aWR0aDogMzgwcHg7XFxuICBoZWlnaHQ6IDE2MHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnRyaWJlQmFubmVyIHtcXG4gICAgICB3aWR0aDogMjUwcHg7XFxuICAgICAgaGVpZ2h0OiAxMDBweDsgfSB9XFxuXFxuLnRyaWJlSW1hZ2Uge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC50cmliZUltYWdlIHtcXG4gICAgICB3aWR0aDogNTAwcHg7XFxuICAgICAgaGVpZ2h0OiAyNzVweDsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLnRyaWJlSW1hZ2Uge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDE2NXB4OyB9IH1cXG5cXG4udHJpYmVJbWFnZUNhcnQge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA4NTBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC50cmliZUltYWdlQ2FydCB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogNDcwcHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC50cmliZUltYWdlQ2FydCB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMjgwcHg7IH0gfVxcblxcbi5ibHVyYiB7XFxuICBmb250LXNpemU6IDIuMTI1cmVtO1xcbiAgbWFyZ2luOiA4cmVtIDVyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmx1cmIge1xcbiAgICAgIGZvbnQtc2l6ZTogMS4yMjVyZW07XFxuICAgICAgbWFyZ2luOiA1cmVtIDVyZW07IH0gfVxcblxcbi50cmliZUxpbmsge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY29sb3I6ICMwMDk1ZTc7IH1cXG4gIC50cmliZUxpbms6dmlzaXRlZCB7XFxuICAgIGNvbG9yOiAjMDA5NWU3OyB9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImZsZXhcIjogXCJmbGV4XzJlWUNWSHVGOUpFY0EzM202bk1jMmhcIixcblx0XCJjb2xcIjogXCJjb2xfWVpnN0Z0djA2U21TeWNqTHhQTWhyXCIsXG5cdFwicm93XCI6IFwicm93XzI4OEdQbHVNZEoxTmlCejNBTURkQ2pcIixcblx0XCJ0cmliZUNvbnRhaW5lclwiOiBcInRyaWJlQ29udGFpbmVyXzM0N0wwbklTcVRIbWZUUkNuQzExMUNcIixcblx0XCJjb250ZW50QmxvY2tcIjogXCJjb250ZW50QmxvY2tfM1JNcjdTVWREVnhHUVRlWERMNlR2SVwiLFxuXHRcInRyaWJlQmFubmVyXCI6IFwidHJpYmVCYW5uZXJfM0dISDZ0NWVRZDZkS2tGam1wb3hLLVwiLFxuXHRcInRyaWJlSW1hZ2VcIjogXCJ0cmliZUltYWdlXzJWU1NrWFJQcWcwMmR0WGRSSVVnOHNcIixcblx0XCJ0cmliZUltYWdlQ2FydFwiOiBcInRyaWJlSW1hZ2VDYXJ0XzNlM2lmeE1MdWhaUFRvUmhURVdDNlRcIixcblx0XCJ0cmliZVNpdGVcIjogXCJ0cmliZVNpdGVfM3FqUDZRQkJaQ0lrVEF1anNfckptbFwiLFxuXHRcImZhZGVpblwiOiBcImZhZGVpbl8zbGN1RU15ZThKVmtkNnk5dTlQYm43XCIsXG5cdFwiYmx1cmJcIjogXCJibHVyYl8zSl9abVRKbGtjWkFya0Jxemx0NkZCXCIsXG5cdFwidHJpYmVMaW5rXCI6IFwidHJpYmVMaW5rX1dVR1RIVjF4dlRhTkpOeDJOS05iQlwiXG59OyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZmxleF8xRnR6SE5HYWpVWEJkM2p0bXNLYWxLIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sXzF5azc1VXBvcFZfZlU4UzJzSE9SNU8ge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3dfMW5yc1RELVI5Um5IY0dmb190Z1VwdCB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuQGtleWZyYW1lcyBmYWRlaW5fdERjaWtONVVFSjZBOGZiMHY4a1BjIHtcXG4gIGZyb20ge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuICB0byB7XFxuICAgIG9wYWNpdHk6IDE7IH0gfVxcblxcbi53YWxtYXJ0Q29udGFpbmVyX1NYZ0RGdWhSTVA2dm9kTU92eGc4diB7XFxuICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XFxuICBtYXJnaW46IDJyZW0gYXV0byAwIGF1dG87IH1cXG5cXG4uY29udGVudEJsb2NrXzNQV3dFbG9aZzFreFZyY3RZX3FPS0Mge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBtYXJnaW4tdG9wOiAycmVtOyB9XFxuXFxuLndtbUJhbm5lcl8zZmZIQjFhUmg4bnZRRnRXZFBQeC00LCAud21tSW1hZ2VfTXVscUh5XzJteVF2ZjN5ajdkWkJqLCAud21tU2l0ZV9oRlJ0OXJYVDVnSWVDNjVGYWFIX2oge1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgbWFyZ2luOiA0cmVtIDA7XFxuICBhbmltYXRpb246IGZhZGVpbl90RGNpa041VUVKNkE4ZmIwdjhrUGMgMnM7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAud21tQmFubmVyXzNmZkhCMWFSaDhudlFGdFdkUFB4LTQsIC53bW1JbWFnZV9NdWxxSHlfMm15UXZmM3lqN2RaQmosIC53bW1TaXRlX2hGUnQ5clhUNWdJZUM2NUZhYUhfaiB7XFxuICAgICAgbWFyZ2luOiAycmVtIDA7IH0gfVxcblxcbi53bW1TaXRlX2hGUnQ5clhUNWdJZUM2NUZhYUhfaiB7XFxuICB3aWR0aDogMTEwMHB4O1xcbiAgaGVpZ2h0OiA2MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xcbiAgICAud21tU2l0ZV9oRlJ0OXJYVDVnSWVDNjVGYWFIX2oge1xcbiAgICAgIHdpZHRoOiA2MDBweDtcXG4gICAgICBoZWlnaHQ6IDMyNXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAud21tU2l0ZV9oRlJ0OXJYVDVnSWVDNjVGYWFIX2oge1xcbiAgICAgIHdpZHRoOiAzMDBweDtcXG4gICAgICBoZWlnaHQ6IDE2NXB4OyB9IH1cXG5cXG4ud21tQmFubmVyXzNmZkhCMWFSaDhudlFGdFdkUFB4LTQge1xcbiAgd2lkdGg6IDM4MHB4O1xcbiAgaGVpZ2h0OiAxNjBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC53bW1CYW5uZXJfM2ZmSEIxYVJoOG52UUZ0V2RQUHgtNCB7XFxuICAgICAgd2lkdGg6IDI1MHB4O1xcbiAgICAgIGhlaWdodDogMTAwcHg7IH0gfVxcblxcbi53bW1JbWFnZV9NdWxxSHlfMm15UXZmM3lqN2RaQmoge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC53bW1JbWFnZV9NdWxxSHlfMm15UXZmM3lqN2RaQmoge1xcbiAgICAgIHdpZHRoOiA1MDBweDtcXG4gICAgICBoZWlnaHQ6IDI3NXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAud21tSW1hZ2VfTXVscUh5XzJteVF2ZjN5ajdkWkJqIHtcXG4gICAgICB3aWR0aDogMzAwcHg7XFxuICAgICAgaGVpZ2h0OiAxNjVweDsgfSB9XFxuXFxuLmJsdXJiXzJETU1jdzAxNkZlTTdNTElMaDNuN2Qge1xcbiAgZm9udC1zaXplOiAyLjEyNXJlbTtcXG4gIG1hcmdpbjogOHJlbSA1cmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gICAgLmJsdXJiXzJETU1jdzAxNkZlTTdNTElMaDNuN2Qge1xcbiAgICAgIGZvbnQtc2l6ZTogMS4yMjVyZW07XFxuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfSB9XFxuXFxuLndtTGlua18xRGVDYVpiSTdQZHF2VWloUEhGdVVOIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiAjMDA5NWU3OyB9XFxuICAud21MaW5rXzFEZUNhWmJJN1BkcXZVaWhQSEZ1VU46dmlzaXRlZCB7XFxuICAgIGNvbG9yOiAjMDA5NWU3OyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkM6L1VzZXJzL1Jvbi9EZXNrdG9wL3Byb3Byb2plY3RzL2FteXNpdGUvY2xpZW50L3NyYy92aWV3cy9jYW1wYWlnbnMvd2FsbWFydC93YWxtYXJ0LnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjLEVBQUU7O0FBRWxCO0VBQ0UsdUJBQXVCLEVBQUU7O0FBRTNCO0VBQ0Usb0JBQW9CLEVBQUU7O0FBRXhCO0VBQ0U7SUFDRSxXQUFXLEVBQUU7RUFDZjtJQUNFLFdBQVcsRUFBRSxFQUFFOztBQUVuQjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIseUJBQXlCLEVBQUU7O0FBRTdCO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsaUJBQWlCLEVBQUU7O0FBRXJCO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiwyQ0FBcUIsRUFBRTtFQUN2QjtJQUNFO01BQ0UsZUFBZSxFQUFFLEVBQUU7O0FBRXpCO0VBQ0UsY0FBYztFQUNkLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFO0VBQ3RCO0lBQ0U7TUFDRSxhQUFhO01BQ2IsY0FBYyxFQUFFLEVBQUU7O0FBRXhCO0VBQ0UsYUFBYTtFQUNiLGNBQWMsRUFBRTtFQUNoQjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFOztBQUV4QjtFQUNFLGFBQWE7RUFDYixjQUFjLEVBQUU7RUFDaEI7SUFDRTtNQUNFLGFBQWE7TUFDYixjQUFjLEVBQUUsRUFBRTtFQUN0QjtJQUNFO01BQ0UsYUFBYTtNQUNiLGNBQWMsRUFBRSxFQUFFOztBQUV4QjtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUU7RUFDckI7SUFDRTtNQUNFLG9CQUFvQjtNQUNwQixpQkFBaUIsRUFBRSxFQUFFOztBQUUzQjtFQUNFLHNCQUFzQjtFQUN0QixlQUFlLEVBQUU7RUFDakI7SUFDRSxlQUFlLEVBQUVcIixcImZpbGVcIjpcIndhbG1hcnQuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZmxleCB7XFxuICBkaXNwbGF5OiBmbGV4OyB9XFxuXFxuLmNvbCB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XFxuXFxuLnJvdyB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuQGtleWZyYW1lcyBmYWRlaW4ge1xcbiAgZnJvbSB7XFxuICAgIG9wYWNpdHk6IDA7IH1cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMTsgfSB9XFxuXFxuLndhbG1hcnRDb250YWluZXIge1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAycmVtIGF1dG8gMCBhdXRvOyB9XFxuXFxuLmNvbnRlbnRCbG9jayB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG1hcmdpbi10b3A6IDJyZW07IH1cXG5cXG4ud21tQmFubmVyLCAud21tSW1hZ2UsIC53bW1TaXRlIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIG1hcmdpbjogNHJlbSAwO1xcbiAgYW5pbWF0aW9uOiBmYWRlaW4gMnM7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAud21tQmFubmVyLCAud21tSW1hZ2UsIC53bW1TaXRlIHtcXG4gICAgICBtYXJnaW46IDJyZW0gMDsgfSB9XFxuXFxuLndtbVNpdGUge1xcbiAgd2lkdGg6IDExMDBweDtcXG4gIGhlaWdodDogNjAwcHg7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcXG4gICAgLndtbVNpdGUge1xcbiAgICAgIHdpZHRoOiA2MDBweDtcXG4gICAgICBoZWlnaHQ6IDMyNXB4OyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAud21tU2l0ZSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTY1cHg7IH0gfVxcblxcbi53bW1CYW5uZXIge1xcbiAgd2lkdGg6IDM4MHB4O1xcbiAgaGVpZ2h0OiAxNjBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC53bW1CYW5uZXIge1xcbiAgICAgIHdpZHRoOiAyNTBweDtcXG4gICAgICBoZWlnaHQ6IDEwMHB4OyB9IH1cXG5cXG4ud21tSW1hZ2Uge1xcbiAgd2lkdGg6IDkwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDsgfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAgIC53bW1JbWFnZSB7XFxuICAgICAgd2lkdGg6IDUwMHB4O1xcbiAgICAgIGhlaWdodDogMjc1cHg7IH0gfVxcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAgIC53bW1JbWFnZSB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMTY1cHg7IH0gfVxcblxcbi5ibHVyYiB7XFxuICBmb250LXNpemU6IDIuMTI1cmVtO1xcbiAgbWFyZ2luOiA4cmVtIDVyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmx1cmIge1xcbiAgICAgIGZvbnQtc2l6ZTogMS4yMjVyZW07XFxuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfSB9XFxuXFxuLndtTGluayB7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBjb2xvcjogIzAwOTVlNzsgfVxcbiAgLndtTGluazp2aXNpdGVkIHtcXG4gICAgY29sb3I6ICMwMDk1ZTc7IH1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiZmxleFwiOiBcImZsZXhfMUZ0ekhOR2FqVVhCZDNqdG1zS2FsS1wiLFxuXHRcImNvbFwiOiBcImNvbF8xeWs3NVVwb3BWX2ZVOFMyc0hPUjVPXCIsXG5cdFwicm93XCI6IFwicm93XzFucnNURC1SOVJuSGNHZm9fdGdVcHRcIixcblx0XCJ3YWxtYXJ0Q29udGFpbmVyXCI6IFwid2FsbWFydENvbnRhaW5lcl9TWGdERnVoUk1QNnZvZE1PdnhnOHZcIixcblx0XCJjb250ZW50QmxvY2tcIjogXCJjb250ZW50QmxvY2tfM1BXd0Vsb1pnMWt4VnJjdFlfcU9LQ1wiLFxuXHRcIndtbUJhbm5lclwiOiBcIndtbUJhbm5lcl8zZmZIQjFhUmg4bnZRRnRXZFBQeC00XCIsXG5cdFwid21tSW1hZ2VcIjogXCJ3bW1JbWFnZV9NdWxxSHlfMm15UXZmM3lqN2RaQmpcIixcblx0XCJ3bW1TaXRlXCI6IFwid21tU2l0ZV9oRlJ0OXJYVDVnSWVDNjVGYWFIX2pcIixcblx0XCJmYWRlaW5cIjogXCJmYWRlaW5fdERjaWtONVVFSjZBOGZiMHY4a1BjXCIsXG5cdFwiYmx1cmJcIjogXCJibHVyYl8yRE1NY3cwMTZGZU03TUxJTGgzbjdkXCIsXG5cdFwid21MaW5rXCI6IFwid21MaW5rXzFEZUNhWmJJN1BkcXZVaWhQSEZ1VU5cIlxufTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmZsZXhfa0IySlU3a1drM3kwUUVxeUxtYTZFIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4uY29sXzM5OWdzSUlndDNmVVV2Q3lNcDBjRnEge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3dfMkZOZlVFRjRsTnMtSm1xamhYZEszbiB7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XFxuXFxuLmhvbWVDb250YWluZXJfM19pbzhzVWFBSlEwb0E4T1JGQVdLMCB7XFxuICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XFxuICBtYXJnaW46IDJyZW0gYXV0byAwIGF1dG87IH1cXG5cXG4uYmxvY2tSb3dfMl93ZmJEQ200c1U3TWtpSkxkakMxbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG1hcmdpbi10b3A6IDJyZW07IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmxvY2tSb3dfMl93ZmJEQ200c1U3TWtpSkxkakMxbyB7XFxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfSB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkM6L1VzZXJzL1Jvbi9EZXNrdG9wL3Byb3Byb2plY3RzL2FteXNpdGUvY2xpZW50L3NyYy92aWV3cy9ob21lL2hvbWUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGNBQWMsRUFBRTs7QUFFbEI7RUFDRSx1QkFBdUIsRUFBRTs7QUFFM0I7RUFDRSxvQkFBb0IsRUFBRTs7QUFFeEI7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFFOztBQUU3QjtFQUNFLGNBQWM7RUFDZCxvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLHdCQUF3QjtFQUN4QixzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGlCQUFpQixFQUFFO0VBQ25CO0lBQ0U7TUFDRSx1QkFBdUIsRUFBRSxFQUFFXCIsXCJmaWxlXCI6XCJob21lLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZsZXgge1xcbiAgZGlzcGxheTogZmxleDsgfVxcblxcbi5jb2wge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5yb3cge1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxcblxcbi5ob21lQ29udGFpbmVyIHtcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxuICBtYXgtd2lkdGg6IDEyMDBweDtcXG4gIG1hcmdpbjogMnJlbSBhdXRvIDAgYXV0bzsgfVxcblxcbi5ibG9ja1JvdyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG1hcmdpbi10b3A6IDJyZW07IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xcbiAgICAuYmxvY2tSb3cge1xcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJmbGV4XCI6IFwiZmxleF9rQjJKVTdrV2szeTBRRXF5TG1hNkVcIixcblx0XCJjb2xcIjogXCJjb2xfMzk5Z3NJSWd0M2ZVVXZDeU1wMGNGcVwiLFxuXHRcInJvd1wiOiBcInJvd18yRk5mVUVGNGxOcy1KbXFqaFhkSzNuXCIsXG5cdFwiaG9tZUNvbnRhaW5lclwiOiBcImhvbWVDb250YWluZXJfM19pbzhzVWFBSlEwb0E4T1JGQVdLMFwiLFxuXHRcImJsb2NrUm93XCI6IFwiYmxvY2tSb3dfMl93ZmJEQ200c1U3TWtpSkxkakMxb1wiXG59OyIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXNjYXBlKHVybCkge1xuICAgIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdXJsXG4gICAgfVxuICAgIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICAgIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgICAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICAgIH1cbiAgICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gICAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgICBpZiAoL1tcIicoKSBcXHRcXG5dLy50ZXN0KHVybCkpIHtcbiAgICAgICAgcmV0dXJuICdcIicgKyB1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKSArICdcIidcbiAgICB9XG5cbiAgICByZXR1cm4gdXJsXG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsInZhciBjYW1lbDJoeXBoZW4gPSByZXF1aXJlKCdzdHJpbmctY29udmVydC9jYW1lbDJoeXBoZW4nKTtcblxudmFyIGlzRGltZW5zaW9uID0gZnVuY3Rpb24gKGZlYXR1cmUpIHtcbiAgdmFyIHJlID0gL1toZWlnaHR8d2lkdGhdJC87XG4gIHJldHVybiByZS50ZXN0KGZlYXR1cmUpO1xufTtcblxudmFyIG9iajJtcSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIG1xID0gJyc7XG4gIHZhciBmZWF0dXJlcyA9IE9iamVjdC5rZXlzKG9iaik7XG4gIGZlYXR1cmVzLmZvckVhY2goZnVuY3Rpb24gKGZlYXR1cmUsIGluZGV4KSB7XG4gICAgdmFyIHZhbHVlID0gb2JqW2ZlYXR1cmVdO1xuICAgIGZlYXR1cmUgPSBjYW1lbDJoeXBoZW4oZmVhdHVyZSk7XG4gICAgLy8gQWRkIHB4IHRvIGRpbWVuc2lvbiBmZWF0dXJlc1xuICAgIGlmIChpc0RpbWVuc2lvbihmZWF0dXJlKSAmJiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlICsgJ3B4JztcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSB0cnVlKSB7XG4gICAgICBtcSArPSBmZWF0dXJlO1xuICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IGZhbHNlKSB7XG4gICAgICBtcSArPSAnbm90ICcgKyBmZWF0dXJlO1xuICAgIH0gZWxzZSB7XG4gICAgICBtcSArPSAnKCcgKyBmZWF0dXJlICsgJzogJyArIHZhbHVlICsgJyknO1xuICAgIH1cbiAgICBpZiAoaW5kZXggPCBmZWF0dXJlcy5sZW5ndGgtMSkge1xuICAgICAgbXEgKz0gJyBhbmQgJ1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBtcTtcbn07XG5cbnZhciBqc29uMm1xID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gIHZhciBtcSA9ICcnO1xuICBpZiAodHlwZW9mIHF1ZXJ5ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuICAvLyBIYW5kbGluZyBhcnJheSBvZiBtZWRpYSBxdWVyaWVzXG4gIGlmIChxdWVyeSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgcXVlcnkuZm9yRWFjaChmdW5jdGlvbiAocSwgaW5kZXgpIHtcbiAgICAgIG1xICs9IG9iajJtcShxKTtcbiAgICAgIGlmIChpbmRleCA8IHF1ZXJ5Lmxlbmd0aC0xKSB7XG4gICAgICAgIG1xICs9ICcsICdcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbXE7XG4gIH1cbiAgLy8gSGFuZGxpbmcgc2luZ2xlIG1lZGlhIHF1ZXJ5XG4gIHJldHVybiBvYmoybXEocXVlcnkpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBqc29uMm1xOyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuOC4zXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2MsZCxlLGYsZyxoXSxrPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFtrKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24geChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2JhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YWE/dm9pZCAwOngoXCIyMjdcIik7ZnVuY3Rpb24gY2EoYSxiLGMsZCxlLGYsZyxoLGwpe3ZhciBrPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGspfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19XG52YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsbCl7ZGE9ITE7ZWE9bnVsbDtjYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxsKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgaz1lYTtkYT0hMTtlYT1udWxsfWVsc2UgeChcIjE5OFwiKSxrPXZvaWQgMDtmYXx8KGZhPSEwLGhhPWspfX12YXIgbGE9bnVsbCxtYT17fTtcbmZ1bmN0aW9uIG5hKCl7aWYobGEpZm9yKHZhciBhIGluIG1hKXt2YXIgYj1tYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6eChcIjk2XCIsYSk7aWYoIW9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOngoXCI5N1wiLGEpO29hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cGEuaGFzT3duUHJvcGVydHkoaCk/eChcIjk5XCIsaCk6dm9pZCAwO3BhW2hdPWY7dmFyIGw9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihsKXtmb3IoZSBpbiBsKWwuaGFzT3duUHJvcGVydHkoZSkmJnFhKGxbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhxYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOngoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBxYShhLGIsYyl7cmFbYV0/eChcIjEwMFwiLGEpOnZvaWQgMDtyYVthXT1iO3NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIG9hPVtdLHBhPXt9LHJhPXt9LHNhPXt9LHRhPW51bGwsdWE9bnVsbCx2YT1udWxsO2Z1bmN0aW9uIHdhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD12YShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHhhKGEsYil7bnVsbD09Yj94KFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHlhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciB6YT1udWxsO2Z1bmN0aW9uIEFhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl3YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ3YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19XG52YXIgQmE9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bGE/eChcIjEwMVwiKTp2b2lkIDA7bGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7bmEoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO21hLmhhc093blByb3BlcnR5KGMpJiZtYVtjXT09PWR8fChtYVtjXT94KFwiMTAyXCIsYyk6dm9pZCAwLG1hW2NdPWQsYj0hMCl9YiYmbmEoKX19O1xuZnVuY3Rpb24gQ2EoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD10YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gRGEoYSl7bnVsbCE9PWEmJih6YT14YSh6YSxhKSk7YT16YTt6YT1udWxsO2lmKGEmJih5YShhLEFhKSx6YT94KFwiOTVcIik6dm9pZCAwLGZhKSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9dmFyIEVhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEZhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrRWEsR2E9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitFYTtmdW5jdGlvbiBIYShhKXtpZihhW0ZhXSlyZXR1cm4gYVtGYV07Zm9yKDshYVtGYV07KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtGYV07cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBJYShhKXthPWFbRmFdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9XG5mdW5jdGlvbiBKYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7eChcIjMzXCIpfWZ1bmN0aW9uIEthKGEpe3JldHVybiBhW0dhXXx8bnVsbH1mdW5jdGlvbiBMYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE1hKGEsYixjKXtpZihiPUNhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBOYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPUxhKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylNYShjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU1hKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIE9hKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUNhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUGEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZPYShhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBRYShhKXt5YShhLE5hKX12YXIgUmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtmdW5jdGlvbiBTYShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYT17YW5pbWF0aW9uZW5kOlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2EoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYT17fSxWYT17fTtcblJhJiYoVmE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYShhKXtpZihVYVthXSlyZXR1cm4gVWFbYV07aWYoIVRhW2FdKXJldHVybiBhO3ZhciBiPVRhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZhKXJldHVybiBVYVthXT1iW2NdO3JldHVybiBhfVxudmFyIFhhPVdhKFwiYW5pbWF0aW9uZW5kXCIpLFlhPVdhKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFphPVdhKFwiYW5pbWF0aW9uc3RhcnRcIiksJGE9V2EoXCJ0cmFuc2l0aW9uZW5kXCIpLGFiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYj1udWxsLGNiPW51bGwsZGI9bnVsbDtcbmZ1bmN0aW9uIGViKCl7aWYoZGIpcmV0dXJuIGRiO3ZhciBhLGI9Y2IsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gYmI/YmIudmFsdWU6YmIudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gZGI9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBmYigpe3JldHVybiEwfWZ1bmN0aW9uIGdiKCl7cmV0dXJuITF9XG5mdW5jdGlvbiB5KGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9mYjpnYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWdiO3JldHVybiB0aGlzfVxubih5LnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWZiKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWZiKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWZifSxpc1BlcnNpc3RlbnQ6Z2IsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Z2I7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTt5LkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbnkuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7aGIoYyk7cmV0dXJuIGN9O2hiKHkpO2Z1bmN0aW9uIGliKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGpiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp4KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cbmZ1bmN0aW9uIGhiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWliO2EucmVsZWFzZT1qYn12YXIga2I9eS5leHRlbmQoe2RhdGE6bnVsbH0pLGxiPXkuZXh0ZW5kKHtkYXRhOm51bGx9KSxtYj1bOSwxMywyNywzMl0sbmI9UmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LG9iPW51bGw7UmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKG9iPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgcGI9UmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFvYixxYj1SYSYmKCFuYnx8b2ImJjg8b2ImJjExPj1vYikscmI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksc2I9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sdGI9ITE7XG5mdW5jdGlvbiB1YihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PW1iLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gdmIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgd2I9ITE7ZnVuY3Rpb24geGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHZiKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDt0Yj0hMDtyZXR1cm4gcmI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09cmImJnRiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHliKGEsYil7aWYod2IpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IW5iJiZ1YihhLGIpPyhhPWViKCksZGI9Y2I9YmI9bnVsbCx3Yj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcWImJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHpiPXtldmVudFR5cGVzOnNiLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihuYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXNiLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXNiLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT1zYi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2Ugd2I/dWIoYSxjKSYmKGU9c2IuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT1zYi5jb21wb3NpdGlvblN0YXJ0KTtlPyhxYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih3Ynx8ZSE9PXNiLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXNiLmNvbXBvc2l0aW9uRW5kJiZ3YiYmKGY9ZWIoKSk6KGJiPWQsY2I9XCJ2YWx1ZVwiaW4gYmI/YmIudmFsdWU6YmIudGV4dENvbnRlbnQsd2I9XG4hMCkpLGU9a2IuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPWY6KGY9dmIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFFhKGUpLGY9ZSk6Zj1udWxsOyhhPXBiP3hiKGEsYyk6eWIoYSxjKSk/KGI9bGIuZ2V0UG9vbGVkKHNiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxRYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxBYj1udWxsLEJiPW51bGwsQ2I9bnVsbDtmdW5jdGlvbiBEYihhKXtpZihhPXVhKGEpKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQWI/eChcIjI4MFwiKTp2b2lkIDA7dmFyIGI9dGEoYS5zdGF0ZU5vZGUpO0FiKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gRWIoYSl7QmI/Q2I/Q2IucHVzaChhKTpDYj1bYV06QmI9YX1mdW5jdGlvbiBGYigpe2lmKEJiKXt2YXIgYT1CYixiPUNiO0NiPUJiPW51bGw7RGIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKURiKGJbYV0pfX1cbmZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPSExO2Z1bmN0aW9uIEtiKGEsYil7aWYoSmIpcmV0dXJuIGEoYik7SmI9ITA7dHJ5e3JldHVybiBHYihhLGIpfWZpbmFsbHl7aWYoSmI9ITEsbnVsbCE9PUJifHxudWxsIT09Q2IpSWIoKSxGYigpfX12YXIgTGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gTWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFMYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG5mdW5jdGlvbiBOYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gT2IoYSl7aWYoIVJhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFBiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBRYihhKXt2YXIgYj1QYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gUmIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVFiKGEpKX1mdW5jdGlvbiBTYihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9UGIoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX12YXIgVGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7VGIuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoVGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7XG52YXIgVWI9L14oLiopW1xcXFxcXC9dLyx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsVmI9ej9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxXYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsWGI9ej9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsWWI9ej9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsWmI9ej9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsJGI9ej9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksYWM9ej9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxiYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsY2M9ej9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsZGM9ej9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsZWM9ej9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGZjPXo/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsZ2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGhjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1nYyYmYVtnY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGljKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgWGI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgV2I6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIFpiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIFliOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgZGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBhYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlICRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgY2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGVjOnJldHVybiBpYyhhLnR5cGUpO2Nhc2UgZmM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBpYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBqYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9aWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9aWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShVYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIGtjPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG1jPXt9LG5jPXt9O1xuZnVuY3Rpb24gb2MoYSl7aWYobGMuY2FsbChuYyxhKSlyZXR1cm4hMDtpZihsYy5jYWxsKG1jLGEpKXJldHVybiExO2lmKGtjLnRlc3QoYSkpcmV0dXJuIG5jW2FdPSEwO21jW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHBjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBDKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBDKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgcmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBzYyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxcbnNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxzYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxzYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuZnVuY3Rpb24gdGMoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwocWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29jKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB1YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gdmMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gd2MoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9dWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiB4YyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnRjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiB5YyhhLGIpe3hjKGEsYik7dmFyIGM9dWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/emMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmemMoYSxiLnR5cGUsdWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBBYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiB6YyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEJjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIENjKGEsYixjKXthPXkuZ2V0UG9vbGVkKEJjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RWIoYyk7UWEoYSk7cmV0dXJuIGF9dmFyIERjPW51bGwsRWM9bnVsbDtmdW5jdGlvbiBGYyhhKXtEYShhKX1cbmZ1bmN0aW9uIEdjKGEpe3ZhciBiPUphKGEpO2lmKFNiKGIpKXJldHVybiBhfWZ1bmN0aW9uIEhjKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEljPSExO1JhJiYoSWM9T2IoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gSmMoKXtEYyYmKERjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEtjKSxFYz1EYz1udWxsKX1mdW5jdGlvbiBLYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmR2MoRWMpJiYoYT1DYyhFYyxhLE5iKGEpKSxLYihGYyxhKSl9ZnVuY3Rpb24gTGMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEpjKCksRGM9YixFYz1jLERjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEtjKSk6XCJibHVyXCI9PT1hJiZKYygpfWZ1bmN0aW9uIE1jKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIEdjKEVjKX1cbmZ1bmN0aW9uIE5jKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gR2MoYil9ZnVuY3Rpb24gT2MoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gR2MoYil9XG52YXIgUGM9e2V2ZW50VHlwZXM6QmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpJYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/SmEoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPUhjOk1iKGUpP0ljP2Y9T2M6KGY9TWMsZz1MYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9TmMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIENjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmemMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sUWM9eS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFJjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFNjKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9UmNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBUYygpe3JldHVybiBTY31cbnZhciBVYz0wLFZjPTAsV2M9ITEsWGM9ITEsWWM9UWMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVVjO1VjPWEuc2NyZWVuWDtyZXR1cm4gV2M/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihXYz0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVZjO1ZjPWEuc2NyZWVuWTtyZXR1cm4gWGM/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihYYz0hMCwwKX19KSxaYz1ZYy5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksJGM9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGFkPXtldmVudFR5cGVzOiRjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0hhKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsbD12b2lkIDAsaz12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1ZYyxoPSRjLm1vdXNlTGVhdmUsbD0kYy5tb3VzZUVudGVyLGs9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1aYyxoPSRjLnBvaW50ZXJMZWF2ZSxsPSRjLnBvaW50ZXJFbnRlcixrPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpKYShmKTtlPW51bGw9PWI/ZTpKYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1rK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQobCxiLGMsZCk7Yy50eXBlPWsrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtrPTA7Zm9yKGc9YjtnO2c9TGEoZykpaysrO2c9MDtmb3IobD1lO2w7bD1MYShsKSlnKys7Zm9yKDswPGstZzspYj1MYShiKSxrLS07Zm9yKDswPGctazspZT1MYShlKSxnLS07Zm9yKDtrLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1MYShiKTtlPUxhKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtrPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2IucHVzaChmKTtmPUxhKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7az1kLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TGEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylPYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylPYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19O2Z1bmN0aW9uIGJkKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgY2Q9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGRkKGEsYil7aWYoYmQoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFjZC5jYWxsKGIsY1tkXSl8fCFiZChhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGVkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGZkKGEpezIhPT1lZChhKT94KFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGdkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWVkKGEpLDM9PT1iP3goXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGZkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGZkKGUpLGI7Zz1nLnNpYmxpbmd9eChcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOngoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD94KFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/eChcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoZChhKXthPWdkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIGlkPXkuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxqZD15LmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLGtkPVFjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gbGQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgbWQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LG5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxvZD1RYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9bWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9bGQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP25kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUYyxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9sZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9sZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHBkPVljLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSxxZD1RYy5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUY30pLHJkPXkuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHNkPVljLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksdGQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbWGEsXCJhbmltYXRpb25FbmRcIl0sW1lhLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtaYSxcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sWyRhLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sdWQ9e30sdmQ9e307ZnVuY3Rpb24gd2QoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTt1ZFthXT1iO3ZkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIl0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiXSxbXCJkcm9wXCIsXCJkcm9wXCJdLFtcImZvY3VzXCIsXCJmb2N1c1wiXSxbXCJpbnB1dFwiLFwiaW5wdXRcIl0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCJdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiXSxbXCJrZXl1cFwiLFwia2V5VXBcIl0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIl0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiXSxbXCJwYXN0ZVwiLFwicGFzdGVcIl0sW1wicGF1c2VcIixcInBhdXNlXCJdLFtcInBsYXlcIixcInBsYXlcIl0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiXSxcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMCl9KTt0ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dkKGEsITEpfSk7XG52YXIgeGQ9e2V2ZW50VHlwZXM6dWQsaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlOmZ1bmN0aW9uKGEpe2E9dmRbYV07cmV0dXJuIHZvaWQgMCE9PWEmJiEwPT09YS5pc0ludGVyYWN0aXZlfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09bGQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPW9kO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1rZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVljO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG5wZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXFkO2JyZWFrO2Nhc2UgWGE6Y2FzZSBZYTpjYXNlIFphOmE9aWQ7YnJlYWs7Y2FzZSAkYTphPXJkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPVFjO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9c2Q7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1qZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVpjO2JyZWFrO2RlZmF1bHQ6YT15fWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7UWEoYik7cmV0dXJuIGJ9fSx5ZD14ZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsXG56ZD1bXTtmdW5jdGlvbiBBZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1IYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1OYihhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxvYS5sZW5ndGg7aCsrKXt2YXIgbD1vYVtoXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz14YShnLGwpKX1EYShnKX19dmFyIEJkPSEwO1xuZnVuY3Rpb24gRShhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSh5ZChhKT9DZDpEZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfWZ1bmN0aW9uIEVkKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMCl9ZnVuY3Rpb24gQ2QoYSxiKXtIYihEZCxhLGIpfVxuZnVuY3Rpb24gRGQoYSxiKXtpZihCZCl7dmFyIGM9TmIoYik7Yz1IYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWVkKGMpfHwoYz1udWxsKTtpZih6ZC5sZW5ndGgpe3ZhciBkPXpkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e0tiKEFkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+emQubGVuZ3RoJiZ6ZC5wdXNoKGEpfX19dmFyIEZkPXt9LEdkPTAsSGQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO1xuZnVuY3Rpb24gSWQoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsSGQpfHwoYVtIZF09R2QrKyxGZFthW0hkXV09e30pO3JldHVybiBGZFthW0hkXV19ZnVuY3Rpb24gSmQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIEtkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExkKGEsYil7dmFyIGM9S2QoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2QoYyl9fWZ1bmN0aW9uIE1kKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWQoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmQoKXtmb3IodmFyIGE9d2luZG93LGI9SmQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXthPWIuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3fWNhdGNoKGMpe2JyZWFrfWI9SmQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2QoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbmZ1bmN0aW9uIFBkKCl7dmFyIGE9TmQoKTtpZihPZChhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYj17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Yj0oYj1hLm93bmVyRG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGM9Yi5nZXRTZWxlY3Rpb24mJmIuZ2V0U2VsZWN0aW9uKCk7aWYoYyYmMCE9PWMucmFuZ2VDb3VudCl7Yj1jLmFuY2hvck5vZGU7dmFyIGQ9Yy5hbmNob3JPZmZzZXQsZT1jLmZvY3VzTm9kZTtjPWMuZm9jdXNPZmZzZXQ7dHJ5e2Iubm9kZVR5cGUsZS5ub2RlVHlwZX1jYXRjaChBKXtiPW51bGw7YnJlYWsgYX12YXIgZj0wLGc9LTEsaD0tMSxsPTAsaz0wLG09YSxwPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdDs7KXttIT09Ynx8MCE9PWQmJjMhPT1tLm5vZGVUeXBlfHwoZz1mK2QpO20hPT1lfHwwIT09YyYmMyE9PW0ubm9kZVR5cGV8fChoPWYrYyk7Mz09PW0ubm9kZVR5cGUmJihmKz1tLm5vZGVWYWx1ZS5sZW5ndGgpO1xuaWYobnVsbD09PSh0PW0uZmlyc3RDaGlsZCkpYnJlYWs7cD1tO209dH1mb3IoOzspe2lmKG09PT1hKWJyZWFrIGI7cD09PWImJisrbD09PWQmJihnPWYpO3A9PT1lJiYrK2s9PT1jJiYoaD1mKTtpZihudWxsIT09KHQ9bS5uZXh0U2libGluZykpYnJlYWs7bT1wO3A9bS5wYXJlbnROb2RlfW09dH1iPS0xPT09Z3x8LTE9PT1oP251bGw6e3N0YXJ0OmcsZW5kOmh9fWVsc2UgYj1udWxsfWI9Ynx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYj1udWxsO3JldHVybntmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmJ9fVxuZnVuY3Rpb24gUWQoYSl7dmFyIGI9TmQoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJk1kKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZPZChjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1MZChjLGYpO3ZhciBnPUxkKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUmQ9UmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxTZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sVGQ9bnVsbCxVZD1udWxsLFZkPW51bGwsV2Q9ITE7XG5mdW5jdGlvbiBYZChhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKFdkfHxudWxsPT1UZHx8VGQhPT1KZChjKSlyZXR1cm4gbnVsbDtjPVRkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJk9kKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFZkJiZkZChWZCxjKT9udWxsOihWZD1jLGE9eS5nZXRQb29sZWQoU2Quc2VsZWN0LFVkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9VGQsUWEoYSksYSl9XG52YXIgWWQ9e2V2ZW50VHlwZXM6U2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9SWQoZSk7Zj1zYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0phKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoTWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpVGQ9ZSxVZD1iLFZkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpWZD1VZD1UZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpXZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIFdkPSExLFhkKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFJkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gWGQoYyxkKX1yZXR1cm4gbnVsbH19O0JhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dGE9S2E7dWE9SWE7dmE9SmE7QmEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjp4ZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46YWQsQ2hhbmdlRXZlbnRQbHVnaW46UGMsU2VsZWN0RXZlbnRQbHVnaW46WWQsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp6Yn0pO2Z1bmN0aW9uIFpkKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gJGQoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1aZChiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gYWUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3VjKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBiZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/eChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBjZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3goXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp4KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp1YyhjKX19XG5mdW5jdGlvbiBkZShhLGIpe3ZhciBjPXVjKGIudmFsdWUpLGQ9dWMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBlZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgZmU9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gZ2UoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBoZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/Z2UoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgaWU9dm9pZCAwLGplPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWZlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle2llPWllfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2llLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPWllLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIGtlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgbGU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sbWU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGxlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe21lLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7bGVbYl09bGVbYV19KX0pO2Z1bmN0aW9uIG5lKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxsZS5oYXNPd25Qcm9wZXJ0eShhKSYmbGVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gb2UoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bmUoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgcGU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHFlKGEsYil7YiYmKHBlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3goXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6eChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/eChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHJlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHNlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPUlkKGEpO2I9c2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOkVkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpFZChcImZvY3VzXCIsYSk7RWQoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOk9iKGUpJiZFZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYi5pbmRleE9mKGUpJiZFKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHRlKCl7fXZhciB1ZT1udWxsLHZlPW51bGw7XG5mdW5jdGlvbiB3ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24geGUoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfVxudmFyIHllPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHplPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBZT1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssQmU9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaztcbmZ1bmN0aW9uIENlKGEsYixjLGQsZSl7YVtHYV09ZTtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmeGMoYSxlKTtyZShjLGQpO2Q9cmUoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9vZShhLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/amUoYSxoKTpcImNoaWxkcmVuXCI9PT1nP2tlKGEsaCk6dGMoYSxnLGgsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOnljKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZGUoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz9hZShhLCEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/YWUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsXG4hMCk6YWUoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fWZ1bmN0aW9uIERlKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIEZlPVtdLEdlPS0xO2Z1bmN0aW9uIEYoYSl7MD5HZXx8KGEuY3VycmVudD1GZVtHZV0sRmVbR2VdPW51bGwsR2UtLSl9ZnVuY3Rpb24gRyhhLGIpe0dlKys7RmVbR2VdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgSGU9e30sSD17Y3VycmVudDpIZX0sST17Y3VycmVudDohMX0sSWU9SGU7XG5mdW5jdGlvbiBKZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEhlO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEooYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBLZShhKXtGKEksYSk7RihILGEpfWZ1bmN0aW9uIExlKGEpe0YoSSxhKTtGKEgsYSl9XG5mdW5jdGlvbiBNZShhLGIsYyl7SC5jdXJyZW50IT09SGU/eChcIjE2OFwiKTp2b2lkIDA7RyhILGIsYSk7RyhJLGMsYSl9ZnVuY3Rpb24gTmUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWUgaW4gYT92b2lkIDA6eChcIjEwOFwiLGljKGIpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxjLGQpfWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8SGU7SWU9SC5jdXJyZW50O0coSCxiLGEpO0coSSxJLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBQZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6eChcIjE2OVwiKTtjPyhiPU5lKGEsYixJZSksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEYoSSxhKSxGKEgsYSksRyhILGIsYSkpOkYoSSxhKTtHKEksYyxhKX12YXIgUWU9bnVsbCxSZT1udWxsO2Z1bmN0aW9uIFNlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBUZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtRZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7UmU9U2UoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFVlKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5jb250ZXh0RGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIEsoYSxiLGMsZCl7cmV0dXJuIG5ldyBVZShhLGIsYyxkKX1cbmZ1bmN0aW9uIFZlKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gV2UoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIFZlKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1jYylyZXR1cm4gMTE7aWYoYT09PWVjKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFhlKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9SyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcztjLnNpYmxpbmc9YS5zaWJsaW5nO1xuYy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gWWUoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKVZlKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIFhiOnJldHVybiBaZShjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGJjOnJldHVybiAkZShjLGV8MyxmLGIpO2Nhc2UgWWI6cmV0dXJuICRlKGMsZXwyLGYsYik7Y2FzZSBaYjpyZXR1cm4gYT1LKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9WmIsYS50eXBlPVpiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgZGM6cmV0dXJuIGE9SygxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1kYyxhLnR5cGU9ZGMsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlICRiOmc9MTA7YnJlYWsgYTtjYXNlIGFjOmc9OTticmVhayBhO2Nhc2UgY2M6Zz0xMTticmVhayBhO2Nhc2UgZWM6Zz1cbjE0O2JyZWFrIGE7Y2FzZSBmYzpnPTE2O2Q9bnVsbDticmVhayBhfXgoXCIxMzBcIixudWxsPT1hP2E6dHlwZW9mIGEsXCJcIil9Yj1LKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWmUoYSxiLGMsZCl7YT1LKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiAkZShhLGIsYyxkKXthPUsoOCxhLGQsYik7Yj0wPT09KGImMSk/WWI6YmM7YS5lbGVtZW50VHlwZT1iO2EudHlwZT1iO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBhZihhLGIsYyl7YT1LKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGJmKGEsYixjKXtiPUsoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9ZnVuY3Rpb24gY2YoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM8Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPmImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpO2RmKGIsYSl9XG5mdW5jdGlvbiBlZihhLGIpe2EuZGlkRXJyb3I9ITE7aWYoMD09PWIpYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTA7ZWxzZXtiPGEubGF0ZXN0UGluZ2VkVGltZSYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmxhdGVzdFBlbmRpbmdUaW1lOzAhPT1jJiYoYz5iP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmImJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7MD09PWM/Y2YoYSxiKTpiPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxjZihhLGIpKTpcbmI+YyYmY2YoYSxiKX1kZigwLGEpfWZ1bmN0aW9uIGZmKGEsYil7YS5kaWRFcnJvcj0hMTthLmxhdGVzdFBpbmdlZFRpbWU+PWImJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lLGQ9YS5sYXRlc3RQZW5kaW5nVGltZTtjPT09Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9ZD09PWI/YS5sYXRlc3RQZW5kaW5nVGltZT0wOmQ6ZD09PWImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWMpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7ZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7MD09PWM/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YS5sYXRlc3RTdXNwZW5kZWRUaW1lPWI6YzxiP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWI6ZD5iJiYoYS5sYXRlc3RTdXNwZW5kZWRUaW1lPWIpO2RmKGIsYSl9XG5mdW5jdGlvbiBnZihhLGIpe3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTthPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2M+YiYmKGI9Yyk7YT5iJiYoYj1hKTtyZXR1cm4gYn1mdW5jdGlvbiBkZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfWZ1bmN0aW9uIEwoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9XG5mdW5jdGlvbiBoZihhKXt2YXIgYj1hLl9yZXN1bHQ7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBiO2Nhc2UgMjp0aHJvdyBiO2Nhc2UgMDp0aHJvdyBiO2RlZmF1bHQ6YS5fc3RhdHVzPTA7Yj1hLl9jdG9yO2I9YigpO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSk7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBhLl9yZXN1bHQ7Y2FzZSAyOnRocm93IGEuX3Jlc3VsdDt9YS5fcmVzdWx0PWI7dGhyb3cgYjt9fXZhciBqZj0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIGtmKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIHRmPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09ZWQoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bGYoKTtkPW1mKGQsYSk7dmFyIGU9bmYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO29mKCk7cGYoYSxlKTtxZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnRhZz1yZjtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPWxmKCk7Yz1tZihjLGEpO3ZhciBkPW5mKGMpO2QudGFnPVxuc2Y7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO29mKCk7cGYoYSxkKTtxZihhLGMpfX07ZnVuY3Rpb24gdWYoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZGQoYyxkKXx8IWRkKGUsZik6ITB9XG5mdW5jdGlvbiB2ZihhLGIsYyl7dmFyIGQ9ITEsZT1IZTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1NKGYpOihlPUooYik/SWU6SC5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/SmUoYSxlKTpIZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPXRmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHdmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIHhmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9amY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1NKGYpOihmPUooYik/SWU6SC5jdXJyZW50LGUuY29udGV4dD1KZShhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2YoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmdGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoeWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciB6Zj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gQWYoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3goXCIzMDlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOngoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PWpmJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3goXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDp4KFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBCZihhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmeChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gQ2YoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1YZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWFmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1BZihhLGIsYyksZC5yZXR1cm49YSxkO2Q9WWUoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9QWYoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1iZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1aZShjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9YWYoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGM9WWUoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9QWYoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIFdiOnJldHVybiBiPWJmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZih6ZihiKXx8XG5oYyhiKSlyZXR1cm4gYj1aZShiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtCZihhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHQoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1YYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6bChhLGIsYyxkKTpudWxsO2Nhc2UgV2I6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGx9aWYoemYoYyl8fGhjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtCZihhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEEoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09WGI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTpsKGIsYSxkLGUpO2Nhc2UgV2I6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGsoYixhLGQsZSl9aWYoemYoZCl8fGhjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtCZihiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHYoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHE9Zyx1PWc9MCxCPW51bGw7bnVsbCE9PXEmJnU8aC5sZW5ndGg7dSsrKXtxLmluZGV4PnU/KEI9cSxxPW51bGwpOkI9cS5zaWJsaW5nO3ZhciB3PXQoZSxxLGhbdV0sayk7aWYobnVsbD09PXcpe251bGw9PT1xJiYocT1CKTticmVha31hJiZcbnEmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih3LGcsdSk7bnVsbD09PW0/bD13Om0uc2libGluZz13O209dztxPUJ9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihxPXAoZSxoW3VdLGspKWc9ZihxLGcsdSksbnVsbD09PW0/bD1xOm0uc2libGluZz1xLG09cTtyZXR1cm4gbH1mb3IocT1kKGUscSk7dTxoLmxlbmd0aDt1KyspaWYoQj1BKHEsZSx1LGhbdV0saykpYSYmbnVsbCE9PUIuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09Qi5rZXk/dTpCLmtleSksZz1mKEIsZyx1KSxudWxsPT09bT9sPUI6bS5zaWJsaW5nPUIsbT1CO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gUihlLGcsaCxrKXt2YXIgbD1oYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD94KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3goXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxxPWcsdT1nPTAsQj1udWxsLHc9aC5uZXh0KCk7bnVsbCE9PXEmJiF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHY9dChlLHEsdy52YWx1ZSxrKTtpZihudWxsPT09dil7cXx8KHE9Qik7YnJlYWt9YSYmcSYmbnVsbD09PXYuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHYsZyx1KTtudWxsPT09bT9sPXY6bS5zaWJsaW5nPXY7bT12O3E9Qn1pZih3LmRvbmUpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1wKGUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1BKHEsZSx1LHcudmFsdWUsayksbnVsbCE9PXcmJihhJiZudWxsIT09dy5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT13LmtleT91Olxudy5rZXkpLGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09WGImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgVmI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1YYjprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1YYj9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9QWYoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1YYj8oZD1aZShmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9WWUoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9QWYoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIFdiOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9YmYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWFmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKHpmKGYpKXJldHVybiB2KGEsZCxmLGgpO2lmKGhjKGYpKXJldHVybiBSKGEsZCxmLGgpO2wmJkJmKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUseChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIERmPUNmKCEwKSxFZj1DZighMSksRmY9e30sTj17Y3VycmVudDpGZn0sR2Y9e2N1cnJlbnQ6RmZ9LEhmPXtjdXJyZW50OkZmfTtmdW5jdGlvbiBJZihhKXthPT09RmY/eChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZihhLGIpe0coSGYsYixhKTtHKEdmLGEsYSk7RyhOLEZmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOmhlKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1oZShiLGMpfUYoTixhKTtHKE4sYixhKX1mdW5jdGlvbiBLZihhKXtGKE4sYSk7RihHZixhKTtGKEhmLGEpfWZ1bmN0aW9uIExmKGEpe0lmKEhmLmN1cnJlbnQpO3ZhciBiPUlmKE4uY3VycmVudCk7dmFyIGM9aGUoYixhLnR5cGUpO2IhPT1jJiYoRyhHZixhLGEpLEcoTixjLGEpKX1mdW5jdGlvbiBNZihhKXtHZi5jdXJyZW50PT09YSYmKEYoTixhKSxGKEdmLGEpKX1cbnZhciBOZj0wLE9mPTIsUGY9NCxRZj04LFJmPTE2LFNmPTMyLFRmPTY0LFVmPTEyOCxWZj1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLFdmPTAsWGY9bnVsbCxPPW51bGwsUD1udWxsLFlmPW51bGwsUT1udWxsLFpmPW51bGwsJGY9MCxhZz1udWxsLGJnPTAsY2c9ITEsZGc9bnVsbCxlZz0wO2Z1bmN0aW9uIGZnKCl7eChcIjMwN1wiKX1mdW5jdGlvbiBnZyhhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFiZChhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gaGcoYSxiLGMsZCxlLGYpe1dmPWY7WGY9YjtQPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO1ZmLmN1cnJlbnQ9bnVsbD09PVA/aWc6amc7Yj1jKGQsZSk7aWYoY2cpe2RvIGNnPSExLGVnKz0xLFA9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGwsWmY9WWYsYWc9UT1PPW51bGwsVmYuY3VycmVudD1qZyxiPWMoZCxlKTt3aGlsZShjZyk7ZGc9bnVsbDtlZz0wfVZmLmN1cnJlbnQ9a2c7YT1YZjthLm1lbW9pemVkU3RhdGU9WWY7YS5leHBpcmF0aW9uVGltZT0kZjthLnVwZGF0ZVF1ZXVlPWFnO2EuZWZmZWN0VGFnfD1iZzthPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDthP3goXCIzMDBcIik6dm9pZCAwO3JldHVybiBifWZ1bmN0aW9uIGxnKCl7VmYuY3VycmVudD1rZztXZj0wO1pmPVE9WWY9UD1PPVhmPW51bGw7JGY9MDthZz1udWxsO2JnPTA7Y2c9ITE7ZGc9bnVsbDtlZz0wfVxuZnVuY3Rpb24gbWcoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLHF1ZXVlOm51bGwsYmFzZVVwZGF0ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVE/WWY9UT1hOlE9US5uZXh0PWE7cmV0dXJuIFF9ZnVuY3Rpb24gbmcoKXtpZihudWxsIT09WmYpUT1aZixaZj1RLm5leHQsTz1QLFA9bnVsbCE9PU8/Ty5uZXh0Om51bGw7ZWxzZXtudWxsPT09UD94KFwiMzEwXCIpOnZvaWQgMDtPPVA7dmFyIGE9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxxdWV1ZTpPLnF1ZXVlLGJhc2VVcGRhdGU6Ty5iYXNlVXBkYXRlLG5leHQ6bnVsbH07UT1udWxsPT09UT9ZZj1hOlEubmV4dD1hO1A9Ty5uZXh0fXJldHVybiBRfWZ1bmN0aW9uIG9nKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gcGcoYSl7dmFyIGI9bmcoKSxjPWIucXVldWU7bnVsbD09PWM/eChcIjMxMVwiKTp2b2lkIDA7aWYoMDxlZyl7dmFyIGQ9Yy5kaXNwYXRjaDtpZihudWxsIT09ZGcpe3ZhciBlPWRnLmdldChjKTtpZih2b2lkIDAhPT1lKXtkZy5kZWxldGUoYyk7dmFyIGY9Yi5tZW1vaXplZFN0YXRlO2RvIGY9YShmLGUuYWN0aW9uKSxlPWUubmV4dDt3aGlsZShudWxsIT09ZSk7YmQoZixiLm1lbW9pemVkU3RhdGUpfHwocWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT09PWMubGFzdCYmKGIuYmFzZVN0YXRlPWYpO2MuZWFnZXJSZWR1Y2VyPWE7Yy5lYWdlclN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1kKXt2YXIgaD1lPW51bGwsXG5sPWQsaz0hMTtkb3t2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208V2Y/KGt8fChrPSEwLGg9ZyxlPWYpLG0+JGYmJigkZj1tKSk6Zj1sLmVhZ2VyUmVkdWNlcj09PWE/bC5lYWdlclN0YXRlOmEoZixsLmFjdGlvbik7Zz1sO2w9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09ZCk7a3x8KGg9ZyxlPWYpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9aDtiLmJhc2VTdGF0ZT1lO2MuZWFnZXJSZWR1Y2VyPWE7Yy5lYWdlclN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5lYWdlclJlZHVjZXIsbnVsbCE9PWQpKXRyeXt2YXIgbD1iLmVhZ2VyU3RhdGUsaz1kKGwsYyk7Zi5lYWdlclJlZHVjZXI9ZDtmLmVhZ2VyU3RhdGU9aztpZihiZChrLGwpKXJldHVybn1jYXRjaChtKXt9ZmluYWxseXt9cWYoYSxlKX19XG52YXIga2c9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZmcsdXNlQ29udGV4dDpmZyx1c2VFZmZlY3Q6ZmcsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmZyx1c2VMYXlvdXRFZmZlY3Q6ZmcsdXNlTWVtbzpmZyx1c2VSZWR1Y2VyOmZnLHVzZVJlZjpmZyx1c2VTdGF0ZTpmZyx1c2VEZWJ1Z1ZhbHVlOmZnfSxpZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe21nKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gc2coNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBzZyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gc2coNCxQZnxTZixhLGIpfSxcbnVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1tZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1tZygpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxlYWdlclJlZHVjZXI6YSxlYWdlclN0YXRlOmJ9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxlYWdlclJlZHVjZXI6b2csXG5lYWdlclN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNCxQZnxTZixhLGIpfSxcbnVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7ZT1mO3A9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShlKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PWU/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgcC5pcz9rPWsuY3JlYXRlRWxlbWVudChlLHtpczpwLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiZwLm11bHRpcGxlJiYoay5tdWx0aXBsZT0hMCkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxlKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjNcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCc7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IGpzb24ybXEgZnJvbSAnanNvbjJtcSc7XG5cbnZhciBNZWRpYVF1ZXJ5TGlzdCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE1lZGlhUXVlcnlMaXN0KHRhcmdldFdpbmRvdywgcXVlcnksIGxpc3RlbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHRoaXMubmF0aXZlTWVkaWFRdWVyeUxpc3QgPSB0YXJnZXRXaW5kb3cubWF0Y2hNZWRpYShxdWVyeSk7XG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlOyAvLyBTYWZhcmkgZG9lc24ndCBjbGVhciB1cCBsaXN0ZW5lciB3aXRoIHJlbW92ZUxpc3RlbmVyXG4gICAgLy8gd2hlbiB0aGUgbGlzdGVuZXIgaXMgYWxyZWFkeSB3YWl0aW5nIGluIHRoZSBldmVudCBxdWV1ZS5cbiAgICAvLyBIYXZpbmcgYW4gYWN0aXZlIGZsYWcgdG8gbWFrZSBzdXJlIHRoZSBsaXN0ZW5lciBpcyBub3QgY2FsbGVkXG4gICAgLy8gYWZ0ZXIgd2UgcmVtb3ZlTGlzdGVuZXIuXG5cbiAgICB0aGlzLmNhbmNlbGxhYmxlTGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5tYXRjaGVzID0gX3RoaXMubmF0aXZlTWVkaWFRdWVyeUxpc3QubWF0Y2hlcztcblxuICAgICAgaWYgKF90aGlzLmFjdGl2ZSkge1xuICAgICAgICBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMubmF0aXZlTWVkaWFRdWVyeUxpc3QuYWRkTGlzdGVuZXIodGhpcy5jYW5jZWxsYWJsZUxpc3RlbmVyKTtcbiAgICB0aGlzLm1hdGNoZXMgPSB0aGlzLm5hdGl2ZU1lZGlhUXVlcnlMaXN0Lm1hdGNoZXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVkaWFRdWVyeUxpc3QucHJvdG90eXBlO1xuXG4gIF9wcm90by5jYW5jZWwgPSBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgICB0aGlzLm5hdGl2ZU1lZGlhUXVlcnlMaXN0LnJlbW92ZUxpc3RlbmVyKHRoaXMuY2FuY2VsbGFibGVMaXN0ZW5lcik7XG4gIH07XG5cbiAgcmV0dXJuIE1lZGlhUXVlcnlMaXN0O1xufSgpO1xuXG4vKipcbiAqIENvbmRpdGlvbmFsbHkgcmVuZGVycyBiYXNlZCBvbiB3aGV0aGVyIG9yIG5vdCBhIG1lZGlhIHF1ZXJ5IG1hdGNoZXMuXG4gKi9cblxudmFyIE1lZGlhID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lZGlhLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZWRpYSgpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgXCJzdGF0ZVwiLCB7XG4gICAgICBtYXRjaGVzOiBfdGhpcy5wcm9wcy5kZWZhdWx0TWF0Y2hlc1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpLCBcInVwZGF0ZU1hdGNoZXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG1hdGNoZXMgPSBfdGhpcy5tZWRpYVF1ZXJ5TGlzdC5tYXRjaGVzO1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoZXM6IG1hdGNoZXNcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgb25DaGFuZ2UgPSBfdGhpcy5wcm9wcy5vbkNoYW5nZTtcblxuICAgICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICAgIG9uQ2hhbmdlKG1hdGNoZXMpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lZGlhLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAnb2JqZWN0JykgcmV0dXJuO1xuICAgIHZhciB0YXJnZXRXaW5kb3cgPSB0aGlzLnByb3BzLnRhcmdldFdpbmRvdyB8fCB3aW5kb3c7XG4gICAgISh0eXBlb2YgdGFyZ2V0V2luZG93Lm1hdGNoTWVkaWEgPT09ICdmdW5jdGlvbicpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnPE1lZGlhIHRhcmdldFdpbmRvdz4gZG9lcyBub3Qgc3VwcG9ydCBgbWF0Y2hNZWRpYWAuJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBxdWVyeSA9IHRoaXMucHJvcHMucXVlcnk7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSAhPT0gJ3N0cmluZycpIHF1ZXJ5ID0ganNvbjJtcShxdWVyeSk7XG4gICAgdGhpcy5tZWRpYVF1ZXJ5TGlzdCA9IG5ldyBNZWRpYVF1ZXJ5TGlzdCh0YXJnZXRXaW5kb3csIHF1ZXJ5LCB0aGlzLnVwZGF0ZU1hdGNoZXMpO1xuICAgIHRoaXMudXBkYXRlTWF0Y2hlcygpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMubWVkaWFRdWVyeUxpc3QuY2FuY2VsKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7XG4gICAgdmFyIG1hdGNoZXMgPSB0aGlzLnN0YXRlLm1hdGNoZXM7XG4gICAgcmV0dXJuIHJlbmRlciA/IG1hdGNoZXMgPyByZW5kZXIoKSA6IG51bGwgOiBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKG1hdGNoZXMpIDogIUFycmF5LmlzQXJyYXkoY2hpbGRyZW4pIHx8IGNoaWxkcmVuLmxlbmd0aCAvLyBQcmVhY3QgZGVmYXVsdHMgdG8gZW1wdHkgY2hpbGRyZW4gYXJyYXlcbiAgICA/IG1hdGNoZXMgPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGwgOiBudWxsIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTWVkaWE7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShNZWRpYSwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICBkZWZhdWx0TWF0Y2hlczogdHJ1ZVxufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVkaWEucHJvcFR5cGVzID0ge1xuICAgIGRlZmF1bHRNYXRjaGVzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBxdWVyeTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkKV0pLmlzUmVxdWlyZWQsXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm5vZGUsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgdGFyZ2V0V2luZG93OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuY1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBNZWRpYTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGIpICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIGFUeXBlID0gdHlwZW9mIGEgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGEpO1xuICB2YXIgYlR5cGUgPSB0eXBlb2YgYiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYik7XG5cbiAgaWYgKGFUeXBlICE9PSBiVHlwZSkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChhVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gYS52YWx1ZU9mKCk7XG4gICAgdmFyIGJWYWx1ZSA9IGIudmFsdWVPZigpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHZhciBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIHZhciBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gYUtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsOyIsImV4cG9ydCB2YXIgYWRkTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBoYXNCYXNlbmFtZSA9IGZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBwcmVmaXggKyAnKFxcXFwvfFxcXFw/fCN8JCknLCAnaScpLnRlc3QocGF0aCk7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBUcmFpbGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgcGFyc2VQYXRoID0gZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59O1xuXG5leHBvcnQgdmFyIGNyZWF0ZVBhdGggPSBmdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG5cblxuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcblxuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6ICc/JyArIHNlYXJjaDtcblxuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuXG4gIHJldHVybiBwYXRoO1xufTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuXG5leHBvcnQgdmFyIGNyZWF0ZUxvY2F0aW9uID0gZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbiA9IHZvaWQgMDtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcblxuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn07XG5cbmV4cG9ydCB2YXIgbG9jYXRpb25zQXJlRXF1YWwgPSBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn07IiwiaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5cbnZhciBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciA9IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICB2YXIgc2V0UHJvbXB0ID0gZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKTtcblxuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBjb25maXJtVHJhbnNpdGlvblRvID0gZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpO1xuXG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgdmFyIGFwcGVuZExpc3RlbmVyID0gZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgdmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKTtcbiAgICB9O1xuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIG5vdGlmeUxpc3RlbmVycyA9IGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyOyIsImV4cG9ydCB2YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuZXhwb3J0IHZhciBhZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUuYWRkRXZlbnRMaXN0ZW5lciA/IG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIHJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyID8gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgZ2V0Q29uZmlybWF0aW9uID0gZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIHJldHVybiBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7XG59OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNIaXN0b3J5ID0gZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcblxuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSA9IGZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggPSBmdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cbmV4cG9ydCB2YXIgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCA9IGZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn07IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBUcmFpbGluZ1NsYXNoLCBoYXNCYXNlbmFtZSwgc3RyaXBCYXNlbmFtZSwgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcbmltcG9ydCB7IGNhblVzZURPTSwgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciwgZ2V0Q29uZmlybWF0aW9uLCBzdXBwb3J0c0hpc3RvcnksIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UsIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIGdldEhpc3RvcnlTdGF0ZSA9IGZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xudmFyIGNyZWF0ZUJyb3dzZXJIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG5cbiAgdmFyIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBwcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIGdldERPTUxvY2F0aW9uID0gZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcblxuXG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcFN0YXRlID0gZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH07XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuXG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgdmFyIGNoZWNrRE9NTGlzdGVuZXJzID0gZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQnJvd3Nlckhpc3Rvcnk7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBzdHJpcExlYWRpbmdTbGFzaCwgc3RyaXBUcmFpbGluZ1NsYXNoLCBoYXNCYXNlbmFtZSwgc3RyaXBCYXNlbmFtZSwgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcbmltcG9ydCB7IGNhblVzZURPTSwgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciwgZ2V0Q29uZmlybWF0aW9uLCBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCB9IGZyb20gJy4vRE9NVXRpbHMnO1xuXG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxudmFyIGdldEhhc2hQYXRoID0gZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59O1xuXG52YXIgcHVzaEhhc2hQYXRoID0gZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn07XG5cbnZhciByZXBsYWNlSGFzaFBhdGggPSBmdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuXG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNsaWNlKDAsIGhhc2hJbmRleCA+PSAwID8gaGFzaEluZGV4IDogMCkgKyAnIycgKyBwYXRoKTtcbn07XG5cbnZhciBjcmVhdGVIYXNoSGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcblxuICB2YXIgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IHByb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHVuZGVmaW5lZCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG5cbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG5cbiAgdmFyIGdldERPTUxvY2F0aW9uID0gZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9O1xuXG4gIHZhciBoYW5kbGVQb3AgPSBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcblxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmV2ZXJ0UG9wID0gZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgIC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuXG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcblxuICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJyk7XG5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcblxuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJyk7XG5cbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgdmFyIGNoZWNrRE9NTGlzdGVuZXJzID0gZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVIYXNoSGlzdG9yeTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IHsgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcblxudmFyIGNsYW1wID0gZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xudmFyIGNyZWF0ZU1lbW9yeUhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBwcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB1bmRlZmluZWQgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBwcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB1bmRlZmluZWQgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG5cbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgY2FuR28gPSBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9O1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVNZW1vcnlIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaGlzdG9yeSA9IF9wcm9wcy5oaXN0b3J5O1xuXG5cbiAgICBpbnZhcmlhbnQoY2hpbGRyZW4gPT0gbnVsbCB8fCBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDEsIFwiQSA8Um91dGVyPiBtYXkgaGF2ZSBvbmx5IG9uZSBjaGlsZCBlbGVtZW50XCIpO1xuXG4gICAgLy8gRG8gdGhpcyBoZXJlIHNvIHdlIGNhbiBzZXRTdGF0ZSB3aGVuIGEgPFJlZGlyZWN0PiBjaGFuZ2VzIHRoZVxuICAgIC8vIGxvY2F0aW9uIGluIGNvbXBvbmVudFdpbGxNb3VudC4gVGhpcyBoYXBwZW5zIGUuZy4gd2hlbiBkb2luZ1xuICAgIC8vIHNlcnZlciByZW5kZXJpbmcgdXNpbmcgYSA8U3RhdGljUm91dGVyPi5cbiAgICB0aGlzLnVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgbWF0Y2g6IF90aGlzMi5jb21wdXRlTWF0Y2goaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyh0aGlzLnByb3BzLmhpc3RvcnkgPT09IG5leHRQcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIik7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuUm91dGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnJvd3NlclJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ccm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUhhc2hIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEhhc2hSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSksXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBIYXNoUm91dGVyOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSBcImhpc3RvcnlcIjtcblxudmFyIGlzTW9kaWZpZWRFdmVudCA9IGZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG52YXIgTGluayA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGluayk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNsaWNrKSBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICFfdGhpcy5wcm9wcy50YXJnZXQgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgdmFyIGhpc3RvcnkgPSBfdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgICAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgICAgICByZXBsYWNlID0gX3RoaXMkcHJvcHMucmVwbGFjZSxcbiAgICAgICAgICAgICAgdG8gPSBfdGhpcyRwcm9wcy50bztcblxuXG4gICAgICAgICAgaWYgKHJlcGxhY2UpIHtcbiAgICAgICAgICAgIGhpc3RvcnkucmVwbGFjZSh0byk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhpc3RvcnkucHVzaCh0byk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBMaW5rLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIHJlcGxhY2UgPSBfcHJvcHMucmVwbGFjZSxcbiAgICAgICAgdG8gPSBfcHJvcHMudG8sXG4gICAgICAgIGlubmVyUmVmID0gX3Byb3BzLmlubmVyUmVmLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFtcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuXG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpbnZhcmlhbnQodG8gIT09IHVuZGVmaW5lZCwgJ1lvdSBtdXN0IHNwZWNpZnkgdGhlIFwidG9cIiBwcm9wZXJ0eScpO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgaGlzdG9yeS5sb2NhdGlvbikgOiB0bztcblxuICAgIHZhciBocmVmID0gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHByb3BzLCB7IG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssIGhyZWY6IGhyZWYsIHJlZjogaW5uZXJSZWYgfSkpO1xuICB9O1xuXG4gIHJldHVybiBMaW5rO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5MaW5rLnByb3BUeXBlcyA9IHtcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZCxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSlcbn07XG5MaW5rLmRlZmF1bHRQcm9wcyA9IHtcbiAgcmVwbGFjZTogZmFsc2Vcbn07XG5MaW5rLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBwdXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgcmVwbGFjZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGNyZWF0ZUhyZWY6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgTGluazsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1lbW9yeVJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7IGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSwgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgTWVtb3J5Um91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgTWVtb3J5Um91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvTWVtb3J5Um91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IE1lbW9yeVJvdXRlcjsiLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG52YXIgcGF0dGVybkNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG52YXIgY29tcGlsZVBhdGggPSBmdW5jdGlvbiBjb21waWxlUGF0aChwYXR0ZXJuLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBjYWNoZSA9IHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gfHwgKHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gPSB7fSk7XG5cbiAgaWYgKGNhY2hlW3BhdHRlcm5dKSByZXR1cm4gY2FjaGVbcGF0dGVybl07XG5cbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlID0gcGF0aFRvUmVnZXhwKHBhdHRlcm4sIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgY29tcGlsZWRQYXR0ZXJuID0geyByZTogcmUsIGtleXM6IGtleXMgfTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXR0ZXJuXSA9IGNvbXBpbGVkUGF0dGVybjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gY29tcGlsZWRQYXR0ZXJuO1xufTtcblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGggcGF0dGVybi5cbiAqL1xudmFyIG1hdGNoUGF0aCA9IGZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHZhciBwYXJlbnQgPSBhcmd1bWVudHNbMl07XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiKSBvcHRpb25zID0geyBwYXRoOiBvcHRpb25zIH07XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcblxuXG4gIGlmIChwYXRoID09IG51bGwpIHJldHVybiBwYXJlbnQ7XG5cbiAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoKHBhdGgsIHsgZW5kOiBleGFjdCwgc3RyaWN0OiBzdHJpY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0pLFxuICAgICAgcmUgPSBfY29tcGlsZVBhdGgucmUsXG4gICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgdmFyIG1hdGNoID0gcmUuZXhlYyhwYXRobmFtZSk7XG5cbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG5cbiAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuXG4gIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRoOiBwYXRoLCAvLyB0aGUgcGF0aCBwYXR0ZXJuIHVzZWQgdG8gbWF0Y2hcbiAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLCAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICBpc0V4YWN0OiBpc0V4YWN0LCAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICByZXR1cm4gbWVtbztcbiAgICB9LCB7fSlcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUGF0aDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbnZhciBpc0VtcHR5Q2hpbGRyZW4gPSBmdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG52YXIgUm91dGUgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGUpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcywgX3RoaXMuY29udGV4dC5yb3V0ZXIpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZS5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMubG9jYXRpb24gfHwgdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChfcmVmLCByb3V0ZXIpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgICBwYXRoID0gX3JlZi5wYXRoLFxuICAgICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgICBzZW5zaXRpdmUgPSBfcmVmLnNlbnNpdGl2ZTtcblxuICAgIGlmIChjb21wdXRlZE1hdGNoKSByZXR1cm4gY29tcHV0ZWRNYXRjaDsgLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG5cbiAgICBpbnZhcmlhbnQocm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG9yIHdpdGhSb3V0ZXIoKSBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICB2YXIgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgICB2YXIgcGF0aG5hbWUgPSAobG9jYXRpb24gfHwgcm91dGUubG9jYXRpb24pLnBhdGhuYW1lO1xuXG4gICAgcmV0dXJuIG1hdGNoUGF0aChwYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBzdHJpY3Q6IHN0cmljdCwgZXhhY3Q6IGV4YWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5yZW5kZXIgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMsIG5leHRDb250ZXh0KSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXRjaDogdGhpcy5jb21wdXRlTWF0Y2gobmV4dFByb3BzLCBuZXh0Q29udGV4dC5yb3V0ZXIpXG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgbWF0Y2ggPSB0aGlzLnN0YXRlLm1hdGNoO1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gX3Byb3BzLmNvbXBvbmVudCxcbiAgICAgICAgcmVuZGVyID0gX3Byb3BzLnJlbmRlcjtcbiAgICB2YXIgX2NvbnRleHQkcm91dGVyID0gdGhpcy5jb250ZXh0LnJvdXRlcixcbiAgICAgICAgaGlzdG9yeSA9IF9jb250ZXh0JHJvdXRlci5oaXN0b3J5LFxuICAgICAgICByb3V0ZSA9IF9jb250ZXh0JHJvdXRlci5yb3V0ZSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IF9jb250ZXh0JHJvdXRlci5zdGF0aWNDb250ZXh0O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcbiAgICB2YXIgcHJvcHMgPSB7IG1hdGNoOiBtYXRjaCwgbG9jYXRpb246IGxvY2F0aW9uLCBoaXN0b3J5OiBoaXN0b3J5LCBzdGF0aWNDb250ZXh0OiBzdGF0aWNDb250ZXh0IH07XG5cbiAgICBpZiAoY29tcG9uZW50KSByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogbnVsbDtcblxuICAgIGlmIChyZW5kZXIpIHJldHVybiBtYXRjaCA/IHJlbmRlcihwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gY2hpbGRyZW4ocHJvcHMpO1xuXG4gICAgaWYgKGNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pKSByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlLnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwYXRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pXG59O1xuUm91dGUuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGUgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFJvdXRlIGZyb20gXCIuL1JvdXRlXCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi9MaW5rXCI7XG5cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cbnZhciBOYXZMaW5rID0gZnVuY3Rpb24gTmF2TGluayhfcmVmKSB7XG4gIHZhciB0byA9IF9yZWYudG8sXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICBnZXRJc0FjdGl2ZSA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFtcInRvXCIsIFwiZXhhY3RcIiwgXCJzdHJpY3RcIiwgXCJsb2NhdGlvblwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwic3R5bGVcIiwgXCJpc0FjdGl2ZVwiLCBcImFyaWEtY3VycmVudFwiXSk7XG5cbiAgdmFyIHBhdGggPSAodHlwZW9mIHRvID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YodG8pKSA9PT0gXCJvYmplY3RcIiA/IHRvLnBhdGhuYW1lIDogdG87XG5cbiAgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcbiAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgIGV4YWN0OiBleGFjdCxcbiAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKF9yZWYyKSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfcmVmMi5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaCA9IF9yZWYyLm1hdGNoO1xuXG4gICAgICB2YXIgaXNBY3RpdmUgPSAhIShnZXRJc0FjdGl2ZSA/IGdldElzQWN0aXZlKG1hdGNoLCBsb2NhdGlvbikgOiBtYXRjaCk7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgdG86IHRvLFxuICAgICAgICBjbGFzc05hbWU6IGlzQWN0aXZlID8gW2NsYXNzTmFtZSwgYWN0aXZlQ2xhc3NOYW1lXS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfSkuam9pbihcIiBcIikgOiBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZSwgYWN0aXZlU3R5bGUpIDogc3R5bGUsXG4gICAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGxcbiAgICAgIH0sIHJlc3QpKTtcbiAgICB9XG4gIH0pO1xufTtcblxuTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gIHRvOiBMaW5rLnByb3BUeXBlcy50byxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICBcImFyaWEtY3VycmVudFwiOiBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSlcbn07XG5cbk5hdkxpbmsuZGVmYXVsdFByb3BzID0ge1xuICBhY3RpdmVDbGFzc05hbWU6IFwiYWN0aXZlXCIsXG4gIFwiYXJpYS1jdXJyZW50XCI6IFwicGFnZVwiXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5XG4gKiBmcm9tIGEgc2NyZWVuIHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxudmFyIFByb21wdCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhQcm9tcHQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFByb21wdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvbXB0KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbiBlbmFibGUobWVzc2FnZSkge1xuICAgIGlmICh0aGlzLnVuYmxvY2spIHRoaXMudW5ibG9jaygpO1xuXG4gICAgdGhpcy51bmJsb2NrID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5LmJsb2NrKG1lc3NhZ2UpO1xuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMudW5ibG9jaykge1xuICAgICAgdGhpcy51bmJsb2NrKCk7XG4gICAgICB0aGlzLnVuYmxvY2sgPSBudWxsO1xuICAgIH1cbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgaWYgKHRoaXMucHJvcHMud2hlbikgdGhpcy5lbmFibGUodGhpcy5wcm9wcy5tZXNzYWdlKTtcbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIGlmIChuZXh0UHJvcHMud2hlbikge1xuICAgICAgaWYgKCF0aGlzLnByb3BzLndoZW4gfHwgdGhpcy5wcm9wcy5tZXNzYWdlICE9PSBuZXh0UHJvcHMubWVzc2FnZSkgdGhpcy5lbmFibGUobmV4dFByb3BzLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRpc2FibGUoKTtcbiAgICB9XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuZGlzYWJsZSgpO1xuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBQcm9tcHQ7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblByb21wdC5wcm9wVHlwZXMgPSB7XG4gIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICBtZXNzYWdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pLmlzUmVxdWlyZWRcbn07XG5Qcm9tcHQuZGVmYXVsdFByb3BzID0ge1xuICB3aGVuOiB0cnVlXG59O1xuUHJvbXB0LmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBibG9jazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBQcm9tcHQ7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBQcm9tcHQgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Qcm9tcHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgUHJvbXB0OyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbnZhciBwYXR0ZXJuQ2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbnZhciBjb21waWxlR2VuZXJhdG9yID0gZnVuY3Rpb24gY29tcGlsZUdlbmVyYXRvcihwYXR0ZXJuKSB7XG4gIHZhciBjYWNoZUtleSA9IHBhdHRlcm47XG4gIHZhciBjYWNoZSA9IHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gfHwgKHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gPSB7fSk7XG5cbiAgaWYgKGNhY2hlW3BhdHRlcm5dKSByZXR1cm4gY2FjaGVbcGF0dGVybl07XG5cbiAgdmFyIGNvbXBpbGVkR2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0dGVybik7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZEdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gY29tcGlsZWRHZW5lcmF0b3I7XG59O1xuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdHRlcm4gYW5kIHBhcmFtZXRlcnMuXG4gKi9cbnZhciBnZW5lcmF0ZVBhdGggPSBmdW5jdGlvbiBnZW5lcmF0ZVBhdGgoKSB7XG4gIHZhciBwYXR0ZXJuID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBcIi9cIjtcbiAgdmFyIHBhcmFtcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgaWYgKHBhdHRlcm4gPT09IFwiL1wiKSB7XG4gICAgcmV0dXJuIHBhdHRlcm47XG4gIH1cbiAgdmFyIGdlbmVyYXRvciA9IGNvbXBpbGVHZW5lcmF0b3IocGF0dGVybik7XG4gIHJldHVybiBnZW5lcmF0b3IocGFyYW1zLCB7IHByZXR0eTogdHJ1ZSB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlUGF0aDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgZ2VuZXJhdGVQYXRoIGZyb20gXCIuL2dlbmVyYXRlUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciB1cGRhdGluZyB0aGUgbG9jYXRpb24gcHJvZ3JhbW1hdGljYWxseVxuICogd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG52YXIgUmVkaXJlY3QgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUmVkaXJlY3QsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJlZGlyZWN0KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWRpcmVjdCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5pc1N0YXRpYyA9IGZ1bmN0aW9uIGlzU3RhdGljKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQucm91dGVyICYmIHRoaXMuY29udGV4dC5yb3V0ZXIuc3RhdGljQ29udGV4dDtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIGlmICh0aGlzLmlzU3RhdGljKCkpIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICghdGhpcy5pc1N0YXRpYygpKSB0aGlzLnBlcmZvcm0oKTtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIHZhciBwcmV2VG8gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuICAgIHZhciBuZXh0VG8gPSBjcmVhdGVMb2NhdGlvbih0aGlzLnByb3BzLnRvKTtcblxuICAgIGlmIChsb2NhdGlvbnNBcmVFcXVhbChwcmV2VG8sIG5leHRUbykpIHtcbiAgICAgIHdhcm5pbmcoZmFsc2UsIFwiWW91IHRyaWVkIHRvIHJlZGlyZWN0IHRvIHRoZSBzYW1lIHJvdXRlIHlvdSdyZSBjdXJyZW50bHkgb246IFwiICsgKFwiXFxcIlwiICsgbmV4dFRvLnBhdGhuYW1lICsgbmV4dFRvLnNlYXJjaCArIFwiXFxcIlwiKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXB1dGVUbyA9IGZ1bmN0aW9uIGNvbXB1dGVUbyhfcmVmKSB7XG4gICAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICAgIHRvID0gX3JlZi50bztcblxuICAgIGlmIChjb21wdXRlZE1hdGNoKSB7XG4gICAgICBpZiAodHlwZW9mIHRvID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRvO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5wZXJmb3JtID0gZnVuY3Rpb24gcGVyZm9ybSgpIHtcbiAgICB2YXIgaGlzdG9yeSA9IHRoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcbiAgICB2YXIgcHVzaCA9IHRoaXMucHJvcHMucHVzaDtcblxuICAgIHZhciB0byA9IHRoaXMuY29tcHV0ZVRvKHRoaXMucHJvcHMpO1xuXG4gICAgaWYgKHB1c2gpIHtcbiAgICAgIGhpc3RvcnkucHVzaCh0byk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpc3RvcnkucmVwbGFjZSh0byk7XG4gICAgfVxuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJlZGlyZWN0O1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5SZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gIGNvbXB1dGVkTWF0Y2g6IFByb3BUeXBlcy5vYmplY3QsIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD5cbiAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxufTtcblJlZGlyZWN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgcHVzaDogZmFsc2Vcbn07XG5SZWRpcmVjdC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHJlcGxhY2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSZWRpcmVjdDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJlZGlyZWN0IGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUmVkaXJlY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgUmVkaXJlY3Q7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBjcmVhdGVQYXRoIH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbnZhciBhZGRMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn07XG5cbnZhciBhZGRCYXNlbmFtZSA9IGZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG5cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59O1xuXG52YXIgc3RyaXBCYXNlbmFtZSA9IGZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG5cbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59O1xuXG52YXIgY3JlYXRlVVJMID0gZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufTtcblxudmFyIHN0YXRpY0hhbmRsZXIgPSBmdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpO1xuICB9O1xufTtcblxudmFyIG5vb3AgPSBmdW5jdGlvbiBub29wKCkge307XG5cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG52YXIgU3RhdGljUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RhdGljUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5jcmVhdGVIcmVmID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goX3RoaXMucHJvcHMuYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgIH0sIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQ7XG5cbiAgICAgIGNvbnRleHQuYWN0aW9uID0gXCJQVVNIXCI7XG4gICAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgICB9LCBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0O1xuXG4gICAgICBjb250ZXh0LmFjdGlvbiA9IFwiUkVQTEFDRVwiO1xuICAgICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gICAgfSwgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfSwgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IHtcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5jb250ZXh0XG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBiYXNlbmFtZSA9IF9wcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgY29udGV4dCA9IF9wcm9wcy5jb250ZXh0LFxuICAgICAgICBsb2NhdGlvbiA9IF9wcm9wcy5sb2NhdGlvbixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IHRoaXMuY3JlYXRlSHJlZixcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBoaXN0b3J5OiBoaXN0b3J5IH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5TdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG59O1xuU3RhdGljUm91dGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgYmFzZW5hbWU6IFwiXCIsXG4gIGxvY2F0aW9uOiBcIi9cIlxufTtcblN0YXRpY1JvdXRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU3RhdGljUm91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgU3RhdGljUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvU3RhdGljUm91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRpY1JvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3dpdGNoKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciByb3V0ZSA9IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGU7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG5cbiAgICB2YXIgbWF0Y2ggPSB2b2lkIDAsXG4gICAgICAgIGNoaWxkID0gdm9pZCAwO1xuICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChlbGVtZW50KSkge1xuICAgICAgICB2YXIgX2VsZW1lbnQkcHJvcHMgPSBlbGVtZW50LnByb3BzLFxuICAgICAgICAgICAgcGF0aFByb3AgPSBfZWxlbWVudCRwcm9wcy5wYXRoLFxuICAgICAgICAgICAgZXhhY3QgPSBfZWxlbWVudCRwcm9wcy5leGFjdCxcbiAgICAgICAgICAgIHN0cmljdCA9IF9lbGVtZW50JHByb3BzLnN0cmljdCxcbiAgICAgICAgICAgIHNlbnNpdGl2ZSA9IF9lbGVtZW50JHByb3BzLnNlbnNpdGl2ZSxcbiAgICAgICAgICAgIGZyb20gPSBfZWxlbWVudCRwcm9wcy5mcm9tO1xuXG4gICAgICAgIHZhciBwYXRoID0gcGF0aFByb3AgfHwgZnJvbTtcblxuICAgICAgICBjaGlsZCA9IGVsZW1lbnQ7XG4gICAgICAgIG1hdGNoID0gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCB7IHBhdGg6IHBhdGgsIGV4YWN0OiBleGFjdCwgc3RyaWN0OiBzdHJpY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0sIHJvdXRlLm1hdGNoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgeyBsb2NhdGlvbjogbG9jYXRpb24sIGNvbXB1dGVkTWF0Y2g6IG1hdGNoIH0pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Td2l0Y2guY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBTd2l0Y2ggZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Td2l0Y2hcIjtcblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgZ2VuZXJhdGVQYXRoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvZ2VuZXJhdGVQYXRoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlUGF0aDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiO1xuaW1wb3J0IFJvdXRlIGZyb20gXCIuL1JvdXRlXCI7XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cbnZhciB3aXRoUm91dGVyID0gZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKHJvdXRlQ29tcG9uZW50UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIHJvdXRlQ29tcG9uZW50UHJvcHMsIHtcbiAgICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG4gIEMucHJvcFR5cGVzID0ge1xuICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5mdW5jXG4gIH07XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IHdpdGhSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy93aXRoUm91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXI7IiwiaW1wb3J0IF9Ccm93c2VyUm91dGVyIGZyb20gXCIuL0Jyb3dzZXJSb3V0ZXJcIjtcbmV4cG9ydCB7IF9Ccm93c2VyUm91dGVyIGFzIEJyb3dzZXJSb3V0ZXIgfTtcbmltcG9ydCBfSGFzaFJvdXRlciBmcm9tIFwiLi9IYXNoUm91dGVyXCI7XG5leHBvcnQgeyBfSGFzaFJvdXRlciBhcyBIYXNoUm91dGVyIH07XG5pbXBvcnQgX0xpbmsgZnJvbSBcIi4vTGlua1wiO1xuZXhwb3J0IHsgX0xpbmsgYXMgTGluayB9O1xuaW1wb3J0IF9NZW1vcnlSb3V0ZXIgZnJvbSBcIi4vTWVtb3J5Um91dGVyXCI7XG5leHBvcnQgeyBfTWVtb3J5Um91dGVyIGFzIE1lbW9yeVJvdXRlciB9O1xuaW1wb3J0IF9OYXZMaW5rIGZyb20gXCIuL05hdkxpbmtcIjtcbmV4cG9ydCB7IF9OYXZMaW5rIGFzIE5hdkxpbmsgfTtcbmltcG9ydCBfUHJvbXB0IGZyb20gXCIuL1Byb21wdFwiO1xuZXhwb3J0IHsgX1Byb21wdCBhcyBQcm9tcHQgfTtcbmltcG9ydCBfUmVkaXJlY3QgZnJvbSBcIi4vUmVkaXJlY3RcIjtcbmV4cG9ydCB7IF9SZWRpcmVjdCBhcyBSZWRpcmVjdCB9O1xuaW1wb3J0IF9Sb3V0ZSBmcm9tIFwiLi9Sb3V0ZVwiO1xuZXhwb3J0IHsgX1JvdXRlIGFzIFJvdXRlIH07XG5pbXBvcnQgX1JvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcbmV4cG9ydCB7IF9Sb3V0ZXIgYXMgUm91dGVyIH07XG5pbXBvcnQgX1N0YXRpY1JvdXRlciBmcm9tIFwiLi9TdGF0aWNSb3V0ZXJcIjtcbmV4cG9ydCB7IF9TdGF0aWNSb3V0ZXIgYXMgU3RhdGljUm91dGVyIH07XG5pbXBvcnQgX1N3aXRjaCBmcm9tIFwiLi9Td2l0Y2hcIjtcbmV4cG9ydCB7IF9Td2l0Y2ggYXMgU3dpdGNoIH07XG5pbXBvcnQgX2dlbmVyYXRlUGF0aCBmcm9tIFwiLi9nZW5lcmF0ZVBhdGhcIjtcbmV4cG9ydCB7IF9nZW5lcmF0ZVBhdGggYXMgZ2VuZXJhdGVQYXRoIH07XG5pbXBvcnQgX21hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcbmV4cG9ydCB7IF9tYXRjaFBhdGggYXMgbWF0Y2hQYXRoIH07XG5pbXBvcnQgX3dpdGhSb3V0ZXIgZnJvbSBcIi4vd2l0aFJvdXRlclwiO1xuZXhwb3J0IHsgX3dpdGhSb3V0ZXIgYXMgd2l0aFJvdXRlciB9OyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgIG1peGluczogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgbmFtZTogdHJ1ZSxcbiAgICBsZW5ndGg6IHRydWUsXG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGNhbGxlcjogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgYXJndW1lbnRzOiB0cnVlLFxuICAgIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7IC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghUkVBQ1RfU1RBVElDU1trZXldICYmICFLTk9XTl9TVEFUSUNTW2tleV0gJiYgKCFibGFja2xpc3QgfHwgIWJsYWNrbGlzdFtrZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkgeyAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjNcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzA3XCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC4zXCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vIFRoaXMgbWV0aG9kIG9mIG9idGFpbmluZyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdCBuZWVkcyB0byBiZVxuLy8ga2VwdCBpZGVudGljYWwgdG8gdGhlIHdheSBpdCBpcyBvYnRhaW5lZCBpbiBydW50aW1lLmpzXG52YXIgZyA9IChmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMgfSkoKSB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG5cbi8vIFVzZSBgZ2V0T3duUHJvcGVydHlOYW1lc2AgYmVjYXVzZSBub3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgY2FsbGluZ1xuLy8gYGhhc093blByb3BlcnR5YCBvbiB0aGUgZ2xvYmFsIGBzZWxmYCBvYmplY3QgaW4gYSB3b3JrZXIuIFNlZSAjMTgzLlxudmFyIGhhZFJ1bnRpbWUgPSBnLnJlZ2VuZXJhdG9yUnVudGltZSAmJlxuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhnKS5pbmRleE9mKFwicmVnZW5lcmF0b3JSdW50aW1lXCIpID49IDA7XG5cbi8vIFNhdmUgdGhlIG9sZCByZWdlbmVyYXRvclJ1bnRpbWUgaW4gY2FzZSBpdCBuZWVkcyB0byBiZSByZXN0b3JlZCBsYXRlci5cbnZhciBvbGRSdW50aW1lID0gaGFkUnVudGltZSAmJiBnLnJlZ2VuZXJhdG9yUnVudGltZTtcblxuLy8gRm9yY2UgcmVldmFsdXRhdGlvbiBvZiBydW50aW1lLmpzLlxuZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vcnVudGltZVwiKTtcblxuaWYgKGhhZFJ1bnRpbWUpIHtcbiAgLy8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgcnVudGltZS5cbiAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBvbGRSdW50aW1lO1xufSBlbHNlIHtcbiAgLy8gUmVtb3ZlIHRoZSBnbG9iYWwgcHJvcGVydHkgYWRkZWQgYnkgcnVudGltZS5qcy5cbiAgdHJ5IHtcbiAgICBkZWxldGUgZy5yZWdlbmVyYXRvclJ1bnRpbWU7XG4gIH0gY2F0Y2goZSkge1xuICAgIGcucmVnZW5lcmF0b3JSdW50aW1lID0gdW5kZWZpbmVkO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbiEoZnVuY3Rpb24oZ2xvYmFsKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgdmFyIGluTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIjtcbiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lO1xuICBpZiAocnVudGltZSkge1xuICAgIGlmIChpbk1vZHVsZSkge1xuICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLFxuICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS5cbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcbiAgICB9XG4gICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhc1xuICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXJcbiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0LlxuICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBydW50aW1lLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIHJ1bnRpbWUubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi4gSWYgdGhlIFByb21pc2UgaXMgcmVqZWN0ZWQsIGhvd2V2ZXIsIHRoZVxuICAgICAgICAgIC8vIHJlc3VsdCBmb3IgdGhpcyBpdGVyYXRpb24gd2lsbCBiZSByZWplY3RlZCB3aXRoIHRoZSBzYW1lXG4gICAgICAgICAgLy8gcmVhc29uLiBOb3RlIHRoYXQgcmVqZWN0aW9ucyBvZiB5aWVsZGVkIFByb21pc2VzIGFyZSBub3RcbiAgICAgICAgICAvLyB0aHJvd24gYmFjayBpbnRvIHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24sIGFzIGlzIHRoZSBjYXNlXG4gICAgICAgICAgLy8gd2hlbiBhbiBhd2FpdGVkIFByb21pc2UgaXMgcmVqZWN0ZWQuIFRoaXMgZGlmZmVyZW5jZSBpblxuICAgICAgICAgIC8vIGJlaGF2aW9yIGJldHdlZW4geWllbGQgYW5kIGF3YWl0IGlzIGltcG9ydGFudCwgYmVjYXVzZSBpdFxuICAgICAgICAgIC8vIGFsbG93cyB0aGUgY29uc3VtZXIgdG8gZGVjaWRlIHdoYXQgdG8gZG8gd2l0aCB0aGUgeWllbGRlZFxuICAgICAgICAgIC8vIHJlamVjdGlvbiAoc3dhbGxvdyBpdCBhbmQgY29udGludWUsIG1hbnVhbGx5IC50aHJvdyBpdCBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgZ2VuZXJhdG9yLCBhYmFuZG9uIGl0ZXJhdGlvbiwgd2hhdGV2ZXIpLiBXaXRoXG4gICAgICAgICAgLy8gYXdhaXQsIGJ5IGNvbnRyYXN0LCB0aGVyZSBpcyBubyBvcHBvcnR1bml0eSB0byBleGFtaW5lIHRoZVxuICAgICAgICAgIC8vIHJlamVjdGlvbiByZWFzb24gb3V0c2lkZSB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBzbyB0aGVcbiAgICAgICAgICAvLyBvbmx5IG9wdGlvbiBpcyB0byB0aHJvdyBpdCBmcm9tIHRoZSBhd2FpdCBleHByZXNzaW9uLCBhbmRcbiAgICAgICAgICAvLyBsZXQgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiBoYW5kbGUgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICBmdW5jdGlvbiBlbnF1ZXVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPVxuICAgICAgICAvLyBJZiBlbnF1ZXVlIGhhcyBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gd2Ugd2FudCB0byB3YWl0IHVudGlsXG4gICAgICAgIC8vIGFsbCBwcmV2aW91cyBQcm9taXNlcyBoYXZlIGJlZW4gcmVzb2x2ZWQgYmVmb3JlIGNhbGxpbmcgaW52b2tlLFxuICAgICAgICAvLyBzbyB0aGF0IHJlc3VsdHMgYXJlIGFsd2F5cyBkZWxpdmVyZWQgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuIElmXG4gICAgICAgIC8vIGVucXVldWUgaGFzIG5vdCBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gaXQgaXMgaW1wb3J0YW50IHRvXG4gICAgICAgIC8vIGNhbGwgaW52b2tlIGltbWVkaWF0ZWx5LCB3aXRob3V0IHdhaXRpbmcgb24gYSBjYWxsYmFjayB0byBmaXJlLFxuICAgICAgICAvLyBzbyB0aGF0IHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gaGFzIHRoZSBvcHBvcnR1bml0eSB0byBkb1xuICAgICAgICAvLyBhbnkgbmVjZXNzYXJ5IHNldHVwIGluIGEgcHJlZGljdGFibGUgd2F5LiBUaGlzIHByZWRpY3RhYmlsaXR5XG4gICAgICAgIC8vIGlzIHdoeSB0aGUgUHJvbWlzZSBjb25zdHJ1Y3RvciBzeW5jaHJvbm91c2x5IGludm9rZXMgaXRzXG4gICAgICAgIC8vIGV4ZWN1dG9yIGNhbGxiYWNrLCBhbmQgd2h5IGFzeW5jIGZ1bmN0aW9ucyBzeW5jaHJvbm91c2x5XG4gICAgICAgIC8vIGV4ZWN1dGUgY29kZSBiZWZvcmUgdGhlIGZpcnN0IGF3YWl0LiBTaW5jZSB3ZSBpbXBsZW1lbnQgc2ltcGxlXG4gICAgICAgIC8vIGFzeW5jIGZ1bmN0aW9ucyBpbiB0ZXJtcyBvZiBhc3luYyBnZW5lcmF0b3JzLCBpdCBpcyBlc3BlY2lhbGx5XG4gICAgICAgIC8vIGltcG9ydGFudCB0byBnZXQgdGhpcyByaWdodCwgZXZlbiB0aG91Z2ggaXQgcmVxdWlyZXMgY2FyZS5cbiAgICAgICAgcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsXG4gICAgICAgICAgLy8gQXZvaWQgcHJvcGFnYXRpbmcgZmFpbHVyZXMgdG8gUHJvbWlzZXMgcmV0dXJuZWQgYnkgbGF0ZXJcbiAgICAgICAgICAvLyBpbnZvY2F0aW9ucyBvZiB0aGUgaXRlcmF0b3IuXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmdcbiAgICAgICAgKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfVxuXG4gICAgLy8gRGVmaW5lIHRoZSB1bmlmaWVkIGhlbHBlciBtZXRob2QgdGhhdCBpcyB1c2VkIHRvIGltcGxlbWVudCAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIChzZWUgZGVmaW5lSXRlcmF0b3JNZXRob2RzKS5cbiAgICB0aGlzLl9pbnZva2UgPSBlbnF1ZXVlO1xuICB9XG5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlKTtcbiAgQXN5bmNJdGVyYXRvci5wcm90b3R5cGVbYXN5bmNJdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIHJ1bnRpbWUuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIHJ1bnRpbWUuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3IoXG4gICAgICB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KVxuICAgICk7XG5cbiAgICByZXR1cm4gcnVudGltZS5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pXG4gICAgICA/IGl0ZXIgLy8gSWYgb3V0ZXJGbiBpcyBhIGdlbmVyYXRvciwgcmV0dXJuIHRoZSBmdWxsIGl0ZXJhdG9yLlxuICAgICAgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgICAgICB9KTtcbiAgfTtcblxuICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICB2YXIgc3RhdGUgPSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZykge1xuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUV4ZWN1dGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlQ29tcGxldGVkKSB7XG4gICAgICAgIGlmIChtZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHRocm93IGFyZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEJlIGZvcmdpdmluZywgcGVyIDI1LjMuMy4zLjMgb2YgdGhlIHNwZWM6XG4gICAgICAgIC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1nZW5lcmF0b3JyZXN1bWVcbiAgICAgICAgcmV0dXJuIGRvbmVSZXN1bHQoKTtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5tZXRob2QgPSBtZXRob2Q7XG4gICAgICBjb250ZXh0LmFyZyA9IGFyZztcblxuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcbiAgICAgICAgaWYgKGRlbGVnYXRlKSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG4gICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgcmV0dXJuIGRlbGVnYXRlUmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgICAvLyBTZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgICAgIGNvbnRleHQuc2VudCA9IGNvbnRleHQuX3NlbnQgPSBjb250ZXh0LmFyZztcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQpIHtcbiAgICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgICB0aHJvdyBjb250ZXh0LmFyZztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKTtcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInJldHVyblwiKSB7XG4gICAgICAgICAgY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgY29udGV4dC5hcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUV4ZWN1dGluZztcblxuICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG4gICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIikge1xuICAgICAgICAgIC8vIElmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gZnJvbSBpbm5lckZuLCB3ZSBsZWF2ZSBzdGF0ZSA9PT1cbiAgICAgICAgICAvLyBHZW5TdGF0ZUV4ZWN1dGluZyBhbmQgbG9vcCBiYWNrIGZvciBhbm90aGVyIGludm9jYXRpb24uXG4gICAgICAgICAgc3RhdGUgPSBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgID8gR2VuU3RhdGVDb21wbGV0ZWRcbiAgICAgICAgICAgIDogR2VuU3RhdGVTdXNwZW5kZWRZaWVsZDtcblxuICAgICAgICAgIGlmIChyZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICB9O1xuXG4gICAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgLy8gRGlzcGF0Y2ggdGhlIGV4Y2VwdGlvbiBieSBsb29waW5nIGJhY2sgYXJvdW5kIHRvIHRoZVxuICAgICAgICAgIC8vIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIENhbGwgZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdKGNvbnRleHQuYXJnKSBhbmQgaGFuZGxlIHRoZVxuICAvLyByZXN1bHQsIGVpdGhlciBieSByZXR1cm5pbmcgYSB7IHZhbHVlLCBkb25lIH0gcmVzdWx0IGZyb20gdGhlXG4gIC8vIGRlbGVnYXRlIGl0ZXJhdG9yLCBvciBieSBtb2RpZnlpbmcgY29udGV4dC5tZXRob2QgYW5kIGNvbnRleHQuYXJnLFxuICAvLyBzZXR0aW5nIGNvbnRleHQuZGVsZWdhdGUgdG8gbnVsbCwgYW5kIHJldHVybmluZyB0aGUgQ29udGludWVTZW50aW5lbC5cbiAgZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkge1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF07XG4gICAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBBIC50aHJvdyBvciAucmV0dXJuIHdoZW4gdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBubyAudGhyb3dcbiAgICAgIC8vIG1ldGhvZCBhbHdheXMgdGVybWluYXRlcyB0aGUgeWllbGQqIGxvb3AuXG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIEdwW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yXCI7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBHcFtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBHcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTtcblxuICAgIGlmICgxIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTtcbiAgICB9XG5cbiAgICBpZiAoMiBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTtcbiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTtcbiAgICB9XG5cbiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7XG4gICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307XG4gICAgcmVjb3JkLnR5cGUgPSBcIm5vcm1hbFwiO1xuICAgIGRlbGV0ZSByZWNvcmQuYXJnO1xuICAgIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gVGhlIHJvb3QgZW50cnkgb2JqZWN0IChlZmZlY3RpdmVseSBhIHRyeSBzdGF0ZW1lbnQgd2l0aG91dCBhIGNhdGNoXG4gICAgLy8gb3IgYSBmaW5hbGx5IGJsb2NrKSBnaXZlcyB1cyBhIHBsYWNlIHRvIHN0b3JlIHZhbHVlcyB0aHJvd24gZnJvbVxuICAgIC8vIGxvY2F0aW9ucyB3aGVyZSB0aGVyZSBpcyBubyBlbmNsb3NpbmcgdHJ5IHN0YXRlbWVudC5cbiAgICB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6IFwicm9vdFwiIH1dO1xuICAgIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKTtcbiAgICB0aGlzLnJlc2V0KHRydWUpO1xuICB9XG5cbiAgcnVudGltZS5rZXlzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAga2V5cy5yZXZlcnNlKCk7XG5cbiAgICAvLyBSYXRoZXIgdGhhbiByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggYSBuZXh0IG1ldGhvZCwgd2Uga2VlcFxuICAgIC8vIHRoaW5ncyBzaW1wbGUgYW5kIHJldHVybiB0aGUgbmV4dCBmdW5jdGlvbiBpdHNlbGYuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB3aGlsZSAoa2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXMucG9wKCk7XG4gICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgbmV4dC52YWx1ZSA9IGtleTtcbiAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUbyBhdm9pZCBjcmVhdGluZyBhbiBhZGRpdGlvbmFsIG9iamVjdCwgd2UganVzdCBoYW5nIHRoZSAudmFsdWVcbiAgICAgIC8vIGFuZCAuZG9uZSBwcm9wZXJ0aWVzIG9mZiB0aGUgbmV4dCBmdW5jdGlvbiBvYmplY3QgaXRzZWxmLiBUaGlzXG4gICAgICAvLyBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgbWluaWZpZXIgd2lsbCBub3QgYW5vbnltaXplIHRoZSBmdW5jdGlvbi5cbiAgICAgIG5leHQuZG9uZSA9IHRydWU7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYWJsZS5uZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkge1xuICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07XG4gICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuXG4gICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9O1xuICB9XG4gIHJ1bnRpbWUudmFsdWVzID0gdmFsdWVzO1xuXG4gIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9XG5cbiAgQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3I6IENvbnRleHQsXG5cbiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkge1xuICAgICAgdGhpcy5wcmV2ID0gMDtcbiAgICAgIHRoaXMubmV4dCA9IDA7XG4gICAgICAvLyBSZXNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpO1xuXG4gICAgICBpZiAoIXNraXBUZW1wUmVzZXQpIHtcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgICAgLy8gTm90IHN1cmUgYWJvdXQgdGhlIG9wdGltYWwgb3JkZXIgb2YgdGhlc2UgY29uZGl0aW9uczpcbiAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwidFwiICYmXG4gICAgICAgICAgICAgIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmXG4gICAgICAgICAgICAgICFpc05hTigrbmFtZS5zbGljZSgxKSkpIHtcbiAgICAgICAgICAgIHRoaXNbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgdmFyIHJvb3RFbnRyeSA9IHRoaXMudHJ5RW50cmllc1swXTtcbiAgICAgIHZhciByb290UmVjb3JkID0gcm9vdEVudHJ5LmNvbXBsZXRpb247XG4gICAgICBpZiAocm9vdFJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmVjb3JkLnR5cGUgPSBcInRocm93XCI7XG4gICAgICAgIHJlY29yZC5hcmcgPSBleGNlcHRpb247XG4gICAgICAgIGNvbnRleHQubmV4dCA9IGxvYztcblxuICAgICAgICBpZiAoY2F1Z2h0KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jayxcbiAgICAgICAgICAvLyB0aGVuIGxldCB0aGF0IGNhdGNoIGJsb2NrIGhhbmRsZSB0aGUgZXhjZXB0aW9uIG5vcm1hbGx5LlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gISEgY2F1Z2h0O1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gXCJyb290XCIpIHtcbiAgICAgICAgICAvLyBFeGNlcHRpb24gdGhyb3duIG91dHNpZGUgb2YgYW55IHRyeSBibG9jayB0aGF0IGNvdWxkIGhhbmRsZVxuICAgICAgICAgIC8vIGl0LCBzbyBzZXQgdGhlIGNvbXBsZXRpb24gdmFsdWUgb2YgdGhlIGVudGlyZSBmdW5jdGlvbiB0b1xuICAgICAgICAgIC8vIHRocm93IHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7XG4gICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIik7XG4gICAgICAgICAgdmFyIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpO1xuXG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmXG4gICAgICAgICAgICB0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgdmFyIGZpbmFsbHlFbnRyeSA9IGVudHJ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkgJiZcbiAgICAgICAgICAodHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgIHR5cGUgPT09IFwiY29udGludWVcIikgJiZcbiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJlxuICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhXG4gICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay5cbiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZWNvcmQudHlwZSA9IHR5cGU7XG4gICAgICByZWNvcmQuYXJnID0gYXJnO1xuXG4gICAgICBpZiAoZmluYWxseUVudHJ5KSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jO1xuICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGUocmVjb3JkKTtcbiAgICB9LFxuXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgcmVjb3JkLnR5cGUgPT09IFwiY29udGludWVcIikge1xuICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICB0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gXCJlbmRcIjtcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIgJiYgYWZ0ZXJMb2MpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gYWZ0ZXJMb2M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG5cbiAgICBmaW5pc2g6IGZ1bmN0aW9uKGZpbmFsbHlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkuZmluYWxseUxvYyA9PT0gZmluYWxseUxvYykge1xuICAgICAgICAgIHRoaXMuY29tcGxldGUoZW50cnkuY29tcGxldGlvbiwgZW50cnkuYWZ0ZXJMb2MpO1xuICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiY2F0Y2hcIjogZnVuY3Rpb24odHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uXG4gICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcblxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndFxuICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuXG4gICAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH07XG59KShcbiAgLy8gSW4gc2xvcHB5IG1vZGUsIHVuYm91bmQgYHRoaXNgIHJlZmVycyB0byB0aGUgZ2xvYmFsIG9iamVjdCwgZmFsbGJhY2sgdG9cbiAgLy8gRnVuY3Rpb24gY29uc3RydWN0b3IgaWYgd2UncmUgaW4gZ2xvYmFsIHN0cmljdCBtb2RlLiBUaGF0IGlzIHNhZGx5IGEgZm9ybVxuICAvLyBvZiBpbmRpcmVjdCBldmFsIHdoaWNoIHZpb2xhdGVzIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5LlxuICAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpXG4pO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjNcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgY2FtZWwyaHlwaGVuID0gZnVuY3Rpb24gKHN0cikge1xuICByZXR1cm4gc3RyXG4gICAgICAgICAgLnJlcGxhY2UoL1tBLVpdL2csIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICAgICAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudG9Mb3dlckNhc2UoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2FtZWwyaHlwaGVuOyIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKF9fREVWX18pIHtcbiAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uIHByaW50V2FybmluZyhmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDEgPyBsZW4gLSAxIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMTsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAxXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cblxuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KG51bGwsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciwgUm91dGUsIFN3aXRjaCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQgeyBIb21lIH0gZnJvbSAnLi92aWV3cy9ob21lL0hvbWUnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbiB9IGZyb20gJy4vY29tcG9uZW50cy9uYXZpZ2F0aW9uL05hdmlnYXRpb24nO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuLi9pbmRleC5zY3NzJztcbmltcG9ydCB7IFdhbG1hcnRDb250ZW50IH0gZnJvbSAnLi92aWV3cy9jYW1wYWlnbnMvd2FsbWFydC9XYWxtYXJ0JztcbmltcG9ydCB7IFRyaWJlQ29udGVudCB9IGZyb20gJy4vdmlld3MvY2FtcGFpZ25zL3RyaWJlL1RyaWJlJztcbmltcG9ydCB7IEFib3V0IH0gZnJvbSAnLi92aWV3cy9hYm91dC9BYm91dCc7XG5pbXBvcnQgeyBDYXJpYm91Q29udGVudCB9IGZyb20gJy4vdmlld3MvY2FtcGFpZ25zL2Nhcmlib3UvQ2FyaWJvdSc7XG5pbXBvcnQgeyBTaG9wdG9sb2d5Q29udGVudCB9IGZyb20gJy4vdmlld3MvY2FtcGFpZ25zL3Nob3B0b2xvZ3kvU2hvcHRvbG9neSc7XG5pbXBvcnQgRm9vdGVyIGZyb20gJy4vY29tcG9uZW50cy9mb290ZXIvRm9vdGVyJztcblxuY29uc3QgTm9NYXRjaCA9ICh7IGxvY2F0aW9uIH0pID0+IChcbiAgPGRpdj5cbiAgICA8aDM+Tm8gbWF0Y2ggZm9yIDxjb2RlPntsb2NhdGlvbi5wYXRobmFtZX08L2NvZGU+PC9oMz5cbiAgPC9kaXY+XG4pXG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJyb3dzZXJSb3V0ZXI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubmFrZWR9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc2l0ZVdyYXBwZXJ9PlxuICAgICAgICAgICAgPE5hdmlnYXRpb24gLz5cbiAgICAgICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIGNvbXBvbmVudD17SG9tZX0gLz5cbiAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvd2FsbWFydFwiIGNvbXBvbmVudD17V2FsbWFydENvbnRlbnR9IC8+XG4gICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3RyaWJlXCIgY29tcG9uZW50PXtUcmliZUNvbnRlbnR9IC8+XG4gICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL2Nhcmlib3VcIiBjb21wb25lbnQ9e0Nhcmlib3VDb250ZW50fSAvPlxuICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9zaG9wdG9sb2d5XCIgY29tcG9uZW50PXtTaG9wdG9sb2d5Q29udGVudH0gLz5cbiAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvYWJvdXRcIiBjb21wb25lbnQ9e0Fib3V0fSAvPlxuICAgICAgICAgICAgICA8Um91dGUgY29tcG9uZW50PXtOb01hdGNofSAvPlxuXG4gICAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8Rm9vdGVyIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZjJkM2U1NTM4MDJhNWU0MDBhZDZhZmI4Mzc3ZTViZTAuanBnXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYTJkNGNmNjdkZTM4NjU3Y2VhNWU1MDI0MGJhZGU5MTMucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiOWNmYmFkMTJkMjI0ZDY1MjNkODhhYmU0MGFmMWU1YzgucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYTdjZWM4N2NkNzg3YTVlZGZmZTRlNGVmOTE0NjYxNGQucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYjI2ZjhiNGNjZGM2NWNhMTgxYWJhZjMzZDRmZThkNWEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMWRiZmUwZjAyZjI2YzBhOWI3YTdjMjYxMDQyODM4OTkucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNWJhZjI0MmY3ZWJiYjc0YzAyZDcyODBkMzAxMTU1NmEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNzY1NzJjNjY3NzYwYjkzN2EyNmUzZGFmNWZlMDgyMGMucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNzQ1NmM0ODc4ZjViODU3NmUzZjEyMDk4OWViYzczNTIucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiOTQyZDFiOTQxZmRmZjZiNmQ0MWZjYzZlZDQwZWZlYjQucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNTIxMmNlODBmYWEzZjg5MDU5YzBkZGEwNDExYzA1MjEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiN2MwMGViOTlkNTM4ZTg5ZjQ1ZjIwNjI2YTRjYmZlYjMucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZTIxODlhYzRjNzExODBlMDQ0MzE4NDFlZWUzZmVhMzEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNTQwM2FmMjMwNmRiNzY1ZjI2ZmI0NmU3MGViZGExNjgucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZmVjMTFkZGExNGYyMmYwMTAyNDk5MmYxNzgxYzU0OTcucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNDE3ZGNjZjM3NjE0NzE4MDZmNjMzNDU5Mzg5OWE0ZjMucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYjRhYTAyYTYxNmYzYjA1NDQ1ZDE0ZmM3YTFlZGI0NDcucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNjRjYWRjYzQyMGZkNjg0OTJlNGFkZWU4ZTBlN2Q2YjQucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMmUxMDRiMDNmOTI2NWIzYzY2MWRkZWE5NzRhY2M1YjYucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiOWFkY2I1OTY5NmUxYzY5YTdiNWQ1OGI1YjJiNGE1NGYucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMWNmYTE4ZGQ4YjQwM2IwNGZkZjg4OGFkMGM0MzRmMjIucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMjQ1OWM0NzhkOTVmMDVmNTlhMWM2NmRjNGM1MzFjZWMucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZWFkNGU4M2YyY2RlYmQ2YzIwMmRmMTNkMzJmYzEzOTkucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMzA2MTJkNGYzZmE1NDhlYzE5NGQyMDgwMjBjNDAyYWQucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNDkwMmY2YWZiNTYwMTIzNzEyMTVlYWZlNzY0NWMyNGIucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMmQ5MGRjM2Q5NzMzZjI3NDk1Y2M3MGFkMjAyMjg0NjEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZWRlNmExNzVkODY3YzIwZDc1ZjgxZjExZDllNmQ5M2EucG5nXCI7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9ibG9jay5zY3NzJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuZXhwb3J0IGNsYXNzIERpc3BsYXlCbG9jayBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBpc0hvdmVyaW5nOiBmYWxzZVxuICAgIH1cbiAgICB0aGlzLm9uTW91c2VFbnRlciA9IHRoaXMub25Nb3VzZUVudGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbk1vdXNlTGVhdmUgPSB0aGlzLm9uTW91c2VMZWF2ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBvbk1vdXNlRW50ZXIoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGlzSG92ZXJpbmc6IHRydWUgfSk7XG4gIH1cblxuICBvbk1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGlzSG92ZXJpbmc6IGZhbHNlIH0pO1xuICB9XG4gIGhhbmRsZUNsaWNrKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaXRlVG9wJykuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXt0aGlzLnByb3BzLmNsYXNzTmFtZX1cbiAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDbGlja31cbiAgICAgICAgY2FtcGlkPXt0aGlzLnByb3BzLmNhbXBpZH1cbiAgICAgICAgZGVzYz17dGhpcy5wcm9wcy5kZXNjfVxuICAgICAgICBkZXNjMT17dGhpcy5wcm9wcy5kZXNjMX1cbiAgICAgICAgZGVzYzI9e3RoaXMucHJvcHMuZGVzYzJ9XG4gICAgICAgIG9uTW91c2VFbnRlcj17dGhpcy5vbk1vdXNlRW50ZXJ9XG4gICAgICAgIG9uTW91c2VMZWF2ZT17dGhpcy5vbk1vdXNlTGVhdmV9PlxuICAgICAgICB7dGhpcy5zdGF0ZS5pc0hvdmVyaW5nID9cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhvdmVyQmxvY2t9PlxuICAgICAgICAgICAgPGgxPnt0aGlzLnByb3BzLmRlc2N9PC9oMT5cbiAgICAgICAgICAgIDxoMT57dGhpcy5wcm9wcy5kZXNjMX08L2gxPlxuICAgICAgICAgICAgPGgyPnt0aGlzLnByb3BzLmRlc2MyfTwvaDI+XG4gICAgICAgICAgPC9kaXY+IDogJyd9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFdhbG1hcnRCbG9jayBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPExpbmsgdG89XCIvd2FsbWFydFwiPlxuICAgICAgICAgIDxEaXNwbGF5QmxvY2tcbiAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLndtYmxvY2t9XG4gICAgICAgICAgICBjYW1waWQ9eyd3YWxtYXJ0J31cbiAgICAgICAgICAgIGRlc2M9eydVU0VSIEVYUEVSSUVOQ0UnfVxuICAgICAgICAgICAgZGVzYzE9eydVU0VSIElOVEVSRkFDRSd9XG4gICAgICAgICAgICBkZXNjMj17J3ZpZXcgbW9yZSd9XG4gICAgICAgICAgPlxuXG4gICAgICAgICAgPC9EaXNwbGF5QmxvY2s+XG4gICAgICAgIDwvTGluaz5cblxuICAgICAgPC9kaXY+XG5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhcmlib3VCbG9jayBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPExpbmsgdG89XCIvY2FyaWJvdVwiPlxuICAgICAgICA8RGlzcGxheUJsb2NrXG4gICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuY2FyaWJsb2NrfVxuICAgICAgICAgIGNhbXBpZD17J2Nhcmlib3UnfVxuICAgICAgICAgIGRlc2M9eydTSE9QUEVSIE1BUktFVElORyd9XG4gICAgICAgICAgZGVzYzE9eydPTU5JLUNIQU5ORUwnfVxuICAgICAgICAgIGRlc2MyPXsndmlldyBtb3JlJ31cbiAgICAgICAgPlxuICAgICAgICA8L0Rpc3BsYXlCbG9jaz5cbiAgICAgIDwvTGluaz5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRyaWJlQmxvY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaW5rIHRvPVwiL3RyaWJlXCI+XG4gICAgICAgIDxEaXNwbGF5QmxvY2tcbiAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy50cmliZWJsb2NrfVxuICAgICAgICAgIGNhbXBpZD17J3RyaWJlJ31cbiAgICAgICAgICBkZXNjPXsnUEhPVE9HUkFQSFknfVxuICAgICAgICAgIGRlc2MxPXsnU0hPUFBFUiBNQVJLRVRJTkcnfVxuICAgICAgICAgIGRlc2MyPXsndmlldyBtb3JlJ31cbiAgICAgICAgPlxuICAgICAgICA8L0Rpc3BsYXlCbG9jaz5cbiAgICAgIDwvTGluaz5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNob3BCbG9jayBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPExpbmsgdG89XCIvc2hvcHRvbG9neVwiPlxuICAgICAgICA8RGlzcGxheUJsb2NrXG4gICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuc2hwYmxvY2t9XG4gICAgICAgICAgY2FtcGlkPXsnc2hvcHRvbG9neSd9XG4gICAgICAgICAgZGVzYz1cIklMTFVTVFJBVElPTlNcIlxuICAgICAgICAgIGRlc2MxPVwiR1JBUEhJQyBERVNJR05cIlxuICAgICAgICAgIGRlc2MyPXsndmlldyBtb3JlJ31cblxuICAgICAgICA+XG4gICAgICAgIDwvRGlzcGxheUJsb2NrPlxuICAgICAgPC9MaW5rPlxuICAgIClcbiAgfVxufVxuXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmxvY2suc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYmxvY2suc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Jsb2NrLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uL2Zvb3Rlci9mb290ZXIuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvb3RlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB0d2l0dGVyVXJsID0gJ2h0dHBzOi8vdHdpdHRlci5jb20vQW15X0FISEFfTW9tZW50JztcbiAgICByZXR1cm4gKFxuICAgICAgPGZvb3RlciBjbGFzc05hbWU9e3N0eWxlcy5mb290ZXJ9PlxuICAgICAgICA8aDI+JmNvcHk7IENPUFlSSUdIVCAyMDE5PC9oMj5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT17c3R5bGVzLnNvY2lhbH0+PGEgaHJlZj1cIm1haWx0bzphbXlwZWRpZEBvdXRsb29rLmNvbT9zdWJqZWN0PVdlYnNpdGUgTWFpbFwiPjxpIGNsYXNzTmFtZT1cImZhciBmYS1lbnZlbG9wZVwiPjwvaT48L2E+PC9oMj5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT17c3R5bGVzLnNvY2lhbH0+PGEgY2xhc3NOYW1lPXtzdHlsZXMuc29jaWFsTGlua30gaHJlZj17dHdpdHRlclVybH0gdGFyZ2V0PVwiX2JsYW5rXCI+PGkgY2xhc3NOYW1lPVwiZmFiIGZhLXR3aXR0ZXJcIj48L2k+PC9hPjwvaDI+XG4gICAgICAgIDxoMj5NYWRlIGJ5OjxhIGhyZWY9XCJtYWlsdG86cm9uYWxkcGVkaWRAbGl2ZS5jb20/c3ViamVjdD13ZWJfZGV2ZWxvcG1lbnRcIj4gVGhlIFNhZ2UgTWFnZXM8L2E+PC9oMj5cbiAgICAgIDwvZm9vdGVyPlxuICAgIClcbiAgfVxufVxuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Zvb3Rlci5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9mb290ZXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Zvb3Rlci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNZWRpYSBmcm9tICdyZWFjdC1tZWRpYSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vYnJlYWRjcnVtYnMuc2Nzcyc7XG5cbmV4cG9ydCBjbGFzcyBCcmVhZGNydW1icyBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cbiAgaGFuZGxlQ2xpY2soKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpdGVUb3AnKS5zY3JvbGxJbnRvVmlldygpO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5icmVhZGNydW1ic30gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDcnVtYmxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNydW1ibGV9PlxuICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuXG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDcnVtYmxlcyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jcnVtYmxlc30+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNZWRpYSBmcm9tICdyZWFjdC1tZWRpYSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vbmF2aWdhdGlvbi5zY3NzJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmNvbnN0IHVybHMgPSBbJy8nLCAnL2Fib3V0JywgJy9yZXN1bWUnXTtcblxuZXhwb3J0IGNsYXNzIE5hdmlnYXRpb24gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbmF2TWVudU9wZW46IGZhbHNlXG4gICAgfVxuICAgIHRoaXMub3Blbk1lbnUgPSB0aGlzLm9wZW5NZW51LmJpbmQodGhpcyk7XG4gICAgdGhpcy5jbG9zZU1lbnUgPSB0aGlzLmNsb3NlTWVudS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBvcGVuTWVudSgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgbmF2TWVudU9wZW46IHRydWUgfSk7XG4gIH1cbiAgY2xvc2VNZW51KCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBuYXZNZW51T3BlbjogZmFsc2UgfSk7XG4gIH1cblxuICBoYW5kbGVDbGljaygpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2l0ZVRvcCcpLnNjcm9sbEludG9WaWV3KCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG5hdk1lbnVPcGVuOiBmYWxzZSB9KTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxuYXYgY2xhc3NOYW1lPXtzdHlsZXMubmF2aWdhdGlvbkNvbnRhaW5lcn0+XG4gICAgICAgIDxoMSBjbGFzc05hbWU9e3N0eWxlcy5uYXZDb3B5fT5cbiAgICAgICAgICA8TGluayB0bz17dXJsc1swXX0+QW15IFBlZGlkPC9MaW5rPlxuICAgICAgICA8L2gxPlxuICAgICAgICA8TWVkaWEgcXVlcnk9e3sgbWF4V2lkdGg6IDU5OSB9fT5cbiAgICAgICAgICB7bWF0Y2hlcyA9PiBtYXRjaGVzID8gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUubmF2TWVudU9wZW4gPyA8QXJyb3dPcGVuIG9uQ2xpY2s9e3RoaXMuY2xvc2VNZW51fVxuICAgICAgICAgICAgICAvPiA6IDxBcnJvd0Nsb3NlZCBvbkNsaWNrPXt0aGlzLm9wZW5NZW51fSAvPn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoPHVsIGNsYXNzTmFtZT17c3R5bGVzLm5hdkxpc3R9PlxuICAgICAgICAgICAgPGxpIG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9IGNsYXNzTmFtZT17c3R5bGVzLm5hdkxpc3RJdGVtfT5cbiAgICAgICAgICAgICAgPExpbmsgdG89e3VybHNbMF19Pldvcms8L0xpbms+PC9saT5cbiAgICAgICAgICAgIDxsaSBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfSBjbGFzc05hbWU9e3N0eWxlcy5uYXZMaXN0SXRlbX0+XG4gICAgICAgICAgICAgIDxMaW5rIHRvPXt1cmxzWzFdfT5BYm91dDwvTGluaz48L2xpPlxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17c3R5bGVzLm5hdkxpc3RJdGVtfT48YSBocmVmPXt1cmxzWzJdfSBkb3dubG9hZCB0YXJnZXQ9XCJibGFua1wiPlJlc3VtZTwvYT48L2xpPlxuICAgICAgICAgIDwvdWw+KX1cbiAgICAgICAgPC9NZWRpYT5cbiAgICAgIDwvbmF2PlxuICAgIClcbiAgfVxufVxuXG5jbGFzcyBNb2JpbGVOYXYgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYXJyb3dDb250YWluZXJ9PlxuICAgICAgICA8dWwgY2xhc3NOYW1lPXtzdHlsZXMubmF2TGlzdE1vYmlsZX0+XG4gICAgICAgICAgPExpbmsgdG89e3VybHNbMF19PjxsaSBjbGFzc05hbWU9e3N0eWxlcy5uYXZMaXN0SXRlbU19Pldvcms8L2xpPjwvTGluaz5cbiAgICAgICAgICA8TGluayB0bz17dXJsc1sxXX0+PGxpIGNsYXNzTmFtZT17c3R5bGVzLm5hdkxpc3RJdGVtTX0+QWJvdXQ8L2xpPjwvTGluaz5cbiAgICAgICAgICA8YSBocmVmPXt1cmxzWzJdfT48bGkgY2xhc3NOYW1lPXtzdHlsZXMubmF2TGlzdEl0ZW1NfT5SZXN1bWU8L2xpPjwvYT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5cbmNsYXNzIEFycm93T3BlbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5hcnJvd0NvbnRhaW5lcn0+XG4gICAgICAgIDx1bCBjbGFzc05hbWU9e3N0eWxlcy5uYXZMaXN0TW9iaWxlfT5cbiAgICAgICAgICA8ZGl2IG9uQ2xpY2s9e3RoaXMucHJvcHMub25DbGlja30gY2xhc3NOYW1lPXtzdHlsZXMuYXJyb3dVcH0+PC9kaXY+XG4gICAgICAgICAgPE1vYmlsZU5hdiAvPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmNsYXNzIEFycm93Q2xvc2VkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmFycm93Q29udGFpbmVyfT5cbiAgICAgICAgPGRpdiBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQ2xpY2t9IGNsYXNzTmFtZT17c3R5bGVzLmFycm93VXAxfT48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2JyZWFkY3J1bWJzLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2JyZWFkY3J1bWJzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9icmVhZGNydW1icy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL25hdmlnYXRpb24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbmF2aWdhdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbmF2aWdhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnO1xuaW1wb3J0IHsgcmVuZGVyLCB1bm1vdW50Q29tcG9uZW50QXROb2RlIH0gZnJvbSAncmVhY3QtZG9tJztcblxuXG5mdW5jdGlvbiBzdGFydHVwKCkge1xuICBsZXQgdGFyZ2V0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG4gIFByb21pc2UucmVzb2x2ZShpbml0aWFsaXplQ2xpZW50KHRhcmdldE5vZGUpKVxuICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignQW4gZXJyb3Igb2NjdXJyZWQgd2hlbiBzdGFydGluZyB0aGUgY2xpZW50Jyk7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSk7XG59XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVDbGllbnQodGFyZ2V0Tm9kZSkge1xuICBjbGVhclRhcmdldE5vZGUodGFyZ2V0Tm9kZSk7XG4gIHJlbmRlcihcbiAgICA8QXBwIC8+LFxuICAgIHRhcmdldE5vZGUsXG4gICk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyVGFyZ2V0Tm9kZSh0YXJnZXROb2RlKSB7XG4gIHVubW91bnRDb21wb25lbnRBdE5vZGUodGFyZ2V0Tm9kZSk7XG59XG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KGZ1bmN0aW9uICgpIHtcbiAgICBzdGFydHVwKCk7XG4gIH0pO1xuICBzdGFydHVwKCk7XG59IGVsc2Uge1xuICBzdGFydHVwKCk7XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2Fib3V0LnNjc3MnO1xuaW1wb3J0IHsgQnJlYWRjcnVtYnMsIENydW1ibGVzLCBDcnVtYmxlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9uYXZpZ2F0aW9uL0JyZWFkY3J1bWJzJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmNvbnN0IHJlc3VtZVVybCA9ICdodHRwczovL3d3dy5kcm9wYm94LmNvbS9zL3NlMHo3NmpobzhlaDV6eC9BbXklMjBQZWRpZC1BcnQlMjBEaXJlY3Rvcl8yMDE5JTIwcmVzdW1lLnBkZj9kbD0wJmZiY2xpZD1Jd0FSMG5zY0JZVHczdzhjTW1zejlIMHkySHVqeHByOEJlRmdyaVkxNUF0WkZiMkUyWHdFbU1yeVJEV3YwJztcbmNvbnN0IGFib3V0UGFyYWdyYXBoVGV4dCA9ICdJdOKAmXMgc2ltcGxlIHJpZ2h0PyBEZXNpZ24gZXhwZXJpZW5jZXMgdGhhdCBjYW4gYnJlYWsgdGhyb3VnaCB0aGUgY2Fjb3Bob255IGFuZCBjcmVhdGUgYSB3YXkgdG8gZWZmaWNpZW50bHkgc2F0aXNmeSBjdXN0b21lcnMuIEhvd2V2ZXIsIHdoZW4gbmV3IG1hbmRhdG9yaWVzIHBvcCB1cCBvciBzaG9ydGVyIGRlYWRsaW5lcyBlbWVyZ2UsIHRoYXQgbG9naWNhbCB0aGlua2luZyBjYW4gZWFzaWx5IGdvIG91dCB0aGUgd2luZG93IGFuZCBiZSByZXBsYWNlZCBieTogYW54aWV0eSwgZmVhciBhbmQgYmFkIHdvcmsuIFRoYXTigJlzIHdoeSBpbiBldmVyeSBwcm9qZWN0IEkgYW0gYSBwYXJ0IG9mIEkgbWFrZSBpdCBhIHByaW9yaXR5IHRvIHRoaW5rIGJpZywgYW5kIHBsYW4gd2VsbC4gQSB0ZXN0ZWQgc3RyYXRlZ3kgdGhhdCBoYXMgZWZmZWN0aXZlbHkgY29tYmF0ZWQgc3Vic3RhbmNlbGVzcyBkZWNpc2lvbnMgYW5kIGF2b2lkZWQgY29zdGx5IHRpbWVsaW5lIHBpdGZhbGxzLiBJZiB0aGlzIGNvbGxhYm9yYXRpdmUgYW5kIHN0cmF0ZWdpYyBlbnZpcm9ubWVudCBzdWl0cyB5b3UsIGxldOKAmXMgY2hhdCBhYm91dCBob3cgd2UgY2FuIHNvbHZlIHlvdXIgYnJhbmQgYW5kIG1hcmtldGluZyBwcm9ibGVtcy4gVG9nZXRoZXIsIHdlIGNhbiB0aGluayBiaWcgYW5kIHBsYW4gd2VsbC4gSXTigJlzIHNpbXBsZSByaWdodD8gJ1xuZXhwb3J0IGNsYXNzIEFib3V0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmFib3V0Q29udGFpbmVyfT5cbiAgICAgICAgPEFib3V0Q29udGVudCAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQWJvdXRDb250ZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGxvb2tpbmdGb3IgPSAnRnJlZWxhbmNlIGFydCBkaXJlY3Rpb24gYW5kIHBhcnQtdGltZSBkZXNpZ24gd29yayc7XG4gICAgY29uc3QgdHdpdHRlclVybCA9ICdodHRwczovL3R3aXR0ZXIuY29tL0FteV9BSEhBX01vbWVudCc7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYWJvdXRDb250ZW50fT5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT17c3R5bGVzLmhlYWRlcn0+VGhpbmsgQmlnLiBQbGFuIFdlbGwuPC9oMT5cbiAgICAgICAgPHAgY2xhc3NOYW1lPXtzdHlsZXMuYmx1cmJ9PlxuICAgICAgICAgIHthYm91dFBhcmFncmFwaFRleHR9PC9wPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNvY2lhbFJvd30+XG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT17c3R5bGVzLnNvY2lhbH0+PGEgaHJlZj1cIm1haWx0bzphbXlwZWRpZEBvdXRsb29rLmNvbVwiPjxpIGNsYXNzTmFtZT1cImZhciBmYS1lbnZlbG9wZVwiPjwvaT48L2E+PC9oMz5cbiAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtzdHlsZXMuc29jaWFsfT48YSBjbGFzc05hbWU9e3N0eWxlcy5zb2NpYWxMaW5rfSBocmVmPXt0d2l0dGVyVXJsfSB0YXJnZXQ9XCJfYmxhbmtcIj48aSBjbGFzc05hbWU9XCJmYWIgZmEtdHdpdHRlclwiPjwvaT48L2E+PC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxCcmVhZGNydW1icz5cbiAgICAgICAgICA8Q3J1bWJsZXM+XG4gICAgICAgICAgICA8TGluayB0bz1cIi9zaG9wdG9sb2d5XCI+PENydW1ibGU+XG4gICAgICAgICAgICAgIDxoMT5HcmFwaGljIERlc2lnbjwvaDE+XG4gICAgICAgICAgICA8L0NydW1ibGU+PC9MaW5rPlxuICAgICAgICAgICAgPGEgaHJlZj17cmVzdW1lVXJsfSB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgICAgPENydW1ibGU+XG4gICAgICAgICAgICAgICAgPGgxPlJlc3VtZTwvaDE+XG4gICAgICAgICAgICAgIDwvQ3J1bWJsZT5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L0NydW1ibGVzPlxuICAgICAgICA8L0JyZWFkY3J1bWJzPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Fib3V0LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Fib3V0LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hYm91dC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9jYXJpYm91LnNjc3MnO1xuaW1wb3J0IHsgQnJlYWRjcnVtYnMsIENydW1ibGVzLCBDcnVtYmxlIH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9uYXZpZ2F0aW9uL0JyZWFkY3J1bWJzJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBjYjEgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL2Nhcmlib3UvMWNiLnBuZyc7XG5pbXBvcnQgY2IyIGZyb20gJy4uLy4uLy4uL2Fzc2V0cy9jYXJpYm91LzJjYi5wbmcnO1xuaW1wb3J0IGNiMyBmcm9tICcuLi8uLi8uLi9hc3NldHMvY2FyaWJvdS8zY2IucG5nJztcbmltcG9ydCBjYjQgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL2Nhcmlib3UvNGNiLnBuZyc7XG5pbXBvcnQgY2I1IGZyb20gJy4uLy4uLy4uL2Fzc2V0cy9jYXJpYm91LzVjYi5wbmcnO1xuaW1wb3J0IGNiNiBmcm9tICcuLi8uLi8uLi9hc3NldHMvY2FyaWJvdS82Y2IucG5nJztcbmltcG9ydCBjYjcgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL2Nhcmlib3UvN2NiLnBuZyc7XG5cbmV4cG9ydCBjbGFzcyBDYXJpYm91Q29udGVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jYXJpYm91Q29udGFpbmVyfT5cbiAgICAgICAgPENvbnRlbnRDb250YWluZXIgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY2xhc3MgQ29udGVudENvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHZpZGVvRW1iZWQgPSA8Y2VudGVyPjxpZnJhbWUgY2xhc3NOYW1lPXtzdHlsZXMudmlkZW99IHNyYz1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL3dLb0dYNHZKS2NnXCIgZnJhbWVCb3JkZXI9XCIwXCIgYWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiIGFsbG93RnVsbFNjcmVlbj48L2lmcmFtZT48L2NlbnRlcj5cbiAgICBjb25zdCBibHVyYkNvcHkgPSAnSW4gYSB3b3JsZCB3aGVyZSB5b3UgY2FuIGJlIGVhc2lseSBmb29sZWQgd2l0aCBpbmdyZWRpZW50cyB3ZSByZXdhcmRlZCB0aG9zZSB3aG8ga25ldyB3aGF0IGlzIHJlYWwgYW5kIG5vdCByZWFsLidcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5iZ0NvbnRhaW5lcn0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY29udGVudEJsb2NrfT5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmNhcmlib3VCYW5uZXJ9IHNyYz17Y2IxfSBhbHQ9XCJDYXJpYm91IENvZmZlZVwiIC8+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtzdHlsZXMuYmx1cmJ9PntibHVyYkNvcHl9PC9wPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuY2FyaWJvdUltYWdlfSBzcmM9e2NiMn0gYWx0PVwiQ2FyaWJvdSBDb2ZmZWVcIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuY2FyaWJvdUltYWdlfSBzcmM9e2NiM30gYWx0PVwiQ2FyaWJvdSBDb2ZmZWVcIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuY2FyaWJvdUltYWdlfSBzcmM9e2NiNH0gYWx0PVwiQ2FyaWJvdSBDb2ZmZWVcIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuY2FyaWJvdUltYWdlMX0gc3JjPXtjYjV9IGFsdD1cIkNhcmlib3UgQ29mZmVlXCIgLz5cbiAgICAgICAgICB7dmlkZW9FbWJlZH1cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLmNhcmlib3VJbWFnZTJ9IHNyYz17Y2I2fSBhbHQ9XCJDYXJpYm91IENvZmZlZVwiIC8+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy5jYXJpYm91U2l0ZX0gc3JjPXtjYjd9IGFsdD1cIkNhcmlib3UgQ29mZmVlXCIgLz5cbiAgICAgICAgICA8QnJlYWRjcnVtYnM+XG4gICAgICAgICAgICA8Q3J1bWJsZXM+XG4gICAgICAgICAgICAgIDxMaW5rIHRvPVwiL3RyaWJlXCI+XG4gICAgICAgICAgICAgICAgPENydW1ibGU+XG4gICAgICAgICAgICAgICAgICA8aDE+VHJpYmUgSHVtbXVzPC9oMT5cbiAgICAgICAgICAgICAgICA8L0NydW1ibGU+PC9MaW5rPlxuICAgICAgICAgICAgICA8TGluayB0bz1cIi93YWxtYXJ0XCI+XG4gICAgICAgICAgICAgICAgPENydW1ibGU+XG4gICAgICAgICAgICAgICAgICA8aDE+V2FsbWFydCBNdXNldW08L2gxPlxuICAgICAgICAgICAgICAgIDwvQ3J1bWJsZT48L0xpbms+XG4gICAgICAgICAgICA8L0NydW1ibGVzPlxuICAgICAgICAgIDwvQnJlYWRjcnVtYnM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9jYXJpYm91LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Nhcmlib3Uuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2Nhcmlib3Uuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc2hvcHRvbG9neS5zY3NzJztcbmltcG9ydCB7IEJyZWFkY3J1bWJzLCBDcnVtYmxlcywgQ3J1bWJsZSB9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9CcmVhZGNydW1icyc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgc2hvcDEgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3Nob3B0b2xvZ3kvMXNocC5wbmcnO1xuaW1wb3J0IHNob3AyIGZyb20gJy4uLy4uLy4uL2Fzc2V0cy9zaG9wdG9sb2d5LzJzaHAucG5nJztcbmltcG9ydCBzaG9wMyBmcm9tICcuLi8uLi8uLi9hc3NldHMvc2hvcHRvbG9neS8zc2hwLnBuZyc7XG5pbXBvcnQgc2hvcDQgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3Nob3B0b2xvZ3kvNHNocC5wbmcnO1xuaW1wb3J0IHNob3A1IGZyb20gJy4uLy4uLy4uL2Fzc2V0cy9zaG9wdG9sb2d5LzVzaHAucG5nJztcblxuXG5cblxuZXhwb3J0IGNsYXNzIFNob3B0b2xvZ3lDb250ZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNob3B0b2xvZ3lDb250YWluZXJ9PlxuICAgICAgICA8Q29udGVudENvbnRhaW5lciAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jbGFzcyBDb250ZW50Q29udGFpbmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJnQ29udGFpbmVyfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jb250ZW50QmxvY2t9PlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuc2hvcHRvbG9neUJhbm5lcn0gc3JjPXtzaG9wMX0gYWx0PVwiU2hvcHRvbG9neVwiIC8+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy5zaG9wdG9sb2d5SW1hZ2V9IHNyYz17c2hvcDJ9IGFsdD1cIlNob3B0b2xvZ3lcIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMuc2hvcHRvbG9neUltYWdlfSBzcmM9e3Nob3AzfSBhbHQ9XCJTaG9wdG9sb2d5XCIgLz5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLnNob3B0b2xvZ3lJbWFnZX0gc3JjPXtzaG9wNH0gYWx0PVwiU2hvcHRvbG9neVwiIC8+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy5zaG9wdG9sb2d5SW1hZ2V9IHNyYz17c2hvcDV9IGFsdD1cIlNob3B0b2xvZ3lcIiAvPlxuICAgICAgICAgIDxCcmVhZGNydW1icz5cbiAgICAgICAgICAgIDxDcnVtYmxlcz5cbiAgICAgICAgICAgICAgPExpbmsgdG89XCIvd2FsbWFydFwiPjxDcnVtYmxlPlxuICAgICAgICAgICAgICAgIDxoMT5XYWxtYXJ0IE11c2V1bTwvaDE+XG4gICAgICAgICAgICAgIDwvQ3J1bWJsZT48L0xpbms+XG4gICAgICAgICAgICAgIDxMaW5rIHRvPVwiL2Fib3V0XCI+XG4gICAgICAgICAgICAgICAgPENydW1ibGU+XG4gICAgICAgICAgICAgICAgICA8aDE+QWJvdXQgTWU8L2gxPlxuICAgICAgICAgICAgICAgIDwvQ3J1bWJsZT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9DcnVtYmxlcz5cbiAgICAgICAgICA8L0JyZWFkY3J1bWJzPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc2hvcHRvbG9neS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zaG9wdG9sb2d5LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zaG9wdG9sb2d5LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3RyaWJlLnNjc3MnO1xuaW1wb3J0IHRyYjEgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzF0aC5wbmcnO1xuaW1wb3J0IHRyYjIgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzJ0aC5wbmcnO1xuaW1wb3J0IHRyYjMgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzN0aC5wbmcnO1xuaW1wb3J0IHRyYjQgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzR0aC5wbmcnO1xuaW1wb3J0IHRyYjUgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzV0aC5wbmcnO1xuaW1wb3J0IHRyYjYgZnJvbSAnLi4vLi4vLi4vYXNzZXRzL3RyaWJlLzZ0aC5wbmcnO1xuaW1wb3J0IHsgQnJlYWRjcnVtYnMsIENydW1ibGVzLCBDcnVtYmxlIH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9uYXZpZ2F0aW9uL0JyZWFkY3J1bWJzJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuXG5leHBvcnQgY2xhc3MgVHJpYmVDb250ZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnRyaWJlQ29udGFpbmVyfT5cbiAgICAgICAgPENvbnRlbnRDb250YWluZXIgLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY2xhc3MgQ29udGVudENvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5iZ0NvbnRhaW5lcn0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY29udGVudEJsb2NrfT5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLnRyaWJlQmFubmVyfSBzcmM9e3RyYjF9IGFsdD1cIlRyaWJlIEh1bW11cyBMb2dvXCIgLz5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e3N0eWxlcy5ibHVyYn0+V2Ugc2V0IG91dCB0byBtYWtlIFRyaWJlIGh1bW11cyB0aGUgc25hY2sgb2YgY2hvaWNlcyBmb3IgYW55b25lIHdhbnRpbmcgdG8gdHJ5IHNvbWV0aGluZyBuZXcgYW5kIGRlbGljaW91cy48L3A+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy50cmliZUltYWdlfSBzcmM9e3RyYjJ9IGFsdD1cIlRyaWJlIEh1bW11cyBMb2dvXCIgLz5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLnRyaWJlSW1hZ2V9IHNyYz17dHJiM30gYWx0PVwiVHJpYmUgSHVtbXVzIExvZ29cIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMudHJpYmVJbWFnZUNhcnR9IHNyYz17dHJiNH0gYWx0PVwiVHJpYmUgSHVtbXVzIExvZ29cIiAvPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMudHJpYmVTaXRlfSBzcmM9e3RyYjV9IGFsdD1cIlRyaWJlIEh1bW11cyBMb2dvXCIgLz5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLnRyaWJlU2l0ZX0gc3JjPXt0cmI2fSBhbHQ9XCJUcmliZSBIdW1tdXMgTG9nb1wiIC8+XG4gICAgICAgICAgPEJyZWFkY3J1bWJzPlxuICAgICAgICAgICAgPENydW1ibGVzPlxuICAgICAgICAgICAgICA8TGluayB0bz1cIi9cIj48Q3J1bWJsZT5cbiAgICAgICAgICAgICAgICA8aDE+SG9tZTwvaDE+XG4gICAgICAgICAgICAgIDwvQ3J1bWJsZT48L0xpbms+XG4gICAgICAgICAgICAgIDxMaW5rIHRvPVwiL2Nhcmlib3VcIj5cbiAgICAgICAgICAgICAgICA8Q3J1bWJsZT5cbiAgICAgICAgICAgICAgICAgIDxoMT5DYXJpYm91IENvZmZlZTwvaDE+XG4gICAgICAgICAgICAgICAgPC9DcnVtYmxlPjwvTGluaz5cbiAgICAgICAgICAgIDwvQ3J1bWJsZXM+XG4gICAgICAgICAgPC9CcmVhZGNydW1icz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi90cmliZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi90cmliZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vdHJpYmUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vd2FsbWFydC5zY3NzJztcbmltcG9ydCB7IEJyZWFkY3J1bWJzLCBDcnVtYmxlcywgQ3J1bWJsZSB9IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9CcmVhZGNydW1icyc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgd21tMSBmcm9tICcuLi8uLi8uLi9hc3NldHMvd2FsbWFydC8xd21tLnBuZyc7XG5pbXBvcnQgd21tMiBmcm9tICcuLi8uLi8uLi9hc3NldHMvd2FsbWFydC8yd21tLnBuZyc7XG5pbXBvcnQgd21tMyBmcm9tICcuLi8uLi8uLi9hc3NldHMvd2FsbWFydC8zd21tLnBuZyc7XG5pbXBvcnQgd21tNCBmcm9tICcuLi8uLi8uLi9hc3NldHMvd2FsbWFydC80d21tLnBuZyc7XG5cbmNvbnN0IHdtbVVybEh0dHAgPSBcImh0dHA6Ly93d3cud2FsbWFydG11c2V1bS5jb20vdGltZWxpbmVcIlxuY29uc3Qgd21tVXJsID0gXCJ3d3cud2FsbWFydG11c2V1bS5jb20vdGltZWxpbmVcIlxuXG5leHBvcnQgY2xhc3MgV2FsbWFydENvbnRlbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMud2FsbWFydENvbnRhaW5lcn0+XG4gICAgICAgIDxDb250ZW50Q29udGFpbmVyIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNsYXNzIENvbnRlbnRDb250YWluZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmdDb250YWluZXJ9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNvbnRlbnRCbG9ja30+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy53bW1CYW5uZXJ9IHNyYz17d21tMX0gYWx0PVwiVGhlIFdhbG1hcnQgTXVzZWF1bVwiIC8+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT17c3R5bGVzLmJsdXJifT5BIGhpc3Rvcnkgb3ZlciA2MCB5ZWFycyBvbGQgbmVlZGVkIGEgc29sdXRpb24gdG8gdGVsbCBpdCdzIHN0b3J5IG9ubGluZS48L2gyPlxuICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPXtzdHlsZXMud21tSW1hZ2V9IHNyYz17d21tMn0gYWx0PVwiVGhlIFdhbG1hcnQgTXVzZWF1bVwiIC8+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9e3N0eWxlcy53bW1JbWFnZX0gc3JjPXt3bW0zfSBhbHQ9XCJUaGUgV2FsbWFydCBNdXNlYXVtXCIgLz5cbiAgICAgICAgICA8aDIgY2xhc3NOYW1lPXtzdHlsZXMuYmx1cmJ9PlNwYW4geWVhcnMgd2l0aCBhIHNpbXBsZSBzY3JvbGwgYW5kIGZpbmQgc3BhcmtzIG9mIGluc3BpcmF0aW9uLlxuICAgICAgICAgICAgRXhwbG9yZSB0aGUgZGVwdGhzIG9mIFdhbG1hcnQncyBzdG9yeSBhdDogPGEgY2xhc3NOYW1lPXtzdHlsZXMud21MaW5rfSBocmVmPXt3bW1VcmxIdHRwfSB0YXJnZXQ9J19ibGFuayc+IHt3bW1Vcmx9PC9hPlxuICAgICAgICAgIDwvaDI+XG5cbiAgICAgICAgICA8aW1nIGNsYXNzTmFtZT17c3R5bGVzLndtbVNpdGV9IHNyYz17d21tNH0gYWx0PVwiVGhlIFdhbG1hcnQgTXVzZWF1bVwiIC8+XG4gICAgICAgICAgPEJyZWFkY3J1bWJzPlxuICAgICAgICAgICAgPENydW1ibGVzPlxuICAgICAgICAgICAgICA8TGluayB0bz1cIi9jYXJpYm91XCI+PENydW1ibGU+XG4gICAgICAgICAgICAgICAgPGgxPkNhcmlib3UgQ29mZmVlPC9oMT5cbiAgICAgICAgICAgICAgPC9DcnVtYmxlPjwvTGluaz5cbiAgICAgICAgICAgICAgPExpbmsgdG89XCIvc2hvcHRvbG9neVwiPlxuICAgICAgICAgICAgICAgIDxDcnVtYmxlPlxuICAgICAgICAgICAgICAgICAgPGgxPkdyYXBoaWMgRGVzaWduPC9oMT5cbiAgICAgICAgICAgICAgICA8L0NydW1ibGU+PC9MaW5rPlxuICAgICAgICAgICAgPC9DcnVtYmxlcz5cbiAgICAgICAgICA8L0JyZWFkY3J1bWJzPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vd2FsbWFydC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi93YWxtYXJ0LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS03LTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi93YWxtYXJ0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgRGlzcGxheUJsb2NrLFxuICBXYWxtYXJ0QmxvY2ssXG4gIENhcmlib3VCbG9jayxcbiAgVHJpYmVCbG9jayxcbiAgU2hvcEJsb2NrXG59IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvYmxvY2svQmxvY2snO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2hvbWUuc2Nzcyc7XG5cbmV4cG9ydCBjbGFzcyBIb21lIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmhvbWVDb250YWluZXJ9PlxuICAgICAgICA8QmxvY2tHcmlkIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNsYXNzIEJsb2NrR3JpZCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5iZ0NvbnRhaW5lcn0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tSb3d9PlxuICAgICAgICAgIDxUcmliZUJsb2NrIC8+XG4gICAgICAgICAgPENhcmlib3VCbG9jayAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ibG9ja1Jvd30+XG4gICAgICAgICAgPFdhbG1hcnRCbG9jayAvPlxuICAgICAgICAgIDxTaG9wQmxvY2sgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYmxvY2tSb3d9PlxuICAgICAgICAgIDxEaXNwbGF5QmxvY2sgLz5cbiAgICAgICAgICA8RGlzcGxheUJsb2NrIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2hvbWUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaG9tZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaG9tZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==